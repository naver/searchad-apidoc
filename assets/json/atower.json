{
  "swagger": "2.0",
  "info": {
    "description": "Api Documentation",
    "version": "1.0",
    "title": "Api Documentation",
    "termsOfService": "urn:tos",
    "contact": {
      "name": "Contact Email"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "host": "localhost:10065",
  "basePath": "/",
  "tags": [
    {
      "name": "endpoint-mvc-adapter",
      "description": "Endpoint Mvc Adapter"
    },
    {
      "name": "l-7-check-controller",
      "description": "L 7 Check Controller"
    },
    {
      "name": "ManagedCustomerLink",
      "description": "Api Customer Link Controller"
    },
    {
      "name": "metrics-mvc-endpoint",
      "description": "Metrics Mvc Endpoint"
    },
    {
      "name": "History",
      "description": "History Controller"
    },
    {
      "name": "CustomerLinks",
      "description": "Customer Link Controller"
    },
    {
      "name": "basic-error-controller",
      "description": "Basic Error Controller"
    },
    {
      "name": "AccessControl",
      "description": "Access Control Controller"
    },
    {
      "name": "Customer",
      "description": "Customer Controller"
    },
    {
      "name": "maintenance-controller",
      "description": "Maintenance Controller"
    },
    {
      "name": "managed-customer-controller",
      "description": "Managed Customer Controller"
    },
    {
      "name": "ApiCustomerAuth",
      "description": "Api Customer Auth Controller"
    },
    {
      "name": "ApiLicenses",
      "description": "Api License Controller"
    },
    {
      "name": "api-my-clients-controller",
      "description": "Api My Clients Controller"
    },
    {
      "name": "api-managed-customer-controller",
      "description": "Api Managed Customer Controller"
    },
    {
      "name": "iims-controller",
      "description": "Iims Controller"
    },
    {
      "name": "Auth",
      "description": "Authentication Controller"
    },
    {
      "name": "ApiHistory",
      "description": "Api History Controller"
    },
    {
      "name": "environment-mvc-endpoint",
      "description": "Environment Mvc Endpoint"
    },
    {
      "name": "ApiKeys",
      "description": "Api Key Controller"
    },
    {
      "name": "CustomerAuth",
      "description": "Customer Auth Controller"
    },
    {
      "name": "health-mvc-endpoint",
      "description": "Health Mvc Endpoint"
    },
    {
      "name": "ManagerCandidates",
      "description": "Manager Candidates Controller"
    }
  ],
  "paths": {
    "/ac/resources": {
      "get": {
        "tags": [
          "AccessControl"
        ],
        "summary": "getResources",
        "operationId": "getResourcesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Collection«Resource»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/ac/roles": {
      "get": {
        "tags": [
          "AccessControl"
        ],
        "summary": "getRoles",
        "operationId": "getRolesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Collection«Role»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/ac/rules": {
      "get": {
        "tags": [
          "AccessControl"
        ],
        "summary": "getRules",
        "operationId": "getRulesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Collection«AccessRule»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "AccessControl"
        ],
        "summary": "createRule",
        "operationId": "createRuleUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "description": "input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAccessRuleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/ac/rules/{ruleId}": {
      "get": {
        "tags": [
          "AccessControl"
        ],
        "summary": "getRule",
        "operationId": "getRuleUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "ruleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "AccessControl"
        ],
        "summary": "deleteRule",
        "operationId": "deleteRuleUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "ruleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api-keys/{apiKey}/customer/{customerId}/token": {
      "get": {
        "tags": [
          "ApiKeys"
        ],
        "summary": "API Key 발급",
        "description": "내부 서비스 API 접근을 위한 토큰을 발급한다.",
        "operationId": "getTokenUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "description": "apiKey",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "customerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiToken"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api-keys/{apiKey}/secret-key": {
      "get": {
        "tags": [
          "ApiKeys"
        ],
        "summary": "API secretKey 조회",
        "description": "apiKey의 secretKey를 조회한다.",
        "operationId": "getSecretKeyUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "description": "apiKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api-keys/{apiKey}/{customerId}/resetSecretKey": {
      "put": {
        "tags": [
          "ApiKeys"
        ],
        "summary": "비밀키 재발급",
        "description": "API-KEY의 비밀키를 재발급 한다.",
        "operationId": "resetApiSecretKeyUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "description": "apiKey",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "customerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiCredentials"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api-keys/{customerId}/resetSecretKey": {
      "put": {
        "tags": [
          "ApiKeys"
        ],
        "summary": "비밀키 재발급",
        "description": "API-KEY의 비밀키를 재발급 한다.",
        "operationId": "resetApiSecretKeyUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "customerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiCredentials"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/customer-auth": {
      "post": {
        "tags": [
          "ApiCustomerAuth"
        ],
        "summary": "광고주 사용자 인증 저장",
        "description": "광고주 센터 사용자 인증 정보를 잠시동안 저장한다.",
        "operationId": "saveCustomerVerifierUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clientAppId",
            "in": "query",
            "description": "clientAppId",
            "required": true,
            "type": "string"
          },
          {
            "name": "certKey",
            "in": "query",
            "description": "certKey",
            "required": true,
            "type": "string"
          },
          {
            "name": "ttlsec",
            "in": "query",
            "description": "ttlsec",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VerifiedCustomerResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/customer-links": {
      "get": {
        "tags": [
          "ManagedCustomerLink"
        ],
        "summary": "list",
        "description": "Returns a list of clients or managers",
        "operationId": "getCustomerLinksUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type of customer's relationship",
            "required": false,
            "type": "string",
            "enum": [
              "MYMANAGERS",
              "MYCLIENTS"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ManagedCustomerLink"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "ManagedCustomerLink"
        ],
        "summary": "광고 관리 위탁",
        "description": "광고 관리 위탁 생성 #hidden",
        "operationId": "requestManagerUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "managerCustomerId",
            "description": "managerCustomerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "clientCustomerId",
            "in": "query",
            "description": "clientCustomerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "role",
            "in": "query",
            "description": "role",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "description",
            "in": "query",
            "description": "description",
            "required": false,
            "type": "ref"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedCustomerLink"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "ManagedCustomerLink"
        ],
        "summary": "광고 관리 위탁",
        "description": "광고 관리 위탁 삭제 #hidden",
        "operationId": "removeUsingDELETE_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "managerCustomerId",
            "in": "query",
            "description": "managerCustomerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "clientCustomerId",
            "in": "query",
            "description": "clientCustomerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/customer-links/{clientCustomerId}/token": {
      "get": {
        "tags": [
          "ManagedCustomerLink"
        ],
        "summary": "광고 관리 위탁",
        "description": "광고 관리 위탁 토큰 조회 #hidden",
        "operationId": "getTokenUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clientCustomerId",
            "in": "path",
            "description": "clientCustomerId",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuthToken"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/customer-links/{customerLinkId}": {
      "delete": {
        "tags": [
          "ManagedCustomerLink"
        ],
        "summary": "광고 관리 위탁",
        "description": "광고 관리 요청 삭제 #hidden",
        "operationId": "removeUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "customerLinkId",
            "in": "path",
            "description": "customerLinkId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/customer-links/{customerLinkId}/accept": {
      "put": {
        "tags": [
          "ManagedCustomerLink"
        ],
        "summary": "광고 관리 위탁",
        "description": "광고 관리 수락 #hidden",
        "operationId": "acceptLinkUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "customerLinkId",
            "in": "path",
            "description": "customerLinkId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/customer-links/{customerLinkId}/cancel": {
      "put": {
        "tags": [
          "ManagedCustomerLink"
        ],
        "summary": "광고 관리 위탁",
        "description": "광고 관리 요청 취소 #hidden",
        "operationId": "cancelLinkUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "customerLinkId",
            "in": "path",
            "description": "customerLinkId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/customer-links/{customerLinkId}/refuse": {
      "put": {
        "tags": [
          "ManagedCustomerLink"
        ],
        "summary": "광고 관리 위탁",
        "description": "광고 관리 거절 #hidden",
        "operationId": "refuseLinkUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "customerLinkId",
            "in": "path",
            "description": "customerLinkId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/customers/canManageClients/accept": {
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "광고주",
        "description": "광고주 관리 여부 설정",
        "operationId": "acceptClientManageUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/customers/canManageClients/refuse": {
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "광고주",
        "description": "광고주 관리 여부 설정",
        "operationId": "refuseClientManageUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/customers/me": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "광고주 조회",
        "description": "내 정보 조회",
        "operationId": "getMyCustomerUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/customers/{customerId}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "광고주",
        "description": "광고주 정보 조회",
        "operationId": "getCustomerUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "customerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": true
      }
    },
    "/api/history": {
      "get": {
        "tags": [
          "ApiHistory"
        ],
        "summary": "권한설정 변경 이력",
        "description": "권한설정 변경 이력을 조회한다.",
        "operationId": "getCustomerLinkHistoryUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "startDate",
            "required": true,
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "endDate",
            "required": true,
            "type": "string"
          },
          {
            "name": "maxRowsPerPage",
            "in": "query",
            "description": "maxRowsPerPage",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reverse",
            "in": "query",
            "description": "reverse",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/licenses": {
      "get": {
        "tags": [
          "ApiLicenses"
        ],
        "summary": "API License 조회",
        "description": "API License를 조회한다.",
        "operationId": "getApiKeysUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiCredentials"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "ApiLicenses"
        ],
        "summary": "API License 생성",
        "description": "API License를 생성한다.",
        "operationId": "createApiCredentialUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "overwrite",
            "in": "query",
            "description": "overwrite",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiCredentials"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/licenses/{apiKey}": {
      "delete": {
        "tags": [
          "ApiLicenses"
        ],
        "summary": "API License 삭제",
        "description": "API License를 삭제한다.",
        "operationId": "deleteApiCredentialUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "description": "apiKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiCredentials"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/licenses/{apiKey}/resetSecretKey": {
      "put": {
        "tags": [
          "ApiLicenses"
        ],
        "summary": "비밀키 재발급",
        "description": "API License의 비밀키를 재발급 한다.",
        "operationId": "resetApiSecretKeyUsingPUT_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "description": "apiKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiCredentials"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/managed-customers/me": {
      "get": {
        "tags": [
          "api-managed-customer-controller"
        ],
        "summary": "getMyCustomer",
        "operationId": "getMyCustomerUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/managed-customers/{id}": {
      "get": {
        "tags": [
          "api-managed-customer-controller"
        ],
        "summary": "getCustomer",
        "operationId": "getCustomerUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedCustomer"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/manager-candidate": {
      "get": {
        "tags": [
          "ManagerCandidates"
        ],
        "summary": "광고주",
        "description": "광고주를 관리할 수 있는 계정 목록 조회",
        "operationId": "getManagersCandidateUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "loginId",
            "in": "query",
            "description": "loginId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/manager-candidates": {
      "get": {
        "tags": [
          "ManagerCandidates"
        ],
        "summary": "광고주",
        "description": "광고주를 관리할 수 있는 계정 목록 조회",
        "operationId": "getManagersCandidatesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "loginId",
            "in": "query",
            "description": "loginId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Customer"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/my-clients": {
      "get": {
        "tags": [
          "api-my-clients-controller"
        ],
        "summary": "광고 관리 위탁 클라이언트",
        "description": "광고 위탁 관리 클라이언트 계정을 조회한다.",
        "operationId": "getCustomerLinksUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerLinkResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/auth/local": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Authentication",
        "description": "POS 계정 JWT 토큰 발행",
        "operationId": "getTokenUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "Referer",
            "in": "header",
            "description": "Referer",
            "required": false,
            "type": "string"
          },
          {
            "name": "User-Agent",
            "in": "header",
            "description": "User-Agent",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nidses",
            "description": "nidses",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "nnb",
            "description": "nnb",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "credentials",
            "description": "credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Credentials"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LoginToken"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/auth/local/extend": {
      "put": {
        "tags": [
          "Auth"
        ],
        "summary": "Authentication",
        "description": "POS 계정 JWT 토큰 갱신",
        "operationId": "updateTokenUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "refreshToken",
            "in": "query",
            "description": "refreshToken",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LoginToken"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/auth/local/logout": {
      "put": {
        "tags": [
          "Auth"
        ],
        "summary": "Authentication",
        "description": "로그아웃",
        "operationId": "logoutUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/auth/oauth/naver": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Authentication",
        "description": "네이버 로그인 요청",
        "operationId": "naverUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "redirectUrl",
            "in": "query",
            "description": "redirectUrl",
            "required": true,
            "type": "string"
          },
          {
            "name": "authType",
            "in": "query",
            "description": "authType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/auth/oauth/navercallback": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Authentication",
        "description": "네아로 callback 처리",
        "operationId": "navercallbackUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "description": "state",
            "required": true,
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "description": "code",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "model",
            "description": "model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Model"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/auth/oauth/navercallback2": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Authentication",
        "description": "네아로 callback2, 네아로 인증만을 목적",
        "operationId": "navercallback2UsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "description": "state",
            "required": true,
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "description": "code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/auth/{provider}/otp": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Authentication",
        "description": "One Time Password 생성",
        "operationId": "createOneTimePasswordUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "description": "provider",
            "required": true,
            "type": "string"
          },
          {
            "name": "oauth-email",
            "in": "query",
            "description": "oauth-email",
            "required": true,
            "type": "string"
          },
          {
            "name": "mobile-phone",
            "in": "query",
            "description": "mobile-phone",
            "required": true,
            "type": "string"
          },
          {
            "name": "expire",
            "in": "query",
            "description": "expire",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/auth/{provider}/otplogin": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Authentication",
        "description": "One Time Password 로그인",
        "operationId": "oneTimePasswordLoginUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "nidses",
            "description": "nidses",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "nnb",
            "description": "nnb",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provider",
            "in": "path",
            "description": "provider",
            "required": true,
            "type": "string"
          },
          {
            "name": "oauth-email",
            "in": "query",
            "description": "oauth-email",
            "required": true,
            "type": "string"
          },
          {
            "name": "otp",
            "in": "query",
            "description": "otp",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LoginToken"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/auth/{provider}/{providerId}": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Authentication",
        "description": "OAuth 계정 가입여부 확인",
        "operationId": "oAuthVerifyUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "description": "provider",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerId",
            "in": "path",
            "description": "providerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/auth/{provider}/{providerId}/connect": {
      "put": {
        "tags": [
          "Auth"
        ],
        "summary": "광고주 정보",
        "description": "광고주의 POS 계정과 OAuth 계정을 연결한다.",
        "operationId": "connectOAuthUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "description": "provider",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerId",
            "in": "path",
            "description": "providerId",
            "required": true,
            "type": "string"
          },
          {
            "name": "oauth-email",
            "in": "query",
            "description": "oauth-email",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/auth/{provider}/{providerId}/disconnect": {
      "put": {
        "tags": [
          "Auth"
        ],
        "summary": "광고주 정보",
        "description": "광고주의 POS 계정과 OAuth 계정의 연결을 취소한다.",
        "operationId": "disconnectOAuthUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "description": "provider",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerId",
            "in": "path",
            "description": "providerId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/auth/{provider}/{providerId}/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Authentication",
        "description": "OAuth 계정으로 로그인",
        "operationId": "naverIdLoginUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "description": "provider",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerId",
            "in": "path",
            "description": "providerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/auth/{provider}/{providerId}/modify": {
      "put": {
        "tags": [
          "Auth"
        ],
        "summary": "광고주 정보",
        "description": "등록된 OAuth 계정의 정보를 변경한다.",
        "operationId": "modifyOAuthUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "description": "provider",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerId",
            "in": "path",
            "description": "providerId",
            "required": true,
            "type": "string"
          },
          {
            "name": "oauth-email",
            "in": "query",
            "description": "oauth-email",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/autoconfig": {
      "get": {
        "tags": [
          "endpoint-mvc-adapter"
        ],
        "summary": "invoke",
        "operationId": "invokeUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/beans": {
      "get": {
        "tags": [
          "endpoint-mvc-adapter"
        ],
        "summary": "invoke",
        "operationId": "invokeUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configprops": {
      "get": {
        "tags": [
          "endpoint-mvc-adapter"
        ],
        "summary": "invoke",
        "operationId": "invokeUsingGET_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/customer-auth": {
      "get": {
        "tags": [
          "CustomerAuth"
        ],
        "summary": "광고주 사용자 인증 체크",
        "description": "광고주 센터에서 인증된 사용자 정보를 확인한다.",
        "operationId": "verifyCustomerUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clientAppId",
            "in": "query",
            "description": "clientAppId",
            "required": true,
            "type": "string"
          },
          {
            "name": "loginId",
            "in": "query",
            "description": "loginId",
            "required": true,
            "type": "string"
          },
          {
            "name": "certKey",
            "in": "query",
            "description": "certKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VerifiedCustomerResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/customer-links": {
      "get": {
        "tags": [
          "CustomerLinks"
        ],
        "summary": "광고 관리 위탁",
        "description": "내 계정과 연관된 관리자 또는 클라이언트 계정 정보 조회",
        "operationId": "getCustomerLinksUsingGET_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "description": "customerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ManagedCustomerLink"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "CustomerLinks"
        ],
        "summary": "광고 관리 위탁",
        "description": "광고 관리 위탁 생성",
        "operationId": "requestManagerUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "managerCustomerId",
            "description": "managerCustomerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "clientCustomerId",
            "in": "query",
            "description": "clientCustomerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "role",
            "in": "query",
            "description": "role",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "description",
            "in": "query",
            "description": "description",
            "required": false,
            "type": "string"
          },
          {
            "name": "linkStatus",
            "in": "query",
            "description": "linkStatus",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedCustomerLink"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "CustomerLinks"
        ],
        "summary": "광고 관리 위탁",
        "description": "광고 관리 위탁 삭제",
        "operationId": "removeUsingDELETE_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "managerCustomerId",
            "in": "query",
            "description": "managerCustomerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "clientCustomerId",
            "in": "query",
            "description": "clientCustomerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/customer-links/black-managers": {
      "get": {
        "tags": [
          "CustomerLinks"
        ],
        "summary": "광고 위탁 불가 계정",
        "description": "광고 위탁이 불가한 계정 목록을 조회합니다.",
        "operationId": "getBlackManagerCustomersUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerLinkBlack"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "CustomerLinks"
        ],
        "summary": "광고 위탁 불가 계정",
        "description": "광고 위탁이 불가한 계정을 추가합니다.",
        "operationId": "addBlackManagerCustomerUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "customerId",
            "description": "customerId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerLinkBlack"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/customer-links/black-managers/{customerId}": {
      "delete": {
        "tags": [
          "CustomerLinks"
        ],
        "summary": "광고 위탁 불가 계정",
        "description": "광고 위탁이 불가한 계정에서 제거합니다.",
        "operationId": "deleteBlackManagerCustomerUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "customerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/dump": {
      "get": {
        "tags": [
          "endpoint-mvc-adapter"
        ],
        "summary": "invoke",
        "operationId": "invokeUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/env": {
      "get": {
        "tags": [
          "environment-mvc-endpoint"
        ],
        "summary": "invoke",
        "operationId": "invokeUsingGET_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/env/{name}": {
      "get": {
        "tags": [
          "environment-mvc-endpoint"
        ],
        "summary": "value",
        "operationId": "valueUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/error": {
      "get": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "head": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingHEAD",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "options": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingOPTIONS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "error",
        "operationId": "errorUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "health-mvc-endpoint"
        ],
        "summary": "invoke",
        "operationId": "invokeUsingGET_8",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "principal",
            "description": "principal",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Principal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "head": {
        "tags": [
          "health-mvc-endpoint"
        ],
        "summary": "invoke",
        "operationId": "invokeUsingHEAD",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "principal",
            "description": "principal",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Principal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "health-mvc-endpoint"
        ],
        "summary": "invoke",
        "operationId": "invokeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "principal",
            "description": "principal",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Principal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "health-mvc-endpoint"
        ],
        "summary": "invoke",
        "operationId": "invokeUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "principal",
            "description": "principal",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Principal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "health-mvc-endpoint"
        ],
        "summary": "invoke",
        "operationId": "invokeUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "principal",
            "description": "principal",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Principal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "options": {
        "tags": [
          "health-mvc-endpoint"
        ],
        "summary": "invoke",
        "operationId": "invokeUsingOPTIONS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "principal",
            "description": "principal",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Principal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "health-mvc-endpoint"
        ],
        "summary": "invoke",
        "operationId": "invokeUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "principal",
            "description": "principal",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Principal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/history": {
      "get": {
        "tags": [
          "History"
        ],
        "summary": "권한설정 변경 이력",
        "description": "권한설정 변경 이력을 조회한다.",
        "operationId": "getCustomerLinkHistoryUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "description": "customerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "startDate",
            "required": true,
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "endDate",
            "required": true,
            "type": "string"
          },
          {
            "name": "maxRowsPerPage",
            "in": "query",
            "description": "maxRowsPerPage",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reverse",
            "in": "query",
            "description": "reverse",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/iims": {
      "get": {
        "tags": [
          "iims-controller"
        ],
        "summary": "setTokensAndRedirect",
        "operationId": "setTokensAndRedirectUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "model",
            "description": "model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Model"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/iims/callback": {
      "post": {
        "tags": [
          "iims-controller"
        ],
        "summary": "authIims2",
        "operationId": "authIims2UsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/info": {
      "get": {
        "tags": [
          "endpoint-mvc-adapter"
        ],
        "summary": "invoke",
        "operationId": "invokeUsingGET_4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/maintenance/watch-url": {
      "get": {
        "tags": [
          "maintenance-controller"
        ],
        "summary": "getWatchUrl",
        "operationId": "getWatchUrlUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "head": {
        "tags": [
          "maintenance-controller"
        ],
        "summary": "getWatchUrl",
        "operationId": "getWatchUrlUsingHEAD",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "maintenance-controller"
        ],
        "summary": "getWatchUrl",
        "operationId": "getWatchUrlUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "maintenance-controller"
        ],
        "summary": "getWatchUrl",
        "operationId": "getWatchUrlUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "maintenance-controller"
        ],
        "summary": "getWatchUrl",
        "operationId": "getWatchUrlUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "options": {
        "tags": [
          "maintenance-controller"
        ],
        "summary": "getWatchUrl",
        "operationId": "getWatchUrlUsingOPTIONS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "maintenance-controller"
        ],
        "summary": "getWatchUrl",
        "operationId": "getWatchUrlUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/managed-customers/{id}": {
      "get": {
        "tags": [
          "managed-customer-controller"
        ],
        "summary": "getCustomer",
        "operationId": "getCustomerUsingGET_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedCustomer"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mappings": {
      "get": {
        "tags": [
          "endpoint-mvc-adapter"
        ],
        "summary": "invoke",
        "operationId": "invokeUsingGET_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "tags": [
          "metrics-mvc-endpoint"
        ],
        "summary": "invoke",
        "operationId": "invokeUsingGET_9",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/metrics/{name}": {
      "get": {
        "tags": [
          "metrics-mvc-endpoint"
        ],
        "summary": "value",
        "operationId": "valueUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/monitor/l7check": {
      "get": {
        "tags": [
          "l-7-check-controller"
        ],
        "summary": "health",
        "operationId": "healthUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "head": {
        "tags": [
          "l-7-check-controller"
        ],
        "summary": "health",
        "operationId": "healthUsingHEAD",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "l-7-check-controller"
        ],
        "summary": "health",
        "operationId": "healthUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "l-7-check-controller"
        ],
        "summary": "health",
        "operationId": "healthUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "l-7-check-controller"
        ],
        "summary": "health",
        "operationId": "healthUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "options": {
        "tags": [
          "l-7-check-controller"
        ],
        "summary": "health",
        "operationId": "healthUsingOPTIONS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "l-7-check-controller"
        ],
        "summary": "health",
        "operationId": "healthUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/trace": {
      "get": {
        "tags": [
          "endpoint-mvc-adapter"
        ],
        "summary": "invoke",
        "operationId": "invokeUsingGET_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "ApiCredentials": {
      "properties": {
        "apiKey": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        }
      }
    },
    "Account": {
      "properties": {
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "bankAccountNum": {
          "type": "string"
        },
        "bankCd": {
          "type": "string"
        },
        "bankName": {
          "type": "string"
        },
        "billingMinBalance": {
          "type": "integer",
          "format": "int64"
        },
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "editTm": {
          "type": "string",
          "format": "date-time"
        },
        "minBalance": {
          "type": "integer",
          "format": "int64"
        },
        "nonRefundableAmt": {
          "type": "integer",
          "format": "int64"
        },
        "orgAmountBid": {
          "type": "integer",
          "format": "int64"
        },
        "orgAmountCc": {
          "type": "integer",
          "format": "int64"
        },
        "orgAmountCcReal": {
          "type": "integer",
          "format": "int64"
        },
        "orgAmountKshop": {
          "type": "integer",
          "format": "int64"
        },
        "orgAmountPp": {
          "type": "integer",
          "format": "int64"
        },
        "orgAmountPpFinal": {
          "type": "integer",
          "format": "int64"
        },
        "refundableAmt": {
          "type": "integer",
          "format": "int64"
        },
        "regTm": {
          "type": "string",
          "format": "date-time"
        },
        "totalCashAmt": {
          "type": "integer",
          "format": "int64"
        },
        "totalCashRepaymentAmt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "User": {
      "properties": {
        "acceptOauthTm": {
          "type": "string",
          "format": "date-time"
        },
        "apiUserKey": {
          "type": "string"
        },
        "certKey": {
          "type": "string"
        },
        "certKeyIssueTm": {
          "type": "string",
          "format": "date-time"
        },
        "delFlag": {
          "type": "integer",
          "format": "int64"
        },
        "delTm": {
          "type": "string",
          "format": "date-time"
        },
        "editTm": {
          "type": "string",
          "format": "date-time"
        },
        "employeeId": {
          "type": "string"
        },
        "enable": {
          "type": "integer",
          "format": "int32"
        },
        "isDormant": {
          "type": "integer",
          "format": "int32"
        },
        "isStaff": {
          "type": "integer",
          "format": "int32"
        },
        "loginId": {
          "type": "string"
        },
        "loginPasswd": {
          "type": "string"
        },
        "oauthEmail": {
          "type": "string"
        },
        "otp": {
          "type": "string"
        },
        "otpExpireTm": {
          "type": "string",
          "format": "date-time"
        },
        "passwdCvrtSt": {
          "type": "integer",
          "format": "int64"
        },
        "passwdEditTm": {
          "type": "string",
          "format": "date-time"
        },
        "posLoginId": {
          "type": "string"
        },
        "preLoginId": {
          "type": "string"
        },
        "preLoginPasswd": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "providerId": {
          "type": "string"
        },
        "recentLoginTm": {
          "type": "string",
          "format": "date-time"
        },
        "regTm": {
          "type": "string",
          "format": "date-time"
        },
        "useOauth": {
          "type": "integer",
          "format": "int32"
        },
        "userCaptcha": {
          "type": "string"
        },
        "userDesc": {
          "type": "string"
        },
        "userGroup": {
          "$ref": "#/definitions/UserGroup"
        },
        "userGroupId": {
          "type": "integer",
          "format": "int64"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        },
        "userKey": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "userTp": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Collection«Role»": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        }
      }
    },
    "Customer": {
      "properties": {
        "account": {
          "$ref": "#/definitions/Account"
        },
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "addr1": {
          "type": "string"
        },
        "addr2": {
          "type": "string"
        },
        "agreeAutopay": {
          "type": "integer",
          "format": "int32"
        },
        "agreeAutopayTm": {
          "type": "string",
          "format": "date-time"
        },
        "bidStatus": {
          "type": "string"
        },
        "birthdate": {
          "type": "string"
        },
        "blackList": {
          "type": "integer",
          "format": "int32"
        },
        "bmAgree": {
          "type": "integer",
          "format": "int32"
        },
        "canManageClients": {
          "type": "integer",
          "format": "int32"
        },
        "cpcBudgetLock": {
          "type": "integer",
          "format": "int32"
        },
        "cpcRefundLock": {
          "type": "integer",
          "format": "int32"
        },
        "customerAttr": {
          "$ref": "#/definitions/CustomerAttr"
        },
        "customerCo": {
          "$ref": "#/definitions/CustomerCo"
        },
        "customerCoId": {
          "type": "integer",
          "format": "int64"
        },
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "customerLevel": {
          "type": "integer",
          "format": "int32"
        },
        "delFlag": {
          "type": "integer",
          "format": "int32"
        },
        "delTm": {
          "type": "string",
          "format": "date-time"
        },
        "department": {
          "type": "string"
        },
        "dupInfo": {
          "type": "string"
        },
        "editTm": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "emailCertSt": {
          "type": "integer",
          "format": "int32"
        },
        "encryptedSsn": {
          "type": "string"
        },
        "extraCustomerName": {
          "type": "string"
        },
        "featureImg": {
          "type": "string"
        },
        "isDormant": {
          "type": "integer",
          "format": "int32"
        },
        "mobilePhone": {
          "type": "string"
        },
        "mpCertSt": {
          "type": "integer",
          "format": "int32"
        },
        "pausedReason": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "position": {
          "type": "string"
        },
        "recvBillTp": {
          "type": "integer",
          "format": "int32"
        },
        "recvEmailCfg": {
          "type": "integer",
          "format": "int32"
        },
        "recvSmsCfg": {
          "type": "integer",
          "format": "int32"
        },
        "regAuthKey": {
          "type": "string"
        },
        "regTm": {
          "type": "string",
          "format": "date-time"
        },
        "roleId": {
          "type": "integer",
          "format": "int64"
        },
        "sex": {
          "type": "string"
        },
        "siteMergeLock": {
          "type": "integer",
          "format": "int32"
        },
        "smsNotifyAmt": {
          "type": "integer",
          "format": "int64"
        },
        "smsNotifyFlag": {
          "type": "integer",
          "format": "int32"
        },
        "user": {
          "$ref": "#/definitions/User"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        },
        "zipCode": {
          "type": "string"
        }
      }
    },
    "ModelAndView": {
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "model": {
          "type": "object"
        },
        "modelMap": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "reference": {
          "type": "boolean"
        },
        "view": {
          "$ref": "#/definitions/View"
        },
        "viewName": {
          "type": "string"
        }
      }
    },
    "ManagedAccount": {
      "properties": {
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "editTm": {
          "type": "string",
          "format": "date-time"
        },
        "nonRefundableAmt": {
          "type": "integer",
          "format": "int64"
        },
        "refundableAmt": {
          "type": "integer",
          "format": "int64"
        },
        "regTm": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "VerifiedCustomerResponse": {
      "properties": {
        "clientAppId": {
          "type": "string"
        },
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "expiredTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "UserGroup": {
      "properties": {
        "userGroupDesc": {
          "type": "string"
        },
        "userGroupId": {
          "type": "integer",
          "format": "int64"
        },
        "userGroupName": {
          "type": "string"
        }
      }
    },
    "CustomerLinkBlack": {
      "properties": {
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "regTm": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Collection«AccessRule»": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        }
      }
    },
    "ManagedUser": {
      "properties": {
        "delFlag": {
          "type": "integer",
          "format": "int64"
        },
        "editTm": {
          "type": "string",
          "format": "date-time"
        },
        "enable": {
          "type": "integer",
          "format": "int32"
        },
        "isDormant": {
          "type": "integer",
          "format": "int32"
        },
        "loginId": {
          "type": "string"
        },
        "recentLoginTm": {
          "type": "string",
          "format": "date-time"
        },
        "regTm": {
          "type": "string",
          "format": "date-time"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CustomerCo": {
      "properties": {
        "bizRegCertId": {
          "type": "integer",
          "format": "int64"
        },
        "customerCoId": {
          "type": "integer",
          "format": "int64"
        },
        "customerCoName": {
          "type": "string"
        },
        "customerCoSt": {
          "type": "integer",
          "format": "int32"
        },
        "delFlag": {
          "type": "integer",
          "format": "int32"
        },
        "delTm": {
          "type": "string",
          "format": "date-time"
        },
        "editTm": {
          "type": "string",
          "format": "date-time"
        },
        "fax": {
          "type": "string"
        },
        "hasTaxNum": {
          "type": "integer",
          "format": "int32"
        },
        "isDormant": {
          "type": "integer",
          "format": "int32"
        },
        "isMassive": {
          "type": "integer",
          "format": "int32"
        },
        "phone": {
          "type": "string"
        },
        "regTm": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AccessRule": {
      "properties": {
        "accessLevel": {
          "type": "string"
        },
        "accessUri": {
          "type": "string"
        },
        "regTm": {
          "type": "string",
          "format": "date-time"
        },
        "resourceId": {
          "type": "integer",
          "format": "int64"
        },
        "resourceName": {
          "type": "string"
        },
        "roleId": {
          "type": "integer",
          "format": "int64"
        },
        "roleName": {
          "type": "string"
        },
        "ruleId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CreateAccessRuleRequest": {
      "properties": {
        "accessLevel": {
          "type": "string"
        },
        "accessUri": {
          "type": "string"
        },
        "resourceId": {
          "type": "integer",
          "format": "int64"
        },
        "roleId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CustomerAttr": {
      "properties": {
        "canUseCpcMass": {
          "type": "integer",
          "format": "int32"
        },
        "canUseForeignCard": {
          "type": "integer",
          "format": "int32"
        },
        "cpcCnt": {
          "type": "integer",
          "format": "int64"
        },
        "cpcDiscountRate": {
          "type": "number",
          "format": "float"
        },
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "enableOnlineTransfer": {
          "type": "integer",
          "format": "int32"
        },
        "enableTransferQuota": {
          "type": "integer",
          "format": "int32"
        },
        "isCpcDiscountable": {
          "type": "integer",
          "format": "int32"
        },
        "isMassive": {
          "type": "integer",
          "format": "int32"
        },
        "isPostpayAccount": {
          "type": "integer",
          "format": "int32"
        },
        "isSaleRightPermanent": {
          "type": "integer",
          "format": "int32"
        },
        "mainUrlId": {
          "type": "integer",
          "format": "int64"
        },
        "maxCpcCntPerAccount": {
          "type": "integer",
          "format": "int64"
        },
        "maxCpcCntPerGroup": {
          "type": "integer",
          "format": "int64"
        },
        "maxCpcGroupCntPerAccount": {
          "type": "integer",
          "format": "int64"
        },
        "maxNccAdgroupPerAccount": {
          "type": "integer",
          "format": "int64"
        },
        "maxNccAdgroupPerCampaign": {
          "type": "integer",
          "format": "int64"
        },
        "maxNccCampaignPerAccount": {
          "type": "integer",
          "format": "int64"
        },
        "maxNccKeywordPerAccount": {
          "type": "integer",
          "format": "int64"
        },
        "maxNccKeywordPerAdgroup": {
          "type": "integer",
          "format": "int64"
        },
        "maxNccKeywordPerCampaign": {
          "type": "integer",
          "format": "int64"
        },
        "maxUrlCntPerAccount": {
          "type": "integer",
          "format": "int64"
        },
        "penaltySt": {
          "type": "integer",
          "format": "int32"
        },
        "unlimitCpcCountPerAccount": {
          "type": "integer",
          "format": "int32"
        },
        "unlimitCpcCountPerGroup": {
          "type": "integer",
          "format": "int32"
        },
        "useTrackingUrl": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ManagedCustomer": {
      "properties": {
        "account": {
          "$ref": "#/definitions/ManagedAccount"
        },
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "agreeAutopay": {
          "type": "integer",
          "format": "int32"
        },
        "agreeAutopayTm": {
          "type": "string",
          "format": "date-time"
        },
        "bidStatus": {
          "type": "string"
        },
        "blackList": {
          "type": "integer",
          "format": "int32"
        },
        "canManageClients": {
          "type": "integer",
          "format": "int32"
        },
        "cpcBudgetLock": {
          "type": "integer",
          "format": "int32"
        },
        "cpcRefundLock": {
          "type": "integer",
          "format": "int32"
        },
        "customerAttr": {
          "$ref": "#/definitions/CustomerAttr"
        },
        "customerCo": {
          "$ref": "#/definitions/ManagedCustomerCo"
        },
        "customerCoId": {
          "type": "integer",
          "format": "int64"
        },
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "delFlag": {
          "type": "integer",
          "format": "int32"
        },
        "delTm": {
          "type": "string",
          "format": "date-time"
        },
        "editTm": {
          "type": "string",
          "format": "date-time"
        },
        "isDormant": {
          "type": "integer",
          "format": "int32"
        },
        "pausedReason": {
          "type": "string"
        },
        "regTm": {
          "type": "string",
          "format": "date-time"
        },
        "roleId": {
          "type": "integer",
          "format": "int64"
        },
        "smsNotifyFlag": {
          "type": "integer",
          "format": "int32"
        },
        "user": {
          "$ref": "#/definitions/ManagedUser"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ManagedCustomerLink": {
      "properties": {
        "clientCustomerDelFlag": {
          "type": "integer",
          "format": "int32",
          "description": "The deleted flag of client customer"
        },
        "clientCustomerId": {
          "type": "integer",
          "format": "int64",
          "description": "The unique ID of client customer"
        },
        "clientEnable": {
          "type": "integer",
          "format": "int32",
          "description": "The accessibilty of client customer to SearchAd system"
        },
        "clientLoginId": {
          "type": "string",
          "description": "The login ID of client customer"
        },
        "clientPenaltySt": {
          "type": "integer",
          "format": "int32",
          "description": "The penalty flag of client customer"
        },
        "customerLinkId": {
          "type": "string",
          "description": "The unique ID of the managedCustomerLink associated with me"
        },
        "description": {
          "type": "string",
          "description": "Description"
        },
        "editTm": {
          "type": "string",
          "format": "date-time",
          "description": "최근 수정 시각\nRecently modified time (RFC 3339 datetime)."
        },
        "isProxyAgency": {
          "type": "integer",
          "format": "int32",
          "description": "The company is proxy agency or not if the manager customer in the company."
        },
        "linkStatus": {
          "type": "integer",
          "format": "int64",
          "description": "Managed relation status"
        },
        "managerCompanyName": {
          "type": "string",
          "description": "The company name of the manager customer if the manager customer in the company."
        },
        "managerCustomerDelFlag": {
          "type": "integer",
          "format": "int32",
          "description": "The deleted flag of manager customer"
        },
        "managerCustomerId": {
          "type": "integer",
          "format": "int64",
          "description": "The unique ID of manager customer"
        },
        "managerEnable": {
          "type": "integer",
          "format": "int32",
          "description": "The accessibilty of manager customer to SearchAd system"
        },
        "managerLoginId": {
          "type": "string",
          "description": "The login ID of manager customer"
        },
        "managerName": {
          "type": "string",
          "description": "The name of manager customer"
        },
        "managerPenaltySt": {
          "type": "integer",
          "format": "int32",
          "description": "The penalty flag of manager customer"
        },
        "regTm": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the customer was created (RFC 3339 date-time)."
        },
        "roleId": {
          "type": "integer",
          "format": "int64",
          "description": "Role ID"
        }
      }
    },
    "ModelMap": {
      "type": "object",
      "additionalProperties": {
        "type": "object"
      }
    },
    "Resource": {
      "properties": {
        "regTm": {
          "type": "string",
          "format": "date-time"
        },
        "resourceId": {
          "type": "integer",
          "format": "int64"
        },
        "resourceName": {
          "type": "string"
        }
      }
    },
    "Collection«Resource»": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        }
      }
    },
    "ManagedCustomerCo": {
      "properties": {
        "bizRegCertId": {
          "type": "integer",
          "format": "int64"
        },
        "customerCoId": {
          "type": "integer",
          "format": "int64"
        },
        "customerCoSt": {
          "type": "integer",
          "format": "int32"
        },
        "delFlag": {
          "type": "integer",
          "format": "int32"
        },
        "delTm": {
          "type": "string",
          "format": "date-time"
        },
        "editTm": {
          "type": "string",
          "format": "date-time"
        },
        "hasTaxNum": {
          "type": "integer",
          "format": "int32"
        },
        "isDormant": {
          "type": "integer",
          "format": "int32"
        },
        "isMassive": {
          "type": "integer",
          "format": "int32"
        },
        "regTm": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "View": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        }
      }
    },
    "Role": {
      "properties": {
        "regTm": {
          "type": "string",
          "format": "date-time"
        },
        "roleId": {
          "type": "integer",
          "format": "int64"
        },
        "roleName": {
          "type": "string"
        }
      }
    },
    "AuthToken": {
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "ApiToken": {
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "LoginToken": {
      "properties": {
        "refreshToken": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "CustomerLinkResponse": {
      "properties": {
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "loginId": {
          "type": "string"
        },
        "roleName": {
          "type": "string"
        }
      }
    },
    "Credentials": {
      "properties": {
        "loginId": {
          "type": "string"
        },
        "loginPwd": {
          "type": "string"
        },
        "md5EncodedPwd": {
          "type": "string"
        },
        "sha256EncodedPwd": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    }
  }
}
