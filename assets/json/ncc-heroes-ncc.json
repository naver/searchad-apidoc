{
  "swagger": "2.0",
  "info": {
    "description": "Heroes 서비스에서 제공하는 NCC api 목록",
    "version": "2.0",
    "title": "Heroes New Clickchoice API",
    "termsOfService": "http://searchad.naver.com"
  },
  "host": "",
  "basePath": "/",
  "tags": [
    {
      "name": "Adgroup",
      "description": "New Click Choice Adgroup Controller"
    },
    {
      "name": "BrandNewContract",
      "description": "Brand New Contract Controller"
    },
    {
      "name": "AdKeyword",
      "description": "Keyword Controller"
    },
    {
      "name": "BusinessChannel",
      "description": "New Click Choice Business Channel Controller"
    },
    {
      "name": "Criterion",
      "description": "Criterion Controller"
    },
    {
      "name": "LabelRef",
      "description": "New Click Choice Label Ref Controller"
    },
    {
      "name": "AdExtension",
      "description": "Ad Extension Controller"
    },
    {
      "name": "Ad",
      "description": "Ad Controller"
    },
    {
      "name": "Campaign",
      "description": "Campaign Controller"
    },
    {
      "name": "Label",
      "description": "New Click Choice Label Controller"
    },
    {
      "name": "TimeContract",
      "description": "Time Contract Controller"
    },
    {
      "name": "Target",
      "description": "Target Controller"
    },
    {
      "name": "SharedBudget",
      "description": "Shared Budget Controller"
    },
    {
      "name": "ProductGroup",
      "description": "Product Group Controller"
    },
    {
      "name": "ManagedKeyword",
      "description": "Managed Keyword Controller"
    }
  ],
  "paths": {
    "/api/ncc/ad-extensions": {
      "post": {
        "tags": [
          "AdExtension"
        ],
        "summary": "create",
        "description": "새로운 확장 소재를 생성합니다. ownerId는 확장 소재가 소속될 광고 객체(캠페인, 광고그룹)입니다.\nRegisters a new AD extension to the specified campaign, adgroup or ad",
        "operationId": "addUsingPOST_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "adExtensionRequest",
            "description": "adExtensionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdExtensionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdExtension"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/ad-extensions/{adExtensionId}": {
      "get": {
        "tags": [
          "AdExtension"
        ],
        "summary": "get",
        "description": "특정 확장 소재(adExtensionId)의 정보를 조회합니다.\nRetrieves information on an AD extension",
        "operationId": "getByIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "adExtensionId",
            "in": "path",
            "description": "adExtensionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdExtension"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "AdExtension"
        ],
        "summary": "delete",
        "description": "확장 소재를 삭제합니다.\nDeletes a registered AD extension",
        "operationId": "removeUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "adExtensionId",
            "in": "path",
            "description": "The unique ID of the AD extension",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ncc/ad-extensions/{adExtensionId}{?fields}": {
      "put": {
        "tags": [
          "AdExtension"
        ],
        "summary": "update",
        "description": "특정 확장 소재의 정보를 변경합니다. field 파라미터가 없을 경우 확장 소재 정보 전체를 변경합니다. field 파라미터가 있을 경우 확장 소재의 특정 정보만 변경합니다.\nChange an AD extension\nThe parameter field, you can enter one of the following: 'userLock', 'period'",
        "operationId": "modifyUsingPUT_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "adExtensionId",
            "in": "path",
            "description": "adExtensionId",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "fields",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "body",
            "name": "adExtensionRequest",
            "description": "adExtensionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdExtensionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdExtension"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/ad-extensions{?fields}": {
      "put": {
        "tags": [
          "AdExtension"
        ],
        "summary": "update items",
        "description": "여러개의 확장 소재를 변경합니다. field 파라미터가 없을 경우 확장 소재 정보 전체를 변경합니다. field 파라미터가 있을 경우 확장 소재의 특정 정보만 변경합니다.\n\n'userLock': On/Off 설정 변경 'period': 노출 기간 설정\n\nChange multiple AD extensions The parameter field, you can enter one of the following: 'userLock', 'inspect', 'period'",
        "operationId": "modifyUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "adExtensionRequestList",
            "description": "adExtensionRequestList",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdExtensionRequest"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "fields",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdExtension"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/ad-extensions{?ids}": {
      "get": {
        "tags": [
          "AdExtension"
        ],
        "summary": "list (by ids)",
        "description": "다수의 확장 소재 ID를 이용하여 조회합니다.\nRetrieves information on multiple AD extensions",
        "operationId": "getByIdsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "ids",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdExtension"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/ad-extensions{?nccLabelId}": {
      "get": {
        "tags": [
          "AdExtension"
        ],
        "summary": "list (by label id)",
        "description": "특정 즐겨찾기(label id)로 등록한 확장소재 목록을 조회합니다.\nReturns the list of AD extensions of input label id.",
        "operationId": "getByLabelIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "nccLabelId",
            "in": "query",
            "description": "nccLabelId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdExtension"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/ad-extensions{?ownerId}": {
      "get": {
        "tags": [
          "AdExtension"
        ],
        "summary": "list (by owner id)",
        "description": "확장 소재가 속한 특정 광고 객체(캠페인, 광고그룹, 소재)의 ID(ownerId)를 이용하여 조회합니다.\nRetrieves information on multiple AD extensions\nThe ownerId value indicates either campaign id or adgroup id.",
        "operationId": "getByOwnerIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ownerId",
            "in": "query",
            "description": "ownerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdExtension"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/adgroups": {
      "post": {
        "tags": [
          "Adgroup"
        ],
        "summary": "create",
        "description": "Create a new adgroup",
        "operationId": "addUsingPOST_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "group",
            "description": "group",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdgroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Adgroup"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/adgroups/shared-budgets/{sharedBudgetId}": {
      "get": {
        "tags": [
          "Adgroup"
        ],
        "summary": "list (by sharedBudgetId)",
        "description": "공유예산에 연결된 광고그룹 리스트를 조회합니다.\nReturns a list of adgroups associated with shared budget.",
        "operationId": "getAdgroupsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "sharedBudgetId",
            "in": "path",
            "description": "sharedBudgetId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Adgroup"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/adgroups/{adgroupId}": {
      "get": {
        "tags": [
          "Adgroup"
        ],
        "summary": "get",
        "description": "Returns the adgroup of input ID",
        "operationId": "getUsingGET_16",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "adgroupId",
            "in": "path",
            "description": "The unique ID of the adgroup.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Adgroup"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Adgroup"
        ],
        "summary": "update",
        "description": "Change the Ad Group",
        "operationId": "modifyUsingPUT_11",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "group",
            "description": "group",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdgroupRequest"
            }
          },
          {
            "name": "adgroupId",
            "in": "path",
            "description": "The unique ID of the Ad Group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Adgroup"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Adgroup"
        ],
        "summary": "delete",
        "description": "Remove a Ad Group",
        "operationId": "removeUsingDELETE_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "adgroupId",
            "in": "path",
            "description": "The unique ID of the adgroup.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ncc/adgroups/{adgroupId}/restricted-keywords": {
      "post": {
        "tags": [
          "Adgroup"
        ],
        "summary": "create (negative search terms)",
        "description": "Create impression-restricted keywords for the adgroup. This feature is only available for adgroups of website campaign types.",
        "operationId": "addRestrictedKeywordsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "restrictedKeywords",
            "description": "restrictedKeywords",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdgroupRestrictKwd"
              }
            }
          },
          {
            "name": "adgroupId",
            "in": "path",
            "description": "The unique ID of the Ad Group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdgroupRestrictKwd"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/adgroups/{adgroupId}/restricted-keywords?type=KEYWORD_PLUS_RESTRICT": {
      "get": {
        "tags": [
          "Adgroup"
        ],
        "summary": "list (negative search terms)",
        "description": "Returns a list of impression-restricted keywords. This feature is only available for adgroups of website campaign types.",
        "operationId": "getRestrictedKeywordsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type of the restricted keyword. default value is 'KEYWORD_PLUS_RESTRICT'. Such type of the restricted keyword is applied to 'Smart Block' and 'Close Variant'.\n제외 키워드의 type입니다. 기본값은 'KEYWORD_PLUS_RESTRICT' 입니다. 해당 type의 제외 키워드는 스마트블록 및 유사검색어에 적용됩니다.",
            "required": false,
            "type": "string",
            "enum": [
              "KEYWORD_PLUS_RESTRICT"
            ]
          },
          {
            "name": "adgroupId",
            "in": "path",
            "description": "The unique ID of the Ad Group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdgroupRestrictKwd"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/adgroups/{adgroupId}/restricted-keywords{?ids}": {
      "delete": {
        "tags": [
          "Adgroup"
        ],
        "summary": "delete (negative search terms)",
        "description": "Remove impression-restricted keywords. This feature is only available for adgroups of website campaign types.",
        "operationId": "removeRestrictedKeywordsUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "adgroupId",
            "in": "path",
            "description": "The unique ID of the Ad Group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "query",
            "description": "IDs of the impression-restricted keywods",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ncc/adgroups/{adgroupId}{?fields}": {
      "put": {
        "tags": [
          "Adgroup"
        ],
        "summary": "update (by fields)",
        "description": "Change the Ad Group. The parameter fields, enter the name of the Ad Group field you want to change.",
        "operationId": "modifyUsingPUT_10",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "group",
            "description": "group",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdgroupRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Field name of the Ad Group you want to modify",
            "required": false,
            "type": "string",
            "enum": [
              "bidAmt",
              "userLock",
              "budget",
              "networkBidWeight",
              "targetLocation",
              "targetTime",
              "targetMedia",
              "targetGender"
            ]
          },
          {
            "name": "adgroupId",
            "in": "path",
            "description": "The unique ID of the Ad Group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Adgroup"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/adgroups{?ids}": {
      "get": {
        "tags": [
          "Adgroup"
        ],
        "summary": "list (by ids)",
        "description": "Returns the list of adgroups of input adgroup ids",
        "operationId": "getGroupsUsingGET_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "IDs of the Ad Group",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Adgroup"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/adgroups{?nccCampaignId,baseSearchId,recordSize,selector}": {
      "get": {
        "tags": [
          "Adgroup"
        ],
        "summary": "list (by campaign id)",
        "description": "Returns the list of partially AdGroups of input campaign id",
        "operationId": "getGroupsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "nccCampaignId",
            "in": "query",
            "description": "ID of the new clickchoice campaign",
            "required": true,
            "type": "string"
          },
          {
            "name": "baseSearchId",
            "in": "query",
            "description": "The query criteria AdGroup ID value.",
            "required": false,
            "type": "string"
          },
          {
            "name": "recordSize",
            "in": "query",
            "description": "The number of list of AdGroups to receive the response. You can enter between 1 to 1000",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "selector",
            "in": "query",
            "description": "If, please enter the value of the “PREVIOUS” to the selector parameter if you want to read the previous data.",
            "required": false,
            "type": "string",
            "enum": [
              "PREVIOUS",
              "NEXT"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Adgroup"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/adgroups{?nccLabelId}": {
      "get": {
        "tags": [
          "Adgroup"
        ],
        "summary": "list (by label id)",
        "description": "Returns the list of adgroups of input label id",
        "operationId": "getGroupsByLabelIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "nccLabelId",
            "in": "query",
            "description": "ID of the new clickchoice label",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Adgroup"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/ads": {
      "post": {
        "tags": [
          "Ad"
        ],
        "summary": "create",
        "description": "create an ad",
        "operationId": "addUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ad",
            "description": "ad",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Ad"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/ads/{adId}": {
      "get": {
        "tags": [
          "Ad"
        ],
        "summary": "get",
        "description": "입력한 ID에 해당하는 소재를 조회합니다.\nReturn the ad of the adId",
        "operationId": "getUsingGET_10",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "adId",
            "in": "path",
            "description": "ID of new clickchoice ad",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Ad"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Ad"
        ],
        "summary": "delete",
        "description": "remove an ad of the adId",
        "operationId": "removeUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "adId",
            "in": "path",
            "description": "ID of the ad",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ncc/ads/{adId}{?fields}": {
      "put": {
        "tags": [
          "Ad"
        ],
        "summary": "update",
        "description": "광고 소재의 정보를 변경합니다.\nUpdate the fields of the ads",
        "operationId": "modifyUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ad",
            "description": "ad",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The field to modify",
            "required": true,
            "type": "string",
            "enum": [
              "userLock",
              "inspect"
            ]
          },
          {
            "name": "adId",
            "in": "path",
            "description": "ID of the ad",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Ad"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/ads{?ids,targetAdgroupId,userLock}": {
      "put": {
        "tags": [
          "Ad"
        ],
        "summary": "copy",
        "description": "광고 소재를 원하는 광고그룹에 복사합니다.\nCopy ads to another adgroup",
        "operationId": "copyUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "ids",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetAdgroupId",
            "in": "query",
            "description": "targetAdgroupId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userLock",
            "in": "query",
            "description": "userLock",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Ad"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/ads{?ids}": {
      "get": {
        "tags": [
          "Ad"
        ],
        "summary": "list",
        "description": "입력한 ID 목록의 소재를 조회합니다.\nReturn the list of ads",
        "operationId": "getUsingGET_11",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "IDs of the ad",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Ad"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/ads{?nccAdgroupId}": {
      "get": {
        "tags": [
          "Ad"
        ],
        "summary": "list (by adgroup id)",
        "description": "광고그룹에 포함된 소재 목록을 조회합니다.\nReturns the list of ads of the adgroup id",
        "operationId": "getByAdgroupIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "nccAdgroupId",
            "in": "query",
            "description": "ID of the adgroup",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Ad"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/brand-new/contracts": {
      "get": {
        "tags": [
          "BrandNewContract"
        ],
        "summary": "list",
        "description": "해당 계정의 모든 신제품 검색 계약을 조회 한다 \nReturns the list of time contracts of customer",
        "operationId": "getByCustomerId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BrandNewContract"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/brand-new/contracts{?adgroupId}": {
      "get": {
        "tags": [
          "BrandNewContract"
        ],
        "summary": "list (by adgroup id)",
        "description": "해당 계정의 특정 광고그룹 하위의 신제품 검색 계약을 조회한다.\nReturns the list of time contracts of adgroup",
        "operationId": "getByAdgroupId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "adgroupId",
            "in": "query",
            "description": "adgroupId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BrandNewContract"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/campaigns": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "summary": "create",
        "description": "새로운 캠페인을 생성합니다.\n\nCreate a new campaign",
        "operationId": "addUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "campaign",
            "description": "campaign",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CampaignRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/campaigns/shared-budgets/{sharedBudgetId}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "summary": "list (by sharedBudgetId)",
        "description": "공유예산에 연결된 캠페인 리스트를 조회합니다.\nReturns a list of campaigns associated with shared budget.",
        "operationId": "getCampaignsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "sharedBudgetId",
            "in": "path",
            "description": "sharedBudgetId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Campaign"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/campaigns/{campaignId}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "summary": "get",
        "description": "단일 개체의 캠페인을 조회합니다.\n\nReturns the campaign of input ID",
        "operationId": "getUsingGET_13",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "캠페인 ID\nThe unique ID of the Campaign",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Campaign"
        ],
        "summary": "delete",
        "description": "지정한 캠페인을 영구적으로 삭제합니다. 하위 요소가 존재하는 경우, 모든 하위요소는 함께 삭제됩니다.",
        "operationId": "removeUsingDELETE_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "campaignId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ncc/campaigns/{campaignId}{?fields}": {
      "put": {
        "tags": [
          "Campaign"
        ],
        "summary": "update",
        "description": "캠페인을 수정합니다. fields 파라미터가 없을 경우 캠페인 전체가 변경됩니다. fields 파라미터에 입력하는 값의 유형에 따라 수정되는 캠페인의 필드가 결정됩니다.\n\nChange the Campaign. The parameter fields, enter the name of the Campaign field you want to change. or you can modify the campaign entire information if you give the full campaign json when calling api",
        "operationId": "modifyUsingPUT_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "campaign",
            "description": "campaign",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CampaignRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Field name of the Campaign you want to modify",
            "required": false,
            "type": "string",
            "enum": [
              "userLock",
              "budget",
              "period"
            ]
          },
          {
            "name": "campaignId",
            "in": "path",
            "description": "The unique ID of the Campaign.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/campaigns{?campaignType,baseSearchId,recordSize,selector}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "summary": "list (by customer id, campaign type)",
        "description": "조회 조건에 해당하는 캠페인 목록을 조회합니다.\n\nReturns the list of partially campaigns of customer",
        "operationId": "getCampaignsUsingGET_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "campaignType",
            "in": "query",
            "description": "캠페인 유형값.\nCampaign Type value.",
            "required": false,
            "type": "string"
          },
          {
            "name": "baseSearchId",
            "in": "query",
            "description": "기준이 되는 캠페인 ID.\nThe query criteria Campaign ID value.",
            "required": false,
            "type": "string"
          },
          {
            "name": "recordSize",
            "in": "query",
            "description": "조회하는 캠페인 개수. 1 ~ 1000 사이의 값을 가집니다.\nThe number of list of Campaigns to receive the response. You can enter between 1 to 2000",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "selector",
            "in": "query",
            "description": "baseSearchId기준으로 전방, 또는 후방 탐색을 결정합니다.\nIf, please enter the value of the “PREVIOUS” to the selector parameter if you want to read the previous data.",
            "required": false,
            "type": "string",
            "enum": [
              "PREVIOUS",
              "NEXT"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Campaign"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/campaigns{?ids}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "summary": "list (by ids)",
        "description": "입력된 아이디에 해당하는 캠페인 목록을 조회합니다.\n\nReturns the list of campaigns of input campaign ids.",
        "operationId": "getCampaignsUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "조회하고자 하는 캠페인의 ID 목록.\nIDs of the campaign.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Campaign"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Campaign"
        ],
        "summary": "delete items",
        "description": "뉴 클릭초이스 다수의 캠페인 삭제",
        "operationId": "removeCampaignsUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "ids",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ncc/channels": {
      "get": {
        "tags": [
          "BusinessChannel"
        ],
        "summary": "list",
        "description": "Returns the list of business channel.",
        "operationId": "getUsingGET_20",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BusinessChannel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "BusinessChannel"
        ],
        "summary": "create",
        "description": "Create a new business channel.",
        "operationId": "addUsingPOST_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "channel",
            "description": "channel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BusinessChannel"
            }
          },
          {
            "in": "body",
            "name": "nidAut",
            "description": "nidAut",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "nidSes",
            "description": "nidSes",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "passNaTokenToSa",
            "description": "passNaTokenToSa",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BusinessChannel"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/channels/{businessChannelId}": {
      "get": {
        "tags": [
          "BusinessChannel"
        ],
        "summary": "get",
        "description": "Returns the business channel of input business channel id.",
        "operationId": "getUsingGET_17",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "businessChannelId",
            "in": "path",
            "description": "The unique ID of the business channel.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BusinessChannel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "BusinessChannel"
        ],
        "summary": "delete",
        "description": "Remove a business channel",
        "operationId": "removeUsingDELETE_8",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "businessChannelId",
            "in": "path",
            "description": "The unique ID of the business channel.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ncc/channels/{businessChannelId}/inspect": {
      "put": {
        "tags": [
          "BusinessChannel"
        ],
        "summary": "request inspect",
        "description": "request reinspect of business channel.",
        "operationId": "requestInspectUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "channel",
            "description": "channel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BusinessChannel"
            }
          },
          {
            "name": "businessChannelId",
            "in": "path",
            "description": "The unique ID of the business channel.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BusinessChannel"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/channels/{businessChannelId}{?fields}": {
      "put": {
        "tags": [
          "BusinessChannel"
        ],
        "summary": "update",
        "description": "Change the business channel <br> The parameter field, you can enter one of the following: 'name', 'inspectId', 'inspectPw', 'secondary'",
        "operationId": "modifyUsingPUT_14",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "businessChannelId",
            "in": "path",
            "description": "businessChannelId",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "fields",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "body",
            "name": "channel",
            "description": "channel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BusinessChannel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BusinessChannel"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/channels{?channelTp}": {
      "get": {
        "tags": [
          "BusinessChannel"
        ],
        "summary": "list(by channel Type)",
        "description": "Returns the business channel list of channel type.",
        "operationId": "getUsingGET_18",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelTp",
            "in": "query",
            "description": "Type of the business channel",
            "required": true,
            "type": "string",
            "enum": [
              "SITE",
              "PHONE",
              "ADDRESS",
              "BOOKING",
              "TALK",
              "MALL",
              "CONTENTS",
              "PLACE",
              "CATALOG",
              "NAVER_TV",
              "BRAND_STORE",
              "SHOPPING_BRAND"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BusinessChannel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/channels{?ids}": {
      "get": {
        "tags": [
          "BusinessChannel"
        ],
        "summary": "list(by ids)",
        "description": "Returns the business channel list of input business channel ids.",
        "operationId": "getUsingGET_19",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "IDs of the new clickchoice business channel",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BusinessChannel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "BusinessChannel"
        ],
        "summary": "delete(by ids)",
        "description": "Remove business channels in id list.",
        "operationId": "removeUsingDELETE_9",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "IDs of the new clickchoice business channel",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ncc/criterion-dictionary/{type}": {
      "get": {
        "tags": [
          "Criterion"
        ],
        "summary": "get Criterion dictionary code",
        "description": "광고그룹에서 지원되는 타게팅 코드를 조회할 수 있습니다. 반경(PROXIMITY)는 조회할 수 없습니다.\n\nYou can check the target code supported by the adgroup.\n\nThe PROXIMITY cannot be inquired.",
        "operationId": "getCriterionByOwnerIdNTypeUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Criterion code 종류.\ndictionary code",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CriterionDictionary"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/criterion/{ownerId}/bidWeight{?codes,bidWeight}": {
      "put": {
        "tags": [
          "Criterion"
        ],
        "summary": "update bidWeight",
        "description": "등록된 타겟팅의 입찰가 가중치를 변경할 수 있습니다.\n\nYou can change the weighting of registered criterion.",
        "operationId": "modifyBidWeightUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ownerId",
            "in": "path",
            "description": "타겟팅이 속한 광고그룹 ID.\nID of ad group",
            "required": false,
            "type": "string"
          },
          {
            "name": "codes",
            "in": "query",
            "description": "타겟팅 코드를 여러개 입력할 수 있습니다.\nThe list of dictionary Code List",
            "required": false,
            "type": "ref"
          },
          {
            "name": "bidWeight",
            "in": "query",
            "description": "입찰가중치를 50부터 500까지 설정할 수 있습니다.\nYou can set the bidWeight from 50 to 500.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Criterion"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/criterion/{ownerId}/{type}": {
      "put": {
        "tags": [
          "Criterion"
        ],
        "summary": "update Criterion",
        "description": "타겟팅 유형별로 타겟팅을 변경할 수 있습니다.\n\n타겟팅 변경 시 Request Body에 포함되지 않는 코드는 모드 사용안함 처리가 되니 주의를 요합니다.\n\n반경 타겟팅 추가의 경우 dictionaryCode에 ‘Proximity’ 문자열을 입력해 주세요. 서버에 저장후 정상적인 code로 반환이 됩니다.\n\bTargeting can be changed by targeting type.\n\nPlease note that when you change the targeting, all code that is not included in the Request Body will be disabled.\n\nIf you want to add a Proximity target, enter the “Proximity” string in dictionaryCode. It will be saved on the server and returned to normal code..",
        "operationId": "modifyUsingPUT_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "requests",
            "description": "requests",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CriterionRequest"
              }
            }
          },
          {
            "name": "ownerId",
            "in": "path",
            "description": "타겟팅이 속한 광고그룹 ID.\nID of ad group",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "path",
            "description": "criterion dictionary type",
            "required": false,
            "type": "string",
            "enum": [
              "SD",
              "AG",
              "GN",
              "AD",
              "RL",
              "RP",
              "DV"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Criterion"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/criterion/{ownerId}{?type}": {
      "get": {
        "tags": [
          "Criterion"
        ],
        "summary": "list (by id)",
        "description": "광고그룹에 속한 타겟팅 정보를 반환합니다.\n\nReturns the list of Criterion",
        "operationId": "getCriterionByOwnerIdNTypeUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ownerId",
            "in": "path",
            "description": "타겟팅이 속한 광고그룹 ID.\nID of ad group",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "criterion dictionary type",
            "required": false,
            "type": "string",
            "enum": [
              "SD",
              "AG",
              "GN",
              "AD",
              "RL",
              "RP",
              "DV"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Criterion"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/keywords/{nccKeywordId}": {
      "get": {
        "tags": [
          "AdKeyword"
        ],
        "summary": "get",
        "description": "Return an AdKeyword of input AdKeywordId.",
        "operationId": "getUsingGET_14",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "nccKeywordId",
            "in": "path",
            "description": "The unique Id of the keyword",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdKeyword"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "AdKeyword"
        ],
        "summary": "delete",
        "description": "Remove a AdKeyword.",
        "operationId": "removeUsingDELETE_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "nccKeywordId",
            "in": "path",
            "description": "The unique Id of the keyword.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ncc/keywords/{nccKeywordId}{?fields}": {
      "put": {
        "tags": [
          "AdKeyword"
        ],
        "summary": "update",
        "description": "Change the AD Keyword The parameter field, you can enter one of the following: 'userLock', 'bidAmt', 'links', 'inspect' \n- if field is userLock then Adkeyword.userlock is required \n- if field is bidAmt then Adkeywords.bidAmt and Adkeyword.useGroupBidAmt are required\n- if field is links then Adkeyword.links is required and links is json-formatted string\n- if field is attr then Adkeyword.attr is required and attr is json-formatted string\n- if field is inspect then Adkeyword's status sholud have pendded.",
        "operationId": "modifyUsingPUT_8",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "keyword",
            "description": "keyword",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KeywordRequest"
            }
          },
          {
            "name": "nccKeywordId",
            "in": "path",
            "description": "The unique Id of the keyword.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "update target",
            "required": false,
            "type": "string",
            "enum": [
              "'userLock'",
              "'bidAmt'",
              "'links'",
              "'inspect'"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdKeyword"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/keywords{?fields}": {
      "put": {
        "tags": [
          "AdKeyword"
        ],
        "summary": "update-items",
        "description": "Change AD Keywords.(fields=userLock, bidAmt, inspect, links) The maximum number of requests is 200.\n- if field is userLock then Adkeyword.userlock is required \n- if field is bidAmt then Adkeywords.bidAmt and Adkeyword.useGroupBidAmt are required\n- if field is links then Adkeyword.links is required and links is json-formatted string\n- if field is attr then Adkeyword.attr is required and attr is json-formatted string\n- if field is inspect then Adkeyword's status sholud have pendded.",
        "operationId": "modifyUsingPUT_9",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "nccKeywords",
            "description": "nccKeywords",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KeywordRequest"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "update target",
            "required": false,
            "type": "string",
            "enum": [
              "'userLock'",
              "'bidAmt'",
              "'links'",
              "'inspect'"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdKeyword"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/keywords{?ids}": {
      "get": {
        "tags": [
          "AdKeyword"
        ],
        "summary": "list (by ids)",
        "description": "Returns the list of AdKeyword of input AdKeyword Ids.",
        "operationId": "getByIdsUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "ids of the AdKeywordId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdKeyword"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "AdKeyword"
        ],
        "summary": "delete-items",
        "description": "remove requested keywords.",
        "operationId": "removeKeywordsUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "ids of the AdKeywordId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ncc/keywords{?nccAdgroupId,baseSearchId,recordSize,selector}": {
      "get": {
        "tags": [
          "AdKeyword"
        ],
        "summary": "list (by adgroup id)",
        "description": "Returns the partially keyword list of input AdGroup Id.",
        "operationId": "getByAdgroupIdUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "nccAdgroupId",
            "in": "query",
            "description": "The unique ID of the AdGroup.",
            "required": true,
            "type": "string"
          },
          {
            "name": "baseSearchId",
            "in": "query",
            "description": "The query criteria Adkeyword ID value.",
            "required": false,
            "type": "string"
          },
          {
            "name": "recordSize",
            "in": "query",
            "description": "The number of list of Adkeywords to receive the response. You can enter between 1 to 1000",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "selector",
            "in": "query",
            "description": "If, please enter the value of the “PREVIOUS” to the selector parameter if you want to read the previous data.",
            "required": false,
            "type": "string",
            "enum": [
              "PREVIOUS",
              "NEXT"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdKeyword"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/keywords{?nccAdgroupId}": {
      "post": {
        "tags": [
          "AdKeyword"
        ],
        "summary": "create",
        "description": "Create AD Keyword. The maximum number of requests is 100.",
        "operationId": "addUsingPOST_4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "kwdRequests",
            "description": "kwdRequests",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KeywordRequest"
              }
            }
          },
          {
            "name": "nccAdgroupId",
            "in": "query",
            "description": "nccAdgroupId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdKeyword"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/keywords{?nccLabelId}": {
      "get": {
        "tags": [
          "AdKeyword"
        ],
        "summary": "list (by label id)",
        "description": "Returns the list of AdKeyword of input label id.",
        "operationId": "getKeywordsByLabelIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "nccLabelId",
            "in": "query",
            "description": "nccLabelId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdKeyword"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/label-refs": {
      "put": {
        "tags": [
          "LabelRef"
        ],
        "summary": "update",
        "description": "Create or Delete label references to Adgroups or Ads or Keywords.",
        "operationId": "addLabelsUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "labelRefs",
            "description": "labelRefs",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LabelRef"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LabelRef"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/labels": {
      "get": {
        "tags": [
          "Label"
        ],
        "summary": "list",
        "description": "Retrieves information on the entire labels of an advertiser.",
        "operationId": "getCustomerLabelsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Label"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Label"
        ],
        "summary": "update",
        "description": "Renames a label. Any names which are already used in other labels within one advertiser cannot be used.",
        "operationId": "upsertUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "label",
            "description": "label",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Label"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Label"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/managedKeyword{?keywords}": {
      "get": {
        "tags": [
          "ManagedKeyword"
        ],
        "summary": "list (by keywords)",
        "description": "Returns the list of ManagedKeyword List of input keywords",
        "operationId": "getKeywordAttributesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "keywords",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ManagedKeywordResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/product-groups": {
      "get": {
        "tags": [
          "ProductGroup"
        ],
        "summary": "get",
        "description": "계정에 등록된 상품 그룹의 목록은 API를 이용하여 조회할 수 있습니다.\n\nThe list of product groups registered in the account can be inquired using the API below",
        "operationId": "getProductGroupsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductGroup"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/purchasable-place-channels{?type}": {
      "get": {
        "tags": [
          "BusinessChannel"
        ],
        "summary": "list(by channel Type)",
        "description": "Returns the business channel list of purchasable place type.",
        "operationId": "getSaleablePlaceChannelsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BusinessChannel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/shared-budgets": {
      "get": {
        "tags": [
          "SharedBudget"
        ],
        "summary": "get",
        "description": "공유예산의 리스트를 조회합니다.\nReturns the list of Shared budget.",
        "operationId": "getBudgetsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SharedBudget"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "SharedBudget"
        ],
        "summary": "create",
        "description": "공유예산을 생성합니다.\nCreate the shared budget.",
        "operationId": "addUsingPOST_9",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SharedBudgetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SharedBudget"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/shared-budgets/adgroups{?ids}": {
      "put": {
        "tags": [
          "SharedBudget"
        ],
        "summary": "exclude adgroups",
        "description": "공유예산에 연결된 광고그룹을 공유예산에서 제외합니다.\nRemove adgroups connected to a shared budget from the shared budget.",
        "operationId": "excludeConnectedAdgroupsUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "ids",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/shared-budgets/campaigns{?ids}": {
      "put": {
        "tags": [
          "SharedBudget"
        ],
        "summary": "exclude campaigns",
        "description": "공유예산에 연결된 캠페인을 공유예산에서 제외합니다.\nRemove campaigns connected to a shared budget from the shared budget.",
        "operationId": "excludeConnectedCampaignsUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "ids",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/shared-budgets/{sharedBudgetId}": {
      "get": {
        "tags": [
          "SharedBudget"
        ],
        "summary": "get (by id)",
        "description": "단건 공유예산을 조회합니다.\nReturns the Shared budget of input shared budget Id.",
        "operationId": "getBudgetUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "sharedBudgetId",
            "in": "path",
            "description": "sharedBudgetId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SharedBudget"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "SharedBudget"
        ],
        "summary": "update",
        "description": "공유예산을 수정합니다.\nChange the shared budget.",
        "operationId": "modifyUsingPUT_17",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "sharedBudgetId",
            "in": "path",
            "description": "sharedBudgetId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SharedBudgetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SharedBudget"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/shared-budgets{?fields}": {
      "put": {
        "tags": [
          "SharedBudget"
        ],
        "summary": "update budget",
        "description": "공유예산의 하루예산을 수정합니다.\nModify the daily budget of the shared budget.",
        "operationId": "modifyUsingPUT_18",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "fields",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "body",
            "name": "sharedBudgets",
            "description": "sharedBudgets",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SharedBudgetRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SharedBudget"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/shared-budgets{?ids}": {
      "delete": {
        "tags": [
          "SharedBudget"
        ],
        "summary": "delete",
        "description": "공유예산의 하루예산을 수정합니다.\nModify the daily budget of the shared budget.",
        "operationId": "removeUsingDELETE_11",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "ids",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ncc/targets/{targetId}": {
      "put": {
        "tags": [
          "Target"
        ],
        "summary": "update",
        "description": "타겟팅을 변경합니다.\n\n타겟팅 유형 중 AD_TAG는 쇼핑 캠페인 하위의 카탈로그 광고 소재에 적용되며, 그외 소재에 등록할 때 오류가 발생합니다.\n\n등록가능항 태그의 길이는 최소 3자 부터 최대 10자이며, 최대 30개까지 등록 가능합니다.\n\nChange a target.\n\nAmong the targeting types, AD_TAG is applied to catalog creatives under shopping campaigns, and an error occurs when registering for other creatives.\n\nThe length of registerable tag is minimum 3 characters to maximum 10 characters. Up to 30 tags can be registered.",
        "operationId": "modifyUsingPUT_19",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "targetId",
            "in": "path",
            "description": "targetId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "target",
            "description": "target",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TargetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Target"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/targets{?ownerId,types}": {
      "get": {
        "tags": [
          "Target"
        ],
        "summary": "list (by owner id)",
        "description": "Retrieves information on multiple Targets\nThe ownerId value indicates either adgroup id or ad id.",
        "operationId": "getByOwnerIdUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ownerId",
            "in": "query",
            "description": "ownerId",
            "required": true,
            "type": "string"
          },
          {
            "name": "types",
            "in": "query",
            "description": "types",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Target"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/targets{?ownerIds}": {
      "get": {
        "tags": [
          "Target"
        ],
        "summary": "list (by owner id list)",
        "description": "Retrieves information on multiple Targets\nThe owner ID list value indicates either adgroup id or ad id.",
        "operationId": "getByOwnerIdsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ownerIds",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Target"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/time-contracts": {
      "get": {
        "tags": [
          "TimeContract"
        ],
        "summary": "list",
        "description": "해당 계정의 모든 계약을 조회 한다 \nReturns the list of time contracts of customer",
        "operationId": "getByCustomerId_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TimeContract"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/ncc/time-contracts{?adgroupId}": {
      "get": {
        "tags": [
          "TimeContract"
        ],
        "summary": "list (by adgroup id)",
        "description": "해당 계정의 특정 광고그룹 하위의 계약을 조회한다.\nReturns the list of time contracts of adgroup",
        "operationId": "getByAdgroupId_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "adgroupId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TimeContract"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "Ad": {
      "type": "object",
      "properties": {
        "ad": {
          "type": "string",
          "example": "{\"pc\":{\"final\":\"http://searchad.naver.com\"},\"mobile\":{\"final\":\"http://m.searchad.naver.com\"},\"headline\":\"the first line\",\"description\":\"the second line of your ad text\"}",
          "description": "Creative of this instance. This creative's json schema formed by the field 'type'. #required-create #hidden-update"
        },
        "adAttr": {
          "type": "string",
          "example": "{\"bidAmt\":50,\"useGroupBidAmt\":true}",
          "description": "Bid infomation of this instance. (Required if Shopping Ad) #hidden-create #hidden-response #required-update"
        },
        "assets": {
          "type": "array",
          "description": "Ad assets, used only for RSA_AD type.",
          "items": {
            "$ref": "#/definitions/AdAssetResponse"
          }
        },
        "customerId": {
          "type": "integer",
          "format": "int64",
          "description": "The id of the customer containing this ad. #hidden-request"
        },
        "editTm": {
          "type": "string",
          "description": "The lastest time when this ad was modified (RFC 3339 datetime). #hidden-request #hidden-create"
        },
        "enable": {
          "type": "boolean",
          "example": false,
          "description": "Enable or Pause this ad by the system. 0:'DISABLED', 1:'ENABLED'. #hidden-response #hidden-request"
        },
        "inspectStatus": {
          "type": "string",
          "description": "The approval status of this ad. 10:UNDER_REVIEW, 20:APPROVED, 30:PENDING, 40:DISAPPROVED #hidden-create #hidden-request",
          "enum": [
            "UNDER_REVIEW",
            "APPROVED",
            "ELIGIBLE",
            "PENDING",
            "DENIED"
          ]
        },
        "nccAdId": {
          "type": "string",
          "description": "The id of this ad. #hidden-create #required-update"
        },
        "nccAdgroupId": {
          "type": "string",
          "description": "The id of the adgroup containing this ad. #required-create #hidden-update"
        },
        "nccQi": {
          "description": "Quality index of SHOPPING_PRODUCT_AD/CATALOG_AD. 1 ~ 7 #hidden-request #hidden-create",
          "$ref": "#/definitions/NccNewQi"
        },
        "regTm": {
          "type": "string",
          "description": "The time when this ad was created (RFC 3339 datetime). #hidden-request #hidden-create"
        },
        "status": {
          "type": "string",
          "description": "Status of this ad. #hidden-request #hidden-create",
          "enum": [
            "ELIGIBLE",
            "LIMITED_ELIGIBLE",
            "PAUSED",
            "DELETED"
          ]
        },
        "statusReason": {
          "type": "string",
          "description": "Status reason of this ad. #hidden-request #hidden-create",
          "enum": [
            "ELIGIBLE",
            "CAMPAIGN_DELETED",
            "CAMPAIGN_PAUSED",
            "CAMPAIGN_PENDING",
            "CAMPAIGN_ENDED",
            "CAMPAIGN_LIMITED_BY_BUDGET",
            "CAMPAIGN_LIMITED_BY_SHARED_BUDGET",
            "BUSINESS_CHANNEL_PAUSED",
            "BUSINESS_CHANNEL_DISAPPROVED",
            "BUSINESS_CHANNEL_UNDER_REVIEW",
            "BUSINESS_CHANNEL_ABNORMAL_INTERLOCK",
            "PC_BUSINESS_CHANNEL_APPROVED",
            "PC_BUSINESS_CHANNEL_DISAPPROVED",
            "PC_BUSINESS_CHANNEL_ABNORMAL_INTERLOCK",
            "PC_BUSINESS_CHANNEL_UNDER_REVIEW",
            "MOBILE_BUSINESS_CHANNEL_APPROVED",
            "MOBILE_BUSINESS_CHANNEL_DISAPPROVED",
            "MOBILE_BUSINESS_CHANNEL_ABNORMAL_INTERLOCK",
            "MOBILE_BUSINESS_CHANNEL_UNDER_REVIEW",
            "GROUP_DELETED",
            "GROUP_PAUSED",
            "GROUP_LIMITED_BY_BUDGET",
            "GROUP_LIMITED_BY_SHARED_BUDGET",
            "GROUP_PAUSED_BY_INVALID_TARGET",
            "KEYWORD_DELETED",
            "KEYWORD_PAUSED",
            "KEYWORD_DISAPPROVED",
            "KEYWORD_DENIED",
            "KEYWORD_UNDER_REVIEW",
            "AD_DELETED",
            "AD_PAUSED",
            "AD_ABNORMAL_INTERLOCK",
            "AD_DISAPPROVED",
            "AD_UNDER_REVIEW",
            "AD_NOT_ENOUGH_ASSETS",
            "SHARED_BUDGET_LIMITED_BY_BUDGET",
            "SHARED_BUDGET_DELETED",
            "AD_EXTENSION_DELETED",
            "AD_EXTENSION_PAUSED",
            "AD_EXTENSION_NOT_SCHEDULED",
            "AD_EXTENSION_DISAPPROVED",
            "AD_EXTENSION_UNDER_REVIEW",
            "AD_EXTENSION_PENDING",
            "AD_EXTENSION_ABNORMAL_INTERLOCK",
            "LACK_OF_ACCOUNT_BALANCE",
            "REFUND_IN_PROGRESS",
            "ENABLED",
            "ASSET_DELETED",
            "ASSET_DISAPPROVED",
            "ASSET_UNDER_REVIEW"
          ]
        },
        "type": {
          "type": "string",
          "example": "[gist: \"9e18ded78951a8668267889205b6eb69\"]",
          "description": "Type of this ad (defined by json-schema form). #required-create #hidden-update",
          "enum": [
            "TEXT_45",
            "SHOPPING_PRODUCT_AD",
            "CONTENTS_AD_INFORMATION",
            "CONTENTS_AD_PRODUCT",
            "BRAND_SEARCH_AD",
            "PLACE_AD",
            "CATALOG_AD",
            "SHOPPING_BRAND_AD",
            "LOCAL_AD",
            "SHOPPING_BRAND_IMAGE_THUMBNAIL_AD",
            "SHOPPING_BRAND_IMAGE_BANNER_AD",
            "BRAND_SEARCH_NEW_AD",
            "RSA_AD",
            "MEDICAL_AD"
          ]
        },
        "userLock": {
          "type": "boolean",
          "example": false,
          "description": "Enable or Pause this ad by the user. 0:'ENABLED', 1:'PAUSED'. #optional-update"
        }
      }
    },
    "AdAssetRequest": {
      "type": "object",
      "properties": {
        "assetData": {
          "$ref": "#/definitions/JsonNode"
        },
        "linkType": {
          "type": "string",
          "enum": [
            "HEADLINE",
            "DESCRIPTION"
          ]
        },
        "pin": {
          "type": "string"
        },
        "inspectRequestMsg": {
          "type": "string"
        }
      }
    },
    "AdAssetResponse": {
      "type": "object",
      "required": [
        "assetData",
        "assetType",
        "customerId",
        "editTm",
        "inspectStatus",
        "linkType",
        "nccAdAssetLinkId",
        "nccAdId",
        "nccAssetId",
        "regTm"
      ],
      "properties": {
        "assetData": {
          "type": "string"
        },
        "assetType": {
          "type": "string",
          "enum": [
            "TEXT"
          ]
        },
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "editTm": {
          "type": "string",
          "example": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
        },
        "inspectStatus": {
          "type": "string",
          "enum": [
            "UNDER_REVIEW",
            "APPROVED",
            "ELIGIBLE",
            "PENDING",
            "DENIED"
          ]
        },
        "linkType": {
          "type": "string",
          "enum": [
            "HEADLINE",
            "DESCRIPTION"
          ]
        },
        "nccAdAssetLinkId": {
          "type": "string"
        },
        "nccAdId": {
          "type": "string"
        },
        "nccAssetId": {
          "type": "string"
        },
        "pin": {
          "type": "string"
        },
        "regTm": {
          "type": "string",
          "example": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
        }
      }
    },
    "AdExtension": {
      "type": "object",
      "properties": {
        "adExtension": {
          "type": "string",
          "description": "확장 소재의 소재 데이터가 JSON 구조로 저장되어 있습니다.\nThe creative of the AD extension\nThe format of this value is JSON"
        },
        "customerId": {
          "type": "integer",
          "format": "int64",
          "description": "광고 계정 고유 번호입니다.\nThe unique ID of the customer"
        },
        "editTm": {
          "type": "string",
          "description": "최근 수정 시각 입니다.\nRecently modified time (RFC 3339 datetime)"
        },
        "enable": {
          "type": "boolean",
          "example": false,
          "description": "외부 데이터와 연결된 확장 소재의 경우 연결 상태를 나타냅니다.\nEnable or Pause this ad extension by the system. false:'DISABLED', true:'ENABLED'. #hidden-response #hidden-request"
        },
        "inspectStatus": {
          "type": "string",
          "description": "확장 소재의 검수 상태입니다. 검수상태는 아래의 값을 가질수 있습니다.\nThe inspect status of the AD extension",
          "enum": [
            "UNDER_REVIEW",
            "APPROVED",
            "ELIGIBLE",
            "PENDING",
            "DENIED"
          ]
        },
        "mobileChannelId": {
          "type": "string",
          "description": "확장 소재와 연결된 모바일 비즈채널의 고유 ID입니다.\nThe unique ID of mobile Biz Channel which produces the creative"
        },
        "nccAdExtensionId": {
          "type": "string",
          "description": "확장 소재의 고유 ID입니다.\nThe unique ID of the AD extension"
        },
        "ownerId": {
          "type": "string",
          "description": "캠페인, 광고 그룹, 광고 소재등 확장 소재가 연결된 광고 Entity의 고유 ID입니다.\nThe unique ID of owner entity which is either campaign or adgroup containing this AD extension"
        },
        "pcChannelId": {
          "type": "string",
          "description": "확장 소재와 연결된 PC 비즈채널의 고유 ID입니다.\nThe unique ID of PC Biz Channel which produces the creative"
        },
        "periodEndDt": {
          "type": "string",
          "description": "확장 소재의 노출 종료일입니다.\nThe time at which the AD extension ends (RFC 3339 date-time)."
        },
        "periodStartDt": {
          "type": "string",
          "description": "확장 소재의 노출 시작일입니다.\nThe time at which the AD extension starts (RFC 3339 date-time)."
        },
        "regTm": {
          "type": "string",
          "description": "확장 소재가 등록된 시각입니다.\nTime that the AD extension has been registered (RFC 3339 datetime)."
        },
        "schedule": {
          "type": "string",
          "example": "[gist: \"0c01a5fdee874e93e2ab568a10a53fdb\"]",
          "description": "확장 소재의 노출을 요일과 시간 별로 설정한 값입니다. 요일및 시간 계산은 https://github.com/naver/searchad-apidoc/wiki/FAQ 에서 확인할 수 있습니다.\nThe schedule of the AD extension\nThe format of this value is JSON\n- Every day and time : null\n- Partially applied : {\"SUN\":16777215,\"MON\":16777215,\"TUE\":16777215,\"WED\":16777215,\"THU\":16777215,\"FRI\":16777215,\"SAT\":16777215}\n - Each key is the day of week and value is the sum of bit operation with hour which is between 0 and 23 #required-create #optional-update"
        },
        "status": {
          "type": "string",
          "description": "확장 소재의 계산된 상태를 나타냅니다. 상태 값은 아래의 값중 하나를 가질 수 있습니다.(https://github.com/naver/searchad-apidoc/wiki/FAQ)\nStatus of this AD extension",
          "enum": [
            "ELIGIBLE",
            "LIMITED_ELIGIBLE",
            "PAUSED",
            "DELETED"
          ]
        },
        "statusReason": {
          "type": "string",
          "description": "확장 소재 상태에 대한 사유를 나타냅니다. 사유는 아래의 값중 하나를 가질 수 있습니다.\nStatus reason of this AD extension.(https://github.com/naver/searchad-apidoc/wiki/FAQ)",
          "enum": [
            "ELIGIBLE",
            "CAMPAIGN_DELETED",
            "CAMPAIGN_PAUSED",
            "CAMPAIGN_PENDING",
            "CAMPAIGN_ENDED",
            "CAMPAIGN_LIMITED_BY_BUDGET",
            "CAMPAIGN_LIMITED_BY_SHARED_BUDGET",
            "BUSINESS_CHANNEL_PAUSED",
            "BUSINESS_CHANNEL_DISAPPROVED",
            "BUSINESS_CHANNEL_UNDER_REVIEW",
            "BUSINESS_CHANNEL_ABNORMAL_INTERLOCK",
            "PC_BUSINESS_CHANNEL_APPROVED",
            "PC_BUSINESS_CHANNEL_DISAPPROVED",
            "PC_BUSINESS_CHANNEL_ABNORMAL_INTERLOCK",
            "PC_BUSINESS_CHANNEL_UNDER_REVIEW",
            "MOBILE_BUSINESS_CHANNEL_APPROVED",
            "MOBILE_BUSINESS_CHANNEL_DISAPPROVED",
            "MOBILE_BUSINESS_CHANNEL_ABNORMAL_INTERLOCK",
            "MOBILE_BUSINESS_CHANNEL_UNDER_REVIEW",
            "GROUP_DELETED",
            "GROUP_PAUSED",
            "GROUP_LIMITED_BY_BUDGET",
            "GROUP_LIMITED_BY_SHARED_BUDGET",
            "GROUP_PAUSED_BY_INVALID_TARGET",
            "KEYWORD_DELETED",
            "KEYWORD_PAUSED",
            "KEYWORD_DISAPPROVED",
            "KEYWORD_DENIED",
            "KEYWORD_UNDER_REVIEW",
            "AD_DELETED",
            "AD_PAUSED",
            "AD_ABNORMAL_INTERLOCK",
            "AD_DISAPPROVED",
            "AD_UNDER_REVIEW",
            "AD_NOT_ENOUGH_ASSETS",
            "SHARED_BUDGET_LIMITED_BY_BUDGET",
            "SHARED_BUDGET_DELETED",
            "AD_EXTENSION_DELETED",
            "AD_EXTENSION_PAUSED",
            "AD_EXTENSION_NOT_SCHEDULED",
            "AD_EXTENSION_DISAPPROVED",
            "AD_EXTENSION_UNDER_REVIEW",
            "AD_EXTENSION_PENDING",
            "AD_EXTENSION_ABNORMAL_INTERLOCK",
            "LACK_OF_ACCOUNT_BALANCE",
            "REFUND_IN_PROGRESS",
            "ENABLED",
            "ASSET_DELETED",
            "ASSET_DISAPPROVED",
            "ASSET_UNDER_REVIEW"
          ]
        },
        "type": {
          "type": "string",
          "description": "확장 소재의 종류를 나타냅니다.(https://github.com/naver/searchad-apidoc/wiki/FAQ)\n The type of the AD extension\nAPI를 이용하여 생성 불가능한 유형: \n- SHOPPING_EXTRA\n- CATALOG_EXTRA\n- CATALOG_EVENT\n- CATALOG_PURCHASE_CONDITION\n- SHOPPING_BRAND_BROADCAST\n- SHOPPING_BRAND_EVENT\n- PLACE_SMART_ORDER,NAVER_BLOG_REVIEW\n- POWER_LINK_IMAGE\n- IMAGE_SUB_LINKS\n- CATALOG_IMAGE\n- NAVER_TV_VIDEO\n- SHOPPING_BRAND_IMAGE\n- SHOPPING_BRAND_VIDEO\n #required-create #hidden-update",
          "enum": [
            "PHONE",
            "LOCATION",
            "BOOKING",
            "TALK",
            "CALCULATION",
            "HEADLINE",
            "DESCRIPTION",
            "SUB_LINKS",
            "PRICE_LINKS",
            "PROMOTION",
            "SHOPPING_EXTRA",
            "POWER_LINK_IMAGE",
            "IMAGE_SUB_LINKS",
            "PLACE",
            "CATALOG_RELEASE_DATE",
            "CATALOG_EXTRA",
            "CATALOG_DETAIL",
            "CATALOG_IMAGE",
            "CATALOG_PROMOTION",
            "CATALOG_EVENT",
            "CATALOG_MOVIE",
            "CATALOG_PURCHASE_CONDITION",
            "CATALOG_BRAND_MESSAGE",
            "NAVER_TV_VIDEO",
            "NAVER_BLOG_REVIEW",
            "SHOPPING_BRAND_VIDEO",
            "SHOPPING_BRAND_IMAGE",
            "SHOPPING_BRAND_BROADCAST",
            "PLACE_SMART_ORDER",
            "SHOPPING_BRAND_EVENT",
            "PLACE_BEAUTY_STYLE",
            "DESCRIPTION_EXTRA",
            "SHOPPING_BRAND_DAY",
            "SHOPPING_WEB",
            "WEBSITE_INFO"
          ]
        },
        "usePeriod": {
          "type": "boolean",
          "example": false,
          "description": "노출 기간 설정 사용여부를 나타냅니다. true: 사용, false: 사용안함 \nuse period.  \n true: use, false: unuse  If this field is blank, and then set to the default value(false). #required-create #optional-update"
        },
        "userLock": {
          "type": "boolean",
          "example": false,
          "description": "확장 소재의 On/Off 노출 설정입니다. true일 경우 노출이 중지됩니다. false일 경우 노출이 가능합니다.\nThis field can be used for ENABLED or PAUSED of the AD extension"
        }
      }
    },
    "AdExtensionRequest": {
      "type": "object",
      "required": [
        "enable"
      ],
      "properties": {
        "adExtension": {
          "description": "The creative of the AD extension\nThe format of this value is JSON #hidden-request",
          "$ref": "#/definitions/JsonNode"
        },
        "enable": {
          "type": "boolean"
        },
        "inspectRequestMsg": {
          "type": "string",
          "description": "The message of inspect when you requested to inspect this AD extension"
        },
        "mobileChannelId": {
          "type": "string",
          "description": "확장 소재와 연결된 모바일 비즈채널의 고유 ID입니다.\nThe unique ID of mobile Biz Channel which produces the creative #required-create #hidden-update"
        },
        "nccAdExtensionId": {
          "type": "string",
          "description": "The unique ID of the AD extension #hidden-create #required-update"
        },
        "ownerId": {
          "type": "string",
          "description": "캠페인, 광고 그룹, 광고 소재등 확장 소재가 연결된 광고 Entity의 고유 ID입니다.\nThe unique ID of owner entity which is either campaign or adgroup containing this AD extension #required-create #hidden-update"
        },
        "pcChannelId": {
          "type": "string",
          "description": "확장 소재와 연결된 PC 비즈채널의 고유 ID입니다.\nThe unique ID of PC Biz Channel which produces the creative #required-create #hidden-update"
        },
        "periodEndDt": {
          "type": "string",
          "description": "확장 소재의 노출 종료일입니다\nThe time at which the AD extension ends (RFC 3339 date-time)."
        },
        "periodStartDt": {
          "type": "string",
          "description": "확장 소재의 노출 시작일입니다.\nThe time at which the AD extension starts (RFC 3339 date-time)."
        },
        "preNccAdExtensionId": {
          "type": "string"
        },
        "schedule": {
          "example": "[gist: \"0c01a5fdee874e93e2ab568a10a53fdb\"]",
          "description": "확장 소재의 노출을 요일과 시간 별로 설정한 값입니다. 요일및 시간 계산은 https://github.com/naver/searchad-apidoc/wiki/FAQ 에서 확인할 수 있습니다.\nThe schedule of the AD extension\nThe format of this value is JSON\n- Every day and time : null\n- Partially applied : {\"SUN\":16777215,\"MON\":16777215,\"TUE\":16777215,\"WED\":16777215,\"THU\":16777215,\"FRI\":16777215,\"SAT\":16777215}\n - Each key is the day of week and value is the sum of bit operation with hour which is between 0 and 23 #required-create #hidden-update",
          "$ref": "#/definitions/JsonNode"
        },
        "type": {
          "type": "string",
          "description": "확장 소재의 종류를 나타냅니다.(https://github.com/naver/searchad-apidoc/wiki/FAQ)\n\"API를 이용하여 생성 불가능한 유형: \\n- SHOPPING_EXTRA\\n- CATALOG_EXTRA\\n- CATALOG_EVENT\\n- CATALOG_PURCHASE_CONDITION\\n- SHOPPING_BRAND_BROADCAST\\n- SHOPPING_BRAND_EVENT\\n- PLACE_SMART_ORDER,NAVER_BLOG_REVIEW\\n- POWER_LINK_IMAGE\\n- IMAGE_SUB_LINKS\\n- CATALOG_IMAGE\\n- NAVER_TV_VIDEO\\n- SHOPPING_BRAND_IMAGE\\n- SHOPPING_BRAND_VIDEO\\n \"The type of the AD extension #required-create #hidden-update",
          "enum": [
            "PHONE",
            "LOCATION",
            "BOOKING",
            "TALK",
            "CALCULATION",
            "HEADLINE",
            "DESCRIPTION",
            "SUB_LINKS",
            "PRICE_LINKS",
            "PROMOTION",
            "SHOPPING_EXTRA",
            "POWER_LINK_IMAGE",
            "IMAGE_SUB_LINKS",
            "PLACE",
            "CATALOG_RELEASE_DATE",
            "CATALOG_EXTRA",
            "CATALOG_DETAIL",
            "CATALOG_IMAGE",
            "CATALOG_PROMOTION",
            "CATALOG_EVENT",
            "CATALOG_MOVIE",
            "CATALOG_PURCHASE_CONDITION",
            "CATALOG_BRAND_MESSAGE",
            "NAVER_TV_VIDEO",
            "NAVER_BLOG_REVIEW",
            "SHOPPING_BRAND_VIDEO",
            "SHOPPING_BRAND_IMAGE",
            "SHOPPING_BRAND_BROADCAST",
            "PLACE_SMART_ORDER",
            "SHOPPING_BRAND_EVENT",
            "PLACE_BEAUTY_STYLE",
            "DESCRIPTION_EXTRA",
            "SHOPPING_BRAND_DAY",
            "SHOPPING_WEB",
            "WEBSITE_INFO"
          ]
        },
        "usePeriod": {
          "type": "boolean",
          "example": false,
          "description": "노출 기간 설정 사용여부를 나타냅니다. true: 사용, false: 사용안함\nuse period.  \n true: use, false: unuse  If this field is blank, and then set to the default value(false)."
        },
        "userLock": {
          "type": "boolean",
          "example": false,
          "description": "확장 소재의 On/Off 노출 설정입니다. true일 경우 노출이 중지됩니다. false일 경우 노출이 가능합니다.\nThis field can be used for ENABLED or PAUSED of the AD extension #required-create #hidden-update"
        }
      }
    },
    "AdKeyword": {
      "type": "object",
      "properties": {
        "attr": {
          "type": "string",
          "example": "{}",
          "description": "#hidden-create #hidden-response #required-update"
        },
        "bidAmt": {
          "type": "integer",
          "format": "int64",
          "description": "Max CPC (cost per click) bid. At the AD Keyword level. You can enter between 70 to 100000. When you create a new Ad Keyword, If this field is blank, and then set to the default value (70). This field should be used with 'useGroupBidAmt' field. #optional-create #optional-update #optional-update-items  #hidden-uri-managedKeyword"
        },
        "customerId": {
          "type": "integer",
          "format": "int64",
          "description": "The unique ID of the customer #hidden-request  #hidden-uri-managedKeyword"
        },
        "editTm": {
          "type": "string",
          "description": "Recently modified time (RFC 3339 datetime). #hidden-request  #hidden-uri-managedKeyword"
        },
        "inspectRequestMsg": {
          "type": "string",
          "description": "A message for the inspector of the keyword values. This field may set when create or update a keyword. #optional-create #optional-update"
        },
        "inspectStatus": {
          "type": "string",
          "description": "Inspect status of this AD keyword #hidden-request  #hidden-uri-managedKeyword",
          "enum": [
            "UNDER_REVIEW",
            "APPROVED",
            "ELIGIBLE",
            "PENDING",
            "DENIED"
          ]
        },
        "keyword": {
          "type": "string",
          "description": "AD Keyword #required-create #hidden-update #hidden-update-items"
        },
        "links": {
          "example": "{\n  \"pc\":{\n    \"final\":\"http://yourdomain\" \n  },\n  \"mobile\":{\n    \"final\":\"http://yourdomain\"\n    }\n}",
          "description": "links json. #optional-create #optional-update #optional-update-items  #hidden-uri-managedKeyword",
          "$ref": "#/definitions/JsonNode"
        },
        "nccAdgroupId": {
          "type": "string",
          "description": "The unique ID of the adgroup containing this AD Keyword #hidden-create #required-update #required-update-items  #hidden-uri-managedKeyword"
        },
        "nccCampaignId": {
          "type": "string",
          "description": "The unique ID of the campaign containing this Ad Keyword #hidden-request  #hidden-uri-managedKeyword"
        },
        "nccKeywordId": {
          "type": "string",
          "description": "The unique Id of the keyword #required-update #required-update-items #hidden-create  #hidden-uri-managedKeyword"
        },
        "nccQi": {
          "description": "QI Information #hidden-request  #hidden-uri-managedKeyword",
          "$ref": "#/definitions/Qi"
        },
        "regTm": {
          "type": "string",
          "description": "Created time. (RFC 3339 datetime). #hidden-request  #hidden-uri-managedKeyword"
        },
        "resultStatus": {
          "description": "Registration Result Infomation #hidden-request  #hidden-uri-managedKeyword",
          "$ref": "#/definitions/ResultStatus"
        },
        "status": {
          "type": "string",
          "description": "Status of this AD keyword #hidden-request #hidden-uri-managedKeyword",
          "enum": [
            "ELIGIBLE",
            "PAUSED",
            "DELETED"
          ]
        },
        "statusReason": {
          "type": "string",
          "description": "Status reason of this Ad Keyword #hidden-request #hidden-uri-managedKeyword",
          "enum": [
            "KEYWORD_DELETED",
            "KEYWORD_PAUSED",
            "KEYWORD_DISAPPROVED",
            "KEYWORD_UNDER_REVIEW"
          ]
        },
        "useGroupBidAmt": {
          "type": "boolean",
          "example": false,
          "description": "Whether to use adgroup bid amount. This field should be used with 'bidAmt' field. #optional-create #optional-update #optional-update-items  #hidden-uri-managedKeyword"
        },
        "userLock": {
          "type": "boolean",
          "example": false,
          "description": "This field can be used for ENABLED or PAUSED of the AD keyword. #optional-create  #optional-update #optional-update-items  #hidden-uri-managedKeyword"
        }
      }
    },
    "AdRequest": {
      "type": "object",
      "properties": {
        "ad": {
          "example": "{\"pc\":{\"final\":\"http://searchad.naver.com\"},\"mobile\":{\"final\":\"http://m.searchad.naver.com\"},\"headline\":\"the first line\",\"description\":\"the second line of your ad text\"}",
          "description": "Creative of this instance. This creative's json schema formed by the field 'type'. #required-create #hidden-update",
          "$ref": "#/definitions/JsonNode"
        },
        "adAttr": {
          "example": "{\"bidAmt\":50,\"useGroupBidAmt\":true}",
          "description": "Bid infomation of this instance. (Required if Shopping Ad) #hidden-create #hidden-response #required-update",
          "$ref": "#/definitions/JsonNode"
        },
        "assets": {
          "type": "array",
          "description": "Ad assets, used only for RSA_AD type.",
          "items": {
            "$ref": "#/definitions/AdAssetRequest"
          }
        },
        "customerId": {
          "type": "integer",
          "format": "int64",
          "description": "The id of the customer containing this ad. #hidden-request"
        },
        "nccAdId": {
          "type": "string",
          "description": "The id of this ad. #hidden-create #required-update"
        },
        "nccAdgroupId": {
          "type": "string",
          "description": "The id of the adgroup containing this ad. #required-create #hidden-update"
        },
        "type": {
          "type": "string",
          "example": "[gist: \"9e18ded78951a8668267889205b6eb69\"]",
          "description": "Type of this ad (defined by json-schema form). #required-create #hidden-update",
          "enum": [
            "TEXT_45",
            "SHOPPING_PRODUCT_AD",
            "CONTENTS_AD_INFORMATION",
            "CONTENTS_AD_PRODUCT",
            "BRAND_SEARCH_AD",
            "PLACE_AD",
            "CATALOG_AD",
            "SHOPPING_BRAND_AD",
            "LOCAL_AD",
            "SHOPPING_BRAND_IMAGE_THUMBNAIL_AD",
            "SHOPPING_BRAND_IMAGE_BANNER_AD",
            "BRAND_SEARCH_NEW_AD",
            "RSA_AD",
            "MEDICAL_AD"
          ]
        },
        "userLock": {
          "type": "boolean",
          "example": false,
          "description": "Enable or Pause this ad by the user. 0:'ENABLED', 1:'PAUSED'. #optional-update"
        }
      }
    },
    "AdTemplate": {
      "type": "object",
      "properties": {
        "attributes": {
          "$ref": "#/definitions/AdTemplateAttributes"
        },
        "name": {
          "type": "string"
        },
        "previewImage": {
          "type": "string"
        },
        "templateId": {
          "type": "string"
        }
      }
    },
    "AdTemplateAttributes": {
      "type": "object",
      "properties": {
        "adgroupType": {
          "type": "string",
          "enum": [
            "WEB_SITE",
            "SHOPPING",
            "INFORMATION",
            "PRODUCT",
            "BRAND_SEARCH",
            "PLACE",
            "CATALOG",
            "BRAND_ZONE",
            "SHOPPING_BRAND",
            "LOCAL_AD",
            "BRAND_NEW"
          ]
        },
        "contractableMaxDays": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "maxExposingPeriod": {
          "type": "integer",
          "format": "int32"
        },
        "media": {
          "type": "string",
          "enum": [
            "PC",
            "MOBILE"
          ]
        },
        "minimumPrice": {
          "type": "integer",
          "format": "int64"
        },
        "periodOfUnitPrice": {
          "type": "integer",
          "format": "int64"
        },
        "prices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateQcPrice"
          }
        },
        "productType": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "templateId": {
          "type": "string"
        },
        "templateSellType": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "LIGHT",
            "PREMIUM",
            "LIMITED",
            "BRAND_NEW"
          ]
        },
        "useFlag": {
          "type": "boolean"
        }
      }
    },
    "AdditionalProperties": {
      "type": "object",
      "properties": {
        "channelSequence": {
          "type": "integer",
          "format": "int64"
        },
        "keepCount": {
          "type": "integer",
          "format": "int32"
        },
        "purchaseCount": {
          "type": "integer",
          "format": "int32"
        },
        "reviewCount": {
          "type": "integer",
          "format": "int32"
        },
        "standardPurchaseOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StandardPurchaseOption"
          }
        },
        "todayReceive": {
          "type": "boolean"
        }
      }
    },
    "Adgroup": {
      "type": "object",
      "properties": {
        "adRollingType": {
          "type": "string",
          "description": "광고 소재의 롤링 유형입니다.\nThe rolled type of the creative.",
          "enum": [
            "ROUND_ROBIN",
            "PERFORMANCE"
          ]
        },
        "adgroupAttrJson": {
          "example": "{\n  \"contentsType\": \"INFORMATION\"\n} \nor\n {\n \"media\":\"PC\", \n \"templateId\":\"abcdefg\"",
          "description": "광고그룹 속성 Json 입니다. 애드그룹 속성 JSON. 캠페인 유형이 'BRAND_SEARCH'인 경우 'media' 및 'templateId' 속성이 필수이며, 'media' 속성에는 'PC' 및 'MOBILE' 값을 가질 수 있습니다. 캠페인 유형이 'POWER_CONTENTS'인 경우 'contentsType' 속성이 필요합니다. 'contentsType' 속성은 '정보' 및 '제품' 값을 가질 수 있습니다.\nadgroup attribute json. The 'media' and 'templateId' properties are required if the campaign type is 'BRAND_SEARCH', and the 'media' property can have values 'PC' and 'MOBILE'. The 'contentsType' property is required if the campaign type is 'POWER_CONTENTS'. The 'contentsType' property can have the values 'INFORMATION' and 'PRODUCT'. #optional-create #hidden-update",
          "$ref": "#/definitions/JsonNode"
        },
        "adgroupType": {
          "type": "string",
          "description": "광고그룹의 종류를 나타냅니다.\nThe type of the adgroup.",
          "enum": [
            "WEB_SITE",
            "SHOPPING",
            "INFORMATION",
            "PRODUCT",
            "BRAND_SEARCH",
            "PLACE",
            "CATALOG"
          ]
        },
        "bidAmt": {
          "type": "integer",
          "format": "int32",
          "description": "광고그룹의 키워드에 적용되는 입찰가를 나타냅니다.\nMax CPC (cost per click) bid. At the Ad group level, this represents the default bid applicable for keywords in this Ad Group. You can enter between 70 to 100000. When you create a new Ad Group, If this field is blank, and then set to the default value (70)."
        },
        "budgetLock": {
          "type": "boolean",
          "example": false,
          "description": "노출 잠김 여부입니다.\nDaily budget status of this AdGroup."
        },
        "contentsNetworkBidAmt": {
          "type": "integer",
          "format": "int32",
          "description": "컨텐츠 네트워크 입찰가를 나타냅니다.\nMax CPC (cost per click) bid used in contents networks. You can enter between 70 to 100000. When you create a new Ad Group, If this field is blank, and then set to the default value.(70). This field isn't use to Adgroup of Shopping campaign type. #required-update"
        },
        "contentsNetworkBidWeight": {
          "type": "integer",
          "format": "int32",
          "description": "컨텐츠 네트워크 가중치 값을 나타냅니다. 기본 값은 사용안함입니다. 쇼핑 캠페인이외 다른 캠페인에서는 무시됩니다.\nBids weights used in content networks. You can enter between 10 to 500. When you create a new Ad Group, If this field is blank, and then set to the default value.(100). #required-update"
        },
        "customerId": {
          "type": "integer",
          "format": "int64",
          "description": "광고 계정 고유 번호입니다.\nThe unique ID of the customer."
        },
        "dailyBudget": {
          "type": "integer",
          "format": "int64",
          "description": "광고 그룹의 하루 예산을 나타냅니다.\nThe maximum budget of the use of the Ad Group during the day. You can enter between 70 to 1000000000. When you create a new Ad Group, If this field is blank, and then set to the default value.(0). #required-update"
        },
        "editTm": {
          "type": "string",
          "description": "광고 그룹 최근 수정 시각입니다.\nRecently modified time (RFC 3339 datetime). #hidden-request"
        },
        "expSearchBudgetRatio": {
          "type": "integer",
          "format": "int32",
          "description": "광고주가 설정하는 기존 예산 중 확장 검색 에 사용할 예산 비율.(기본: 100%)\nPercentage of the existing budget set by the advertiser to use for Extended Search (Default: 100%)"
        },
        "mobileChannelId": {
          "type": "string",
          "description": "모바일 비즈니스 채널의 고유 ID입니다.\nThe unique ID of the mobile buisness channel containing this Ad Group. If necessary this ad group will need to enter the ID of the type of case belong to the campaign \"SITE\" type of channel type of web site, enter the ID of the channel type of case \"MALL\" type belonging to the shopping kind of campaign there is."
        },
        "mobileNetworkBidWeight": {
          "type": "integer",
          "format": "int32",
          "description": "모바일 네트워크 가중치 값을 나타냅니다.\nBids weights used in mobile networks. You can enter between 10 to 500. When you create a new Ad Group, If this field is blank, and then set to the default value.(100). #required-update"
        },
        "name": {
          "type": "string",
          "description": "광고그룹의 이름입니다.\nName of this Ad Group. This field is required and should not be null for ADD operations."
        },
        "nccAdgroupId": {
          "type": "string",
          "description": "광고그룹의 고유 ID입니다.\nThe unique ID of this Ad Group"
        },
        "nccCampaignId": {
          "type": "string",
          "description": "광고그룹이 속한 캠페인의 고유 ID입니다.\nThe unique ID of the campaign with which this Ad Group is associated."
        },
        "numberInUse": {
          "type": "integer",
          "format": "int32",
          "description": "공유예산에 속한 광고 그룹의 개수입니다.\nNumber of entities using the shared budget"
        },
        "pcChannelId": {
          "type": "string",
          "description": "PC 비즈니스 채널의 고유 ID입니다.\nThe unique ID of the pc buisness channel containing this Ad Group. If necessary this ad group will need to enter the ID of the type of case belong to the campaign \"SITE\" type of channel type of web site, enter the ID of the channel type of case \"MALL\" type belonging to the shopping kind of campaign there is."
        },
        "pcNetworkBidWeight": {
          "type": "integer",
          "format": "int32",
          "description": "PC 네트워크 가중치 값을 나타냅니다.\nBids weights used in PC networks. You can enter between 10 to 500. When you create a new Ad Group, If this field is blank, and then set to the default value.(100) #required-update"
        },
        "productGroup": {
          "description": "Bundle unit for managing Naver shopping-linked products to be exposed along with the material",
          "$ref": "#/definitions/ProductGroup"
        },
        "regTm": {
          "type": "string",
          "description": "광고그룹 등록 시각입니다.\nTime that the Ad Group has been created. (RFC 3339 datetime). #hidden-request"
        },
        "sharedBudgetExpectCost": {
          "type": "integer",
          "format": "int64",
          "description": "광고그룹이 속한 공유예산의 예상 과금액입니다.\nExpected cost of the shared budget"
        },
        "sharedBudgetId": {
          "type": "string",
          "description": "공유 예산을 사용할 경우 사용중인 공유 예산 번호입니다. 공유 예산을 사용하지 않으면 null값입니다.\nIf using shared budget, the shared budget ID in use. Null if you are not using shared budgets."
        },
        "sharedBudgetLock": {
          "type": "boolean",
          "example": false,
          "description": "광고그룹이 속한 공유예산의 잠김 여부입니다.\nWhether the shared budget is locked or not"
        },
        "sharedBudgetName": {
          "type": "string",
          "description": "공유 예산을 사용할 경우 사용중인 공유 예산 이름입니다. 공유 예산을 사용하지 않으면 null값입니다.\nIf using shared budget, the shared budget name in use. Null if you are not using shared budgets."
        },
        "sharedDailyBudget": {
          "type": "integer",
          "format": "int64",
          "description": "광고그룹이 속한 공유예산의 하루예산입니다.\nShared Daily budget"
        },
        "sharedExpSearchBudgetRatio": {
          "type": "integer",
          "format": "int32",
          "description": "공유예산:광고주가 설정하는 기존 예산 중 확장 검색 에 사용할 예산 비율.(기본: 100%)\nShared Budget: The percentage of existing budgets set by advertisers that will be used for Extended Search . (Default: 100%)"
        },
        "status": {
          "type": "string",
          "description": "광고그룹의 상태를 나타냅니다.\nStatus of this Ad Group #hidden-request",
          "enum": [
            "ELIGIBLE",
            "LIMITED_ELIGIBLE",
            "PAUSED",
            "DELETED"
          ]
        },
        "statusReason": {
          "type": "string",
          "description": "광고그룹의 상태에 대한 원인을 나타냅니다.\nStatus reason of this Ad Group #hidden-request",
          "enum": [
            "CAMPAIGN_PAUSED",
            "CAMPAIGN_PENDING",
            "CAMPAIGN_ENDED",
            "CAMPAIGN_LIMITED_BY_BUDGET",
            "BUSINESS_CHANNEL_PAUSED",
            "BUSINESS_CHANNEL_DISAPPROVED",
            "BUSINESS_CHANNEL_UNDER_REVIEW",
            "PC_BUSINESS_CHANNEL_APPROVED",
            "PC_BUSINESS_CHANNEL_DISAPPROVED",
            "PC_BUSINESS_CHANNEL_UNDER_REVIEW",
            "MOBILE_BUSINESS_CHANNEL_APPROVED",
            "MOBILE_BUSINESS_CHANNEL_DISAPPROVED",
            "MOBILE_BUSINESS_CHANNEL_UNDER_REVIEW",
            "GROUP_DELETED",
            "GROUP_PAUSED",
            "GROUP_LIMITED_BY_BUDGET"
          ]
        },
        "systemBiddingType": {
          "type": "string",
          "description": "광고그룹의 자동입찰 속성을 나타냅니다.\nThe type of adgroup system bidding.",
          "enum": [
            "NONE",
            "ML"
          ]
        },
        "targets": {
          "type": "array",
          "description": "광고그룹의 타겟팅 정보를 나타냅니다.\nEach targeting information in the Ad Group. When you create a new Ad Group, If this field is blank, and then set to the default targetting",
          "items": {
            "$ref": "#/definitions/Target"
          }
        },
        "useCntsNetworkBidAmt": {
          "type": "boolean",
          "example": false,
          "description": "컨텐츠 네트워크 입찰가 사용 여부를 나타냅니다.\nWhether to use separate bids for the content network. When you create a new Ad Group, If this field is blank, and then set to the default value.(false). This field isn't use to Adgroup of Shopping campaign type. #required-update"
        },
        "useCntsNetworkBidWeight": {
          "type": "boolean",
          "example": false,
          "description": "컨텐츠 네트워크 입찰 가중치 사용여부를 나타냅니다.\nWhether to use separate bids for the content network. When you create a new Ad Group, If this field is blank, and then set to the default value.(false). #required-update"
        },
        "useDailyBudget": {
          "type": "boolean",
          "example": false,
          "description": "광고그룹의 하루 최대 예산을 사용할지 여부를 나타냅니다.\nWhether to use maximum budget of a day of the Ad Group. When you create a new Ad Group, If this field is blank, and then set to the default value.(false) #required-update"
        },
        "useExpSearch": {
          "type": "boolean",
          "example": false,
          "description": "광고 그룹 테이블에 '확장 검색 사용 여부' 필드 USE_EXP_SEARCH 추가:1 : 사용, 0 : 사용 안 함\nAdd 'Enable Extended Search' field USE_EXP_SEARCH to the Advertising Group table 1:1:Enable, 0:Disable (Default: Enable)"
        },
        "userLock": {
          "type": "boolean",
          "example": false,
          "description": "광고그룹의 On/Off 노출 설정입니다. true일 경우 노출이 중지됩니다. false일 경우 노출이 가능합니다.\nThis field can be used for ENABLED or PAUSED of the Ad Group. When you create a new Ad Group, If this field is blank, and then set to the default value.(false)"
        },
        "autobidStrategy": {
         "description": "쇼핑몰 상품형 광고그룹의 자동입찰 전략 속성을 나타냅니다.\nThe type of adgroup system bidding.",
          "$ref": "#/definitions/AutobidStrategy"
        }
      }
    },
    "AdgroupRequest": {
      "type": "object",
      "properties": {
        "adRollingType": {
          "type": "string",
          "description": "광고 소재의 롤링 유형입니다.\nThe rolled type of the creative.",
          "enum": [
            "ROUND_ROBIN",
            "PERFORMANCE"
          ]
        },
        "adgroupAttrJson": {
          "example": "{\n  \"contentsType\": \"INFORMATION\"\n} \nor\n {\n \"media\":\"PC\", \n \"templateId\":\"abcdefg\"",
          "description": "adgroup attribute json. The 'media' and 'templateId' properties are required if the campaign type is 'BRAND_SEARCH', and the 'media' property can have values 'PC' and 'MOBILE'. The 'contentsType' property is required if the campaign type is 'POWER_CONTENTS'. The 'contentsType' property can have the values 'INFORMATION' and 'PRODUCT'. #optional-create #hidden-update",
          "$ref": "#/definitions/JsonNode"
        },
        "adgroupType": {
          "type": "string",
          "description": "광고그룹의 종류를 나타냅니다.\nThe type of the adgroup.",
          "enum": [
            "WEB_SITE",
            "SHOPPING",
            "INFORMATION",
            "PRODUCT",
            "BRAND_SEARCH",
            "PLACE",
            "CATALOG"
          ]
        },
        "bidAmt": {
          "type": "integer",
          "format": "int32",
          "description": "광고그룹의 키워드에 적용되는 입찰가를 나타냅니다.\nMax CPC (cost per click) bid. At the Ad group level, this represents the default bid applicable for keywords in this Ad Group. You can enter between 70 to 100000. When you create a new Ad Group, If this field is blank, and then set to the default value (70). #required-update"
        },
        "contentsNetworkBidAmt": {
          "type": "integer",
          "format": "int32",
          "description": "컨텐츠 네트워크 입찰가를 나타냅니다.\nMax CPC (cost per click) bid used in contents networks. You can enter between 70 to 100000. When you create a new Ad Group, If this field is blank, and then set to the default value.(70). This field isn't use to Adgroup of Shopping campaign type. #required-update"
        },
        "contentsNetworkBidWeight": {
          "type": "integer",
          "format": "int32",
          "description": "컨텐츠 네트워크 가중치 값을 나타냅니다. 기본 값은 사용안함입니다. 쇼핑 캠페인이외 다른 캠페인에서는 무시됩니다.\nBids weights used in content networks. You can enter between 10 to 500. When you create a new Ad Group, If this field is blank, and then set to the default value.(100). #required-update"
        },
        "customerId": {
          "type": "integer",
          "format": "int64",
          "description": "광고 계정 고유 번호입니다.\nThe unique ID of the customer. #required-create #hidden-request"
        },
        "dailyBudget": {
          "type": "integer",
          "format": "int64",
          "description": "광고 그룹의 하루 예산을 나타냅니다.\nThe maximum budget of the use of the Ad Group during the day. You can enter between 70 to 1000000000. When you create a new Ad Group, If this field is blank, and then set to the default value.(0). #required-update"
        },
        "expSearchBudgetRatio": {
          "type": "integer",
          "format": "int32",
          "description": "광고주가 설정하는 기존 예산 중 확장 검색 에 사용할 예산 비율.(기본: 100%)\nPercentage of the existing budget set by the advertiser to use for Extended Search (Default: 100%)"
        },
        "keywordGroup": {
          "type": "array",
          "description": "Keyword Group For New Product Search Type",
          "items": {
            "type": "string"
          }
        },
        "keywordGroupCategoryId": {
          "type": "string",
          "description": "Keyword Group Category Id For New Product Search Type"
        },
        "mobileChannelId": {
          "type": "string",
          "description": "모바일 비즈니스 채널의 고유 ID입니다.\nThe unique ID of the mobile buisness channel containing this Ad Group. If necessary this ad group will need to enter the ID of the type of case belong to the campaign \"SITE\" type of channel type of web site, enter the ID of the channel type of case \"MALL\" type belonging to the shopping kind of campaign there is. #required-create"
        },
        "mobileNetworkBidWeight": {
          "type": "integer",
          "format": "int32",
          "description": "모바일 네트워크 가중치 값을 나타냅니다.\nBids weights used in mobile networks. You can enter between 10 to 500. When you create a new Ad Group, If this field is blank, and then set to the default value.(100). #required-update"
        },
        "name": {
          "type": "string",
          "description": "광고그룹의 이름입니다.\nName of this Ad Group. This field is required and should not be null for ADD operations. #required-create"
        },
        "nccAdgroupId": {
          "type": "string",
          "description": "광고그룹의 고유 ID입니다.\nThe unique ID of this Ad Group #hidden-create #required-update"
        },
        "nccCampaignId": {
          "type": "string",
          "description": "광고그룹이 속한 캠페인의 고유 ID입니다.\nThe unique ID of the campaign with which this Ad Group is associated. #required-create"
        },
        "nccProductGroupId": {
          "type": "string"
        },
        "pcChannelId": {
          "type": "string",
          "description": "PC 비즈니스 채널의 고유 ID입니다.\nThe unique ID of the pc buisness channel containing this Ad Group. If necessary this ad group will need to enter the ID of the type of case belong to the campaign \"SITE\" type of channel type of web site, enter the ID of the channel type of case \"MALL\" type belonging to the shopping kind of campaign there is. #required-create"
        },
        "pcNetworkBidWeight": {
          "type": "integer",
          "format": "int32",
          "description": "PC 네트워크 가중치 값을 나타냅니다.\nBids weights used in PC networks. You can enter between 10 to 500. When you create a new Ad Group, If this field is blank, and then set to the default value.(100) #required-update"
        },
        "sharedBudgetId": {
          "type": "string",
          "description": "공유 예산을 사용할 경우 사용중인 공유 예산 번호입니다. 공유 예산을 사용하지 않으면 null값입니다.\nIf using shared budget, the shared budget ID in use. Null if you are not using shared budgets."
        },
        "sharedBudgetName": {
          "type": "string",
          "description": "공유 예산을 사용할 경우 사용중인 공유 예산 이름입니다. 공유 예산을 사용하지 않으면 null값입니다.\nIf using shared budget, the shared budget name in use. Null if you are not using shared budgets."
        },
        "sharedDailyBudget": {
          "type": "integer",
          "format": "int64",
          "description": "광고그룹이 속한 공유예산의 하루예산입니다.\nShared Daily budget"
        },
        "sharedExpSearchBudgetRatio": {
          "type": "integer",
          "format": "int32",
          "description": "공유예산:광고주가 설정하는 기존 예산 중 확장 검색 에 사용할 예산 비율.(기본: 100%)\nShared Budget: The percentage of existing budgets set by advertisers that will be used for Extended Search . (Default: 100%)"
        },
        "systemBiddingType": {
          "type": "string",
          "description": "광고그룹의 자동입찰 속성을 나타냅니다.\nThe type of adgroup system bidding.",
          "enum": [
            "NONE",
            "ML"
          ]
        },
        "targets": {
          "type": "array",
          "description": "광고그룹의 타겟팅 정보를 나타냅니다.\nEach targeting information in the Ad Group. When you create a new Ad Group, If this field is blank, and then set to the default targetting",
          "items": {
            "$ref": "#/definitions/TargetRequest"
          }
        },
        "useCntsNetworkBidAmt": {
          "type": "boolean",
          "example": false,
          "description": "컨텐츠 네트워크 입찰가 사용 여부를 나타냅니다.\nWhether to use separate bids for the content network. When you create a new Ad Group, If this field is blank, and then set to the default value.(false). #required-update"
        },
        "useCntsNetworkBidWeight": {
          "type": "boolean",
          "example": false,
          "description": "컨텐츠 네트워크 입찰 가중치 사용여부를 나타냅니다.\nWhether to use separate bids for the content network. When you create a new Ad Group, If this field is blank, and then set to the default value.(false). #required-update"
        },
        "useDailyBudget": {
          "type": "boolean",
          "example": false,
          "description": "광고그룹의 하루 최대 예산을 사용할지 여부를 나타냅니다.\nWhether to use maximum budget of a day of the Ad Group. When you create a new Ad Group, If this field is blank, and then set to the default value.(false) #required-update"
        },
        "useExpSearch": {
          "type": "boolean",
          "example": false,
          "description": "광고 그룹 테이블에 '확장 검색 사용 여부' 필드 USE_EXP_SEARCH 추가:1 : 사용, 0 : 사용 안 함\nAdd 'Enable Extended Search' field USE_EXP_SEARCH to the Advertising Group table 1:1:Enable, 0:Disable (Default: Enable)"
        },
        "userLock": {
          "type": "boolean",
          "example": false,
          "description": "광고그룹의 On/Off 노출 설정입니다. true일 경우 노출이 중지됩니다. false일 경우 노출이 가능합니다.\nThis field can be used for ENABLED or PAUSED of the Ad Group. When you create a new Ad Group, If this field is blank, and then set to the default value.(false) #required-update"
        },
        "autobidStrategy": {
         "description": "쇼핑몰 상품형 광고그룹의 자동입찰 전략 속성을 나타냅니다.\nThe type of adgroup system bidding.",
          "$ref": "#/definitions/AutobidStrategy"
        }
      }
    },
    "AdgroupRestrictKwd": {
      "type": "object",
      "properties": {
        "delFlag": {
          "type": "boolean",
          "example": false,
          "description": "When you create a new keyword, If this field is blank, and then set to the default value(false). #hidden-request #hidden-response"
        },
        "description": {
          "type": "string",
          "description": "Description of the keyword"
        },
        "keyword": {
          "type": "string",
          "description": "Impression-restricted keyword"
        },
        "nccAdgroupId": {
          "type": "string",
          "description": "The unique ID of this Ad Group #hidden-create #required-delete"
        },
        "nccAdgroupRestrictKwdId": {
          "type": "string",
          "description": "The unique ID of this impression-restricted keyword #hidden-create #required-delete"
        },
        "regTm": {
          "type": "string",
          "description": "Time that the keyword has been created. #hidden-request"
        },
        "resultStatus": {
          "description": "Registration Result Infomation #hidden-request  #hidden-uri-managedKeyword",
          "$ref": "#/definitions/ResultStatus"
        },
        "type": {
          "type": "string",
          "description": "Type of the keyword. default value is 'KEYWORD_PLUS_RESTRICT'",
          "enum": [
            "KEYWORD_PLUS_RESTRICT",
            "EXP_SEARCH"
          ]
        }
      }
    },
    "AssetRequest": {
      "type": "object",
      "properties": {
        "nccAssetId": {
          "type": "string"
        },
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "assetType": {
          "type": "string",
          "enum": [
            "TEXT"
          ]
        },
        "assetData": {
          "type": "string"
        },
        "inspectRequestMsg": {
          "type": "string"
        }
      }
    },
    "AssetResponse": {
      "type": "object",
      "properties": {
        "assetData": {
          "type": "string",
          "description": "assetData"
        },
        "assetType": {
          "type": "string",
          "description": "assetType",
          "enum": [
            "TEXT"
          ]
        },
        "customerId": {
          "type": "integer",
          "format": "int64",
          "description": "customerId"
        },
        "inspectStatus": {
          "type": "string",
          "description": "inspectStatus",
          "enum": [
            "UNDER_REVIEW",
            "APPROVED",
            "ELIGIBLE",
            "PENDING",
            "DENIED"
          ]
        },
        "nccAssetId": {
          "type": "string",
          "description": "asset id"
        }
      }
    },
    "AttachImageInfoResponse": {
      "type": "object",
      "properties": {
        "imageCount": {
          "type": "integer",
          "format": "int32"
        },
        "imageUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "representImage": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AutobidStrategy": {
      "type": "object",
      "properties": {
        "nccAutobidStrategyId": {
          "type": "string",
          "description": "Adgroup Automatic Bidding Strategy ID. 광고그룹의 자동입찰 전략 번호 #hidden-create #required-update"
        },
        "customerId": {
          "type": "int32",
          "description": "Customer ID. 광고 계정 번호 #hidden-create #required-update"
        },
        "autobidTargetId": {
          "type": "string",
          "description": "Target ID for applying the automated bidding strategy. 자동입찰을 적용할 대상 번호 #required-create #required-update"
        },
        "autobidTargetType": {
          "type": "string",
          "description": "Target types for applying automated bidding strategies. 자동입찰을 적용할 대상 유형 #required-create #required-update"
        },
        "isAutobidActive": {
          "type": "boolean",
          "description": "Whether to apply automatic bidding strategies. 자동입찰을 적용 여부 #required-create #required-update"
        },
        "autobidBidGoal": {
          "type": "string",
          "description": "Automatic Bidding Strategy Goal. 자동입찰 목표 #required-create #required-update"
        },
        "autobidBidType": {
          "type": "string",
          "description": "Bidding Strategy types. 입찰 유형 #required-create #required-update"
        },
        "autobidBidStrategy": {
          "type": "string",
          "description": "Bidding Strategy types. 입찰 전략  #required-create #required-update"
        },
        "autobidBidStrategyValue": {
          "type": "string",
          "description": "Bidding Strategy cap value. 입찰 전략 값 #required-create #required-update"
        }
      }
    },
    "BlackMarketLastSuccessfulBidPriceResponse": {
      "type": "object",
      "required": [
        "categoryId",
        "knockDownPrice"
      ],
      "properties": {
        "categoryId": {
          "type": "string"
        },
        "knockDownPrice": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BrandCatalogSearchResult": {
      "type": "object",
      "required": [
        "del_FLAG",
        "nvMid",
        "order"
      ],
      "properties": {
        "apply_TM": {
          "type": "integer",
          "format": "int64"
        },
        "brndNm": {
          "type": "string"
        },
        "brndSeq": {
          "type": "string"
        },
        "catId": {
          "type": "string"
        },
        "catalogTitle": {
          "type": "string"
        },
        "catalogUrl": {
          "type": "string"
        },
        "certifiedLowestPrc": {
          "type": "integer",
          "format": "int32"
        },
        "certifiedProdCnt": {
          "type": "integer",
          "format": "int32"
        },
        "del_FLAG": {
          "type": "integer",
          "format": "int32"
        },
        "imgUrl": {
          "type": "string"
        },
        "isAdded": {
          "type": "boolean"
        },
        "isBrandCatalog": {
          "type": "boolean"
        },
        "isChangedToBrandCatalog": {
          "type": "boolean"
        },
        "isChangedToNormalCatalog": {
          "type": "boolean"
        },
        "isRemoved": {
          "type": "boolean"
        },
        "lnchYmd": {
          "type": "integer",
          "format": "int64"
        },
        "lowestPrc": {
          "type": "integer",
          "format": "int32"
        },
        "makerNm": {
          "type": "string"
        },
        "makerSeq": {
          "type": "string"
        },
        "mdlySeasn": {
          "type": "string"
        },
        "modifyTimeMillis": {
          "type": "integer",
          "format": "int64"
        },
        "nvMid": {
          "type": "string"
        },
        "officialCertifiedLowestPrc": {
          "type": "integer",
          "format": "int32"
        },
        "officialCertifiedProdCnt": {
          "type": "integer",
          "format": "int32"
        },
        "officialLowestPrc": {
          "type": "integer",
          "format": "int32"
        },
        "officialProdCnt": {
          "type": "integer",
          "format": "int32"
        },
        "order": {
          "type": "integer",
          "format": "int32"
        },
        "prodNm": {
          "type": "string"
        },
        "prodTpCd": {
          "type": "string"
        },
        "prvdrId": {
          "type": "string"
        },
        "prvdrTpCd": {
          "type": "string"
        },
        "rgstYmdt": {
          "type": "integer",
          "format": "int64"
        },
        "srsSeq": {
          "type": "string"
        },
        "svcYn": {
          "type": "string"
        }
      }
    },
    "BrandNewCategory": {
      "type": "object",
      "required": [
        "depth",
        "gccSchemaId",
        "id",
        "name",
        "parentCategoryId",
        "path"
      ],
      "properties": {
        "depth": {
          "type": "integer",
          "format": "int32"
        },
        "dittoSchemaId": {
          "type": "string"
        },
        "gccSchemaId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "isSaUse": {
          "type": "boolean"
        },
        "isUse": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "parentCategoryId": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "BrandNewContract": {
      "type": "object",
      "properties": {
        "adgroupName": {
          "type": "string",
          "description": "광고 그룹명\nName of the adgroup containing this time contract"
        },
        "adgroupTemplateName": {
          "type": "string",
          "description": "광고 그룹 템플릿명\nTemplate Name of the adgroup containing this time contract  #hidden-response #hidden-request"
        },
        "bidAmt": {
          "type": "integer",
          "format": "int32",
          "description": "입찰 금액\nThe bid amount of time contract"
        },
        "biddingRound": {
          "type": "string",
          "description": "입찰 라운드\nThe bidding round of time contract"
        },
        "biddingStatus": {
          "type": "string",
          "description": "입찰 상태\nThe bidding status of time contract",
          "enum": [
            "BIDDING",
            "CONTRACTED",
            "DEFEATED",
            "BILLING",
            "CANCELED",
            "BILLING_DEFEATED",
            "REBIDDING",
            "FAILED_OCCUPATION"
          ]
        },
        "brandNewContractId": {
          "type": "string",
          "description": "계약 ID\nThe unique ID of the time contract"
        },
        "cancelCustomerId": {
          "type": "integer",
          "format": "int64",
          "description": "계약 취소자 계정 Id\nThe customer number of canceling time contract."
        },
        "cancelLoginId": {
          "type": "string",
          "description": "계약 취소자 회원 Id\nThe login ID of canceling time contract."
        },
        "cancelTm": {
          "type": "string",
          "description": "계약 취소 일시\nThe date-time of canceling time contract."
        },
        "contractAmt": {
          "type": "integer",
          "format": "int32",
          "description": "계약 금액\nThe contract amount of time contract"
        },
        "contractCustomerId": {
          "type": "integer",
          "format": "int64",
          "description": "계약자 계정 Id\nThe customer number of creating time contract."
        },
        "contractEndDt": {
          "type": "string",
          "description": "계약 종료일\nThe time at which the time contract ends (RFC 3339 date-time)."
        },
        "contractLoginId": {
          "type": "string",
          "description": "계약자 회원 Id\nThe login ID of creating time contract."
        },
        "contractName": {
          "type": "string",
          "description": "계약명 \nThe name of time contract"
        },
        "contractStartDt": {
          "type": "string",
          "description": "계약 시작일\nThe time at which the time contract ends (RFC 3339 date-time)."
        },
        "contractStatus": {
          "type": "string",
          "description": "계약 상태\nThe contract status of time contract",
          "enum": [
            "BIDDING",
            "DEFEATED",
            "BILLING",
            "UPCOMING_EXPOSE",
            "ON_EXPOSING",
            "CANCELED_ON_BIDDING",
            "CANCELED_BEFORE_EXPOSING",
            "CANCELED_ON_EXPOSING",
            "EXPOSE_COMPLETED",
            "BILLING_DEFEATED",
            "FAILED_CONTRACT",
            "REBIDDING"
          ]
        },
        "customerId": {
          "type": "integer",
          "format": "int64",
          "description": "광고주 ID\nThe unique ID of the customer"
        },
        "editTm": {
          "type": "string",
          "description": "수정 일시\nTime that the AD extension has been last modified (RFC 3339 datetime)."
        },
        "exposureEndDt": {
          "type": "string",
          "description": "노출 종료 일시\nThe end date-time of ad exposure"
        },
        "exposureStartDt": {
          "type": "string",
          "description": "노출 시작 일시\nThe start date-time of ad exposure"
        },
        "keywordGroupCategoryName": {
          "type": "string",
          "description": "키워드 그룹 카테고리 명\nThe name of keyword group category"
        },
        "nccAdgroupId": {
          "type": "string",
          "description": "광고 그룹 ID\nThe unique ID of the adgroup containing this time contract"
        },
        "paymentAmt": {
          "type": "integer",
          "format": "int32",
          "description": "결제 금액\nThe payment amount of time contract"
        },
        "refundAmt": {
          "type": "integer",
          "format": "int32",
          "description": "환불 금액\nThe refund amount of time contract"
        },
        "regTm": {
          "type": "string",
          "description": "등록 일시\nTime that the AD extension has been registered (RFC 3339 datetime)."
        },
        "winningBidDt": {
          "type": "string",
          "description": "낙찰 일시\nThe date-time of winning bid"
        }
      }
    },
    "BrandNewContractDto": {
      "type": "object",
      "required": [
        "adgroupName",
        "adgroupTemplateName",
        "bidAmt",
        "biddingRound",
        "biddingStatus",
        "brandNewContractId",
        "cancelBillingId",
        "cancelLoginId",
        "cancelTm",
        "contractAmt",
        "contractBillingId",
        "contractCustomerId",
        "contractEndDt",
        "contractLoginId",
        "contractName",
        "contractStartDt",
        "contractStatus",
        "customerId",
        "delFlag",
        "editTm",
        "keywordGroupCategoryId",
        "keywordGroupCategoryName",
        "mediaType",
        "nccAdgroupId",
        "paymentAmt",
        "penaltyDt",
        "refundAmt",
        "regTm",
        "templateId",
        "winningBidDt"
      ],
      "properties": {
        "adgroupName": {
          "type": "string"
        },
        "adgroupTemplateName": {
          "type": "string"
        },
        "bidAmt": {
          "type": "integer",
          "format": "int32"
        },
        "biddingRound": {
          "type": "string"
        },
        "biddingStatus": {
          "type": "string",
          "enum": [
            "BIDDING",
            "CONTRACTED",
            "DEFEATED",
            "BILLING",
            "CANCELED",
            "BILLING_DEFEATED",
            "REBIDDING",
            "FAILED_OCCUPATION"
          ]
        },
        "brandNewContractId": {
          "type": "string"
        },
        "cancelBillingId": {
          "type": "integer",
          "format": "int64"
        },
        "cancelCustomerId": {
          "type": "integer",
          "format": "int64"
        },
        "cancelLoginId": {
          "type": "string"
        },
        "cancelTm": {
          "type": "string",
          "format": "date-time"
        },
        "contractAmt": {
          "type": "integer",
          "format": "int32"
        },
        "contractBillingId": {
          "type": "integer",
          "format": "int64"
        },
        "contractCustomerId": {
          "type": "integer",
          "format": "int64"
        },
        "contractEndDt": {
          "type": "string",
          "format": "date-time"
        },
        "contractLoginId": {
          "type": "string"
        },
        "contractName": {
          "type": "string"
        },
        "contractStartDt": {
          "type": "string",
          "format": "date-time"
        },
        "contractStatus": {
          "type": "string",
          "enum": [
            "BIDDING",
            "DEFEATED",
            "BILLING",
            "UPCOMING_EXPOSE",
            "ON_EXPOSING",
            "CANCELED_ON_BIDDING",
            "CANCELED_BEFORE_EXPOSING",
            "CANCELED_ON_EXPOSING",
            "EXPOSE_COMPLETED",
            "BILLING_DEFEATED",
            "FAILED_CONTRACT",
            "REBIDDING"
          ]
        },
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "delFlag": {
          "type": "boolean"
        },
        "delTm": {
          "type": "string",
          "format": "date-time"
        },
        "editTm": {
          "type": "string",
          "format": "date-time"
        },
        "exposureEndDt": {
          "type": "string",
          "format": "date-time"
        },
        "exposureStartDt": {
          "type": "string",
          "format": "date-time"
        },
        "keywordGroupCategoryId": {
          "type": "string"
        },
        "keywordGroupCategoryName": {
          "type": "string"
        },
        "mediaType": {
          "type": "string",
          "enum": [
            "MOBILE",
            "PC"
          ]
        },
        "nccAdgroupId": {
          "type": "string"
        },
        "paymentAmt": {
          "type": "integer",
          "format": "int32"
        },
        "penaltyDt": {
          "type": "string",
          "format": "date-time"
        },
        "refundAmt": {
          "type": "integer",
          "format": "int32"
        },
        "regTm": {
          "type": "string",
          "format": "date-time"
        },
        "templateId": {
          "type": "string"
        },
        "winningBidDt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BrandNewContractRefundAmt": {
      "type": "object",
      "required": [
        "nonRefundableAmt",
        "refundAmt",
        "refundableAmt"
      ],
      "properties": {
        "nonRefundableAmt": {
          "type": "integer",
          "format": "int32"
        },
        "refundAmt": {
          "type": "integer",
          "format": "int32"
        },
        "refundableAmt": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BrandNewContractRequest": {
      "type": "object",
      "properties": {
        "nccAdgroupId": {
          "type": "string"
        },
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "contractName": {
          "type": "string"
        },
        "biddingRound": {
          "type": "string"
        },
        "isRebidding": {
          "type": "boolean"
        },
        "bidAmt": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BrandNewContractSummary": {
      "type": "object",
      "required": [
        "connectedCount",
        "nccAdgroupId",
        "waitingCount"
      ],
      "properties": {
        "connectedCount": {
          "type": "integer",
          "format": "int64"
        },
        "currentTimeContract": {
          "$ref": "#/definitions/BrandNewContractDto"
        },
        "nccAdgroupId": {
          "type": "string"
        },
        "waitingCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "BrandNewRound": {
      "type": "object",
      "required": [
        "bidDates",
        "expEndDate",
        "expStartDate",
        "lastKnockDownDate",
        "penaltyDate",
        "round"
      ],
      "properties": {
        "bidDates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BrandNewRoundBidDate"
          }
        },
        "expEndDate": {
          "type": "string"
        },
        "expStartDate": {
          "type": "string"
        },
        "lastKnockDownDate": {
          "type": "string"
        },
        "penaltyDate": {
          "type": "string"
        },
        "round": {
          "type": "string"
        }
      }
    },
    "BrandNewRoundBidDate": {
      "type": "object",
      "required": [
        "bidEndDate",
        "bidRound",
        "bidStartDate",
        "isMainBid",
        "knockDownDate"
      ],
      "properties": {
        "bidEndDate": {
          "type": "string"
        },
        "bidRound": {
          "type": "string"
        },
        "bidStartDate": {
          "type": "string"
        },
        "isMainBid": {
          "type": "boolean"
        },
        "knockDownDate": {
          "type": "string"
        }
      }
    },
    "BrandNewRoundKeywords": {
      "type": "object",
      "required": [
        "categories",
        "round"
      ],
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BrandNewRoundKeywordsCategory"
          }
        },
        "round": {
          "type": "string"
        }
      }
    },
    "BrandNewRoundKeywordsCategory": {
      "type": "object",
      "required": [
        "baseQc",
        "categoryId",
        "keywords",
        "knockDownBidPrice",
        "minBidPriceByAdmin",
        "minBidPriceByQc",
        "minBidPriceType"
      ],
      "properties": {
        "baseQc": {
          "type": "integer",
          "format": "int32"
        },
        "categoryId": {
          "type": "string"
        },
        "expUnitPrice": {
          "type": "integer",
          "format": "int32"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "knockDownBidPrice": {
          "type": "integer",
          "format": "int32"
        },
        "minBidPriceByAdmin": {
          "type": "integer",
          "format": "int32"
        },
        "minBidPriceByQc": {
          "type": "integer",
          "format": "int32"
        },
        "minBidPriceType": {
          "type": "string"
        }
      }
    },
    "BrandProductSearchResult": {
      "type": "object",
      "required": [
        "brandNo",
        "nvMid",
        "order"
      ],
      "properties": {
        "brandName": {
          "type": "string"
        },
        "brandNo": {
          "type": "string"
        },
        "category1Id": {
          "type": "string"
        },
        "category1Name": {
          "type": "string"
        },
        "category2Id": {
          "type": "string"
        },
        "category2Name": {
          "type": "string"
        },
        "category3Id": {
          "type": "string"
        },
        "category3Name": {
          "type": "string"
        },
        "category4Id": {
          "type": "string"
        },
        "category4Name": {
          "type": "string"
        },
        "del_FLAG": {
          "type": "integer",
          "format": "int32"
        },
        "imageUrl": {
          "type": "string"
        },
        "lowPrice": {
          "type": "string"
        },
        "makerName": {
          "type": "string"
        },
        "makerNo": {
          "type": "string"
        },
        "mallId": {
          "type": "string"
        },
        "mallName": {
          "type": "string"
        },
        "mallNo": {
          "type": "string"
        },
        "mallPcUrl": {
          "type": "string"
        },
        "mallProdMblUrl": {
          "type": "string"
        },
        "mallProductId": {
          "type": "string"
        },
        "mallProductUrl": {
          "type": "string"
        },
        "mobileLowPrice": {
          "type": "string"
        },
        "nvMid": {
          "type": "string"
        },
        "order": {
          "type": "integer",
          "format": "int32"
        },
        "productName": {
          "type": "string"
        },
        "productTitle": {
          "type": "string"
        },
        "rcvYn": {
          "type": "string"
        },
        "svcYn": {
          "type": "string"
        }
      }
    },
    "BrandProvider": {
      "type": "object",
      "required": [
        "additionalProperties",
        "additionalType",
        "creator",
        "identifier",
        "name",
        "url"
      ],
      "properties": {
        "additionalProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BrandProviderAdditionalProperty"
          }
        },
        "additionalType": {
          "type": "string"
        },
        "creator": {
          "$ref": "#/definitions/BrandProviderCreator"
        },
        "identifier": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "BrandProviderAdditionalProperty": {
      "type": "object",
      "required": [
        "additionalType",
        "propertyID",
        "value"
      ],
      "properties": {
        "additionalType": {
          "type": "string"
        },
        "propertyID": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "BrandProviderCreator": {
      "type": "object",
      "properties": {
        "memberOf": {
          "$ref": "#/definitions/BrandProviderCreatorMemberOf"
        }
      }
    },
    "BrandProviderCreatorMemberOf": {
      "type": "object",
      "required": [
        "additionalType",
        "alternateName",
        "name",
        "sequence"
      ],
      "properties": {
        "additionalType": {
          "type": "string"
        },
        "alternateName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "sequence": {
          "type": "string"
        }
      }
    },
    "BusinessChannel": {
      "type": "object",
      "properties": {
        "adultStatus": {
          "type": "string",
          "description": "Adult status of this business channel. #hidden-request",
          "enum": [
            "NOT_ADULT_URL",
            "ADULT_URL",
            "SEMI_ADULT_URL"
          ]
        },
        "blackStatus": {
          "type": "string",
          "description": "Black status of this business channel. #hidden-request",
          "enum": [
            "WHITE_URL",
            "BLACK_URL"
          ]
        },
        "businessInfo": {
          "type": "string",
          "example": "[gist: \"6d0f4f48ed6cc6f8b80b633eb75e385a\"]",
          "description": "The main data of the business channel.<br>The format of this value is JSON"
        },
        "channelKey": {
          "type": "string",
          "description": "The key information of channel. eg. site type is URL #hidden-create, #hidden-update"
        },
        "channelTp": {
          "type": "string",
          "description": "The business channel type",
          "enum": [
            "SITE",
            "PHONE",
            "ADDRESS",
            "BOOKING",
            "TALK",
            "CONTENTS",
            "PLACE",
            "CATALOG"
          ]
        },
        "customerId": {
          "type": "integer",
          "format": "int64",
          "description": "The unique ID of the customer #hidden-request"
        },
        "editTm": {
          "type": "string",
          "description": "Recently modified time (RFC 3339 datetime). #hidden-request"
        },
        "firstChargeTm": {
          "type": "string",
          "description": "Time that business channel used for ads. (RFC 3339 datetime). #hidden-request"
        },
        "inspectRequestMsg": {
          "type": "string",
          "description": "Inspect request message.  #optional-create #optional-update"
        },
        "inspectRequestTm": {
          "type": "string",
          "description": "Time that business channel request inspect. (RFC 3339 datetime). #hidden-request"
        },
        "inspectTm": {
          "type": "string",
          "description": "Time that business channel inspected. (RFC 3339 datetime). #hidden-request"
        },
        "mobileInspectStatus": {
          "type": "string",
          "description": "Inspect result for mobile devices. #hidden-create #hidden-update",
          "enum": [
            "UNDER_REVIEW",
            "APPROVED",
            "ELIGIBLE",
            "PENDING",
            "DENIED"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of this business channel. This field is required and should not be null for ADD operations."
        },
        "nccBusinessChannelId": {
          "type": "string",
          "description": "The unique ID of the business channel #hidden-create #required-update"
        },
        "pcInspectStatus": {
          "type": "string",
          "description": "Inspect result for PC devices. #hidden-create #hidden-update",
          "enum": [
            "UNDER_REVIEW",
            "APPROVED",
            "ELIGIBLE",
            "PENDING",
            "DENIED"
          ]
        },
        "regTm": {
          "type": "string",
          "description": "Time that the business channel has been created. (RFC 3339 datetime). #hidden-request"
        },
        "status": {
          "type": "string",
          "description": "Status of this business channel. #hidden-create #hidden-update",
          "enum": [
            "ELIGIBLE",
            "LIMITED_ELIGIBLE",
            "PAUSED",
            "DELETED"
          ]
        },
        "statusReason": {
          "type": "string",
          "description": "Status reason of this business channel. #hidden-create #hidden-update",
          "enum": [
            "ELIGIBLE",
            "CAMPAIGN_DELETED",
            "CAMPAIGN_PAUSED",
            "CAMPAIGN_PENDING",
            "CAMPAIGN_ENDED",
            "CAMPAIGN_LIMITED_BY_BUDGET",
            "CAMPAIGN_LIMITED_BY_SHARED_BUDGET",
            "BUSINESS_CHANNEL_PAUSED",
            "BUSINESS_CHANNEL_DISAPPROVED",
            "BUSINESS_CHANNEL_UNDER_REVIEW",
            "BUSINESS_CHANNEL_ABNORMAL_INTERLOCK",
            "PC_BUSINESS_CHANNEL_APPROVED",
            "PC_BUSINESS_CHANNEL_DISAPPROVED",
            "PC_BUSINESS_CHANNEL_ABNORMAL_INTERLOCK",
            "PC_BUSINESS_CHANNEL_UNDER_REVIEW",
            "MOBILE_BUSINESS_CHANNEL_APPROVED",
            "MOBILE_BUSINESS_CHANNEL_DISAPPROVED",
            "MOBILE_BUSINESS_CHANNEL_ABNORMAL_INTERLOCK",
            "MOBILE_BUSINESS_CHANNEL_UNDER_REVIEW",
            "GROUP_DELETED",
            "GROUP_PAUSED",
            "GROUP_LIMITED_BY_BUDGET",
            "GROUP_LIMITED_BY_SHARED_BUDGET",
            "GROUP_PAUSED_BY_INVALID_TARGET",
            "KEYWORD_DELETED",
            "KEYWORD_PAUSED",
            "KEYWORD_DISAPPROVED",
            "KEYWORD_DENIED",
            "KEYWORD_UNDER_REVIEW",
            "AD_DELETED",
            "AD_PAUSED",
            "AD_ABNORMAL_INTERLOCK",
            "AD_DISAPPROVED",
            "AD_UNDER_REVIEW",
            "AD_NOT_ENOUGH_ASSETS",
            "SHARED_BUDGET_LIMITED_BY_BUDGET",
            "SHARED_BUDGET_DELETED",
            "AD_EXTENSION_DELETED",
            "AD_EXTENSION_PAUSED",
            "AD_EXTENSION_NOT_SCHEDULED",
            "AD_EXTENSION_DISAPPROVED",
            "AD_EXTENSION_UNDER_REVIEW",
            "AD_EXTENSION_PENDING",
            "AD_EXTENSION_ABNORMAL_INTERLOCK",
            "LACK_OF_ACCOUNT_BALANCE",
            "REFUND_IN_PROGRESS",
            "ENABLED",
            "ASSET_DELETED",
            "ASSET_DISAPPROVED",
            "ASSET_UNDER_REVIEW"
          ]
        }
      }
    },
    "Campaign": {
      "type": "object",
      "properties": {
        "campaignTp": {
          "type": "string",
          "description": "campaignTp의 종류입니다. 유효한 값 목록은 다음과 같습니다\n The type for the campaign.  #required-create #hidden-update",
          "enum": [
            "WEB_SITE",
            "SHOPPING",
            "BRAND_SEARCH",
            "PLACE",
            "POWER_CONTENTS"
          ]
        },
        "customerId": {
          "type": "integer",
          "format": "int64",
          "description": "광고 계정 고유 번호입니다. 캠페인 생성/수정시 필수 입력값입니다.\n The unique ID of the customer #required-create #required-update  #hidden-request"
        },
        "dailyBudget": {
          "type": "integer",
          "format": "int64",
          "description": "캠페인에 설정된 하루 예산 최대값입니다. 'useDailyBudget' 값이 true일 경우에만 하루 예산이 적용됩니다. 광고주가 설정하지 않을 경우 기본값 0이 저장됩니다.\nThe maximum budget of the use of the campaign during the day. If this field is blank, and then set to the default value.(0). #hidden-update"
        },
        "deliveryMethod": {
          "type": "string",
          "description": "하루 예산을 이용하여 광고를 송출하는 방법을 나타냅니다. 기본 값은 빠른 소진(ACCELERATED) 이며, 균등 소진을 원할 경우 'STANDARD' 값을 입력 합니다.\nchoosing 'Accelerated' or 'Standard' ad delivery.  The default value is 'ACCELERATED'.  \n Available values are 'ACCELERATED', 'STANDARD'   #hidden-update",
          "enum": [
            "ACCELERATED",
            "STANDARD"
          ]
        },
        "editTm": {
          "type": "string",
          "description": "최근 수정 시각\nRecently modified time (RFC 3339 datetime). #hidden-request"
        },
        "name": {
          "type": "string",
          "description": "캠페인의 이름입니다. 캠페인 생성시 경우 필수 입력되어야 합니다.\nName of this campaign. This field is required and should not be null for ADD operations. #required-create  #hidden-update"
        },
        "nccCampaignId": {
          "type": "string",
          "description": "캠페인의 고유 식별자 입니다.\nThe unique ID of the campaign  #hidden-create #required-update"
        },
        "numberInUse": {
          "type": "integer",
          "format": "int32"
        },
        "periodEndDt": {
          "type": "string",
          "description": "캠페인 노출이 종료되는 날짜입니다. 'usePeriod' 값이 true 일 경우에만 유효합니다.\nThe time at which the campaign ends (RFC 3339 date-time). #hidden-update"
        },
        "periodStartDt": {
          "type": "string",
          "description": "캠페인 노출이 시작되는 날짜입니다. 'usePeriod' 값이 true 일 경우에만 유효합니다.\nThe time at which the campaign starts (RFC 3339 date-time). #hidden-update"
        },
        "regTm": {
          "type": "string",
          "description": "캠페인이 생성된 시각을 나타냅니다.\nThe time at which the campaign was created (RFC 3339 date-time). #hidden-request"
        },
        "sharedBudgetDeliveryMethod": {
          "type": "string",
          "description": "공유 예산을 사용하여 광고를 송출하는 방식입니다. 기본값은 빠른 소진(ACCELERATED) 이며 균등 소진은 'STANDARD' 입니다.\nHow ads are served using the shared budget. The default is 'ACCELERATED' for accelerated distribution and 'STANDARD' for even distribution.(ACCELERATED (1), STANDARD(2)) #hidden-update",
          "enum": [
            "ACCELERATED",
            "STANDARD"
          ]
        },
        "sharedBudgetExpectCost": {
          "type": "integer",
          "format": "int64",
          "description": "공유 예산을 사용할 경우 공유 예산에서 차감될 예상 과금액을 나타냅니다.\nExpected cost of the shared budget #hidden-update"
        },
        "sharedBudgetId": {
          "type": "string",
          "description": "공유 예산을 사용할 경우 사용중인 공유 예산 번호입니다. 공유 예산을 사용하지 않으면 null 값입니다.\nIf using shared budget, the shared budget ID in use. Null if you are not using shared budgets."
        },
        "sharedBudgetLock": {
          "type": "boolean",
          "example": false,
          "description": "공유 예산이 부족하여 노출이 중지된 경우 'true' 로 설정됩니다.\nWhether the shared budget is locked or not"
        },
        "sharedBudgetName": {
          "type": "string",
          "description": "공유 예산을 사용할 경우 사용중인 공유 예산 이름입니다. 공유 예산을 사용하지 않으면 null값입니다.\nIf using shared budget, the shared budget name in use. Null if you are not using shared budgets.  #hidden-update"
        },
        "sharedDailyBudget": {
          "type": "integer",
          "format": "int64",
          "description": "공유 예산을 사용할 경우 설정된 공유 예산의 최대 금액입니다.\nShared Daily budget #hidden-update"
        },
        "status": {
          "type": "string",
          "description": "캠페인 계산된 상태를 나타냅니다. 상태 값은 아래의 값중 하나를 가질 수 있습니다.(https://github.com/naver/searchad-apidoc/wiki/FAQ)\nStatus of this campaign #hidden-request",
          "enum": [
            "ELIGIBLE",
            "PAUSED",
            "DELETED"
          ]
        },
        "statusReason": {
          "type": "string",
          "description": "캠페인 상태에 대한 이유를 나타냅니다. 이유는 아래의 값중 하나를 가질 수 있습니다.\nStatus reason of this campaign #hidden-request",
          "enum": [
            "CAMPAIGN_PAUSED",
            "CAMPAIGN_PENDING",
            "CAMPAIGN_ENDED",
            "CAMPAIGN_LIMITED_BY_BUDGET"
          ]
        },
        "trackingMode": {
          "type": "string",
          "description": "캠페인의 추적 기능 설정을 나타냅니다.\nThe type of the conversion tracking. Available values are 'TRACKING_DISABLED', 'AUTO_TRACKING_MODE', 'PASS_THROUGH_SITE_MODE'. If this field is blank, and then set to the default value(TRACKING_DISABLED). #hidden-update ",
          "enum": [
            "TRACKING_DISABLED",
            "AUTO_TRACKING_MODE",
            "PASS_THROUGH_SITE_MODE"
          ]
        },
        "trackingUrl": {
          "type": "string",
          "description": "캠페인의 추적 기능 설정이 '추적 경유 사이트(PASS_THROUGH_SITE_MODE)'일 때 중간 경유할 URL입니다.\nThe value which indicates an URL of the intermediate site used by customer for the purpose of conversion tracking. #hidden-update"
        },
        "trackingUrlCustomParams": {
          "type": "string",
          "description": "캠페인의 URL 파라미터 값 변경 기능입니다.\nTracking url custom parameter"
        },
        "useDailyBudget": {
          "type": "boolean",
          "example": false,
          "description": "하루 예산 사용 여부를 나타냅니다. 기본값은 false입니다.\nWhether to use maximum budget of a day of the campaign. If this field is blank, and then set to the default value.(false)  \n true: use, false: unuse #hidden-update"
        },
        "usePeriod": {
          "type": "boolean",
          "example": false,
          "description": "캠페인의 노출기간 설정 여부입니다. 노출 기간을 설정할 경우 true입니다. 노출 기간 설정시 시작일(periodStartDt), 종료일(periodEndDt)도 같이 설정하여야 합니다.\nuse period.  \n true: use, false: unuse  If this field is blank, and then set to the default value(false).  #hidden-update"
        },
        "userLock": {
          "type": "boolean",
          "example": false,
          "description": "캠페인의 On/Off 설정입니다. 노출을 중지할 경우 true 값을 가집니다.\nThis field can be used for ENABLED or PAUSED of the campaign. When you create a new campaign, If this field is blank, and then set to the default value.(false)  #required-update"
        }
      }
    },
    "CampaignRequest": {
      "type": "object",
      "properties": {
        "campaignTp": {
          "type": "string",
          "description": "campaignTp의 종류입니다. 유효한 값 목록은 다음과 같습니다.\n The type for the campaign.  #required-create #hidden-update",
          "enum": [
            "WEB_SITE",
            "SHOPPING",
            "BRAND_SEARCH",
            "PLACE",
            "POWER_CONTENTS"
          ]
        },
        "customerId": {
          "type": "integer",
          "format": "int64",
          "description": "광고 계정 고유 번호입니다. 캠페인 생성/수정시 필수 입력값입니다.\n The unique ID of the customer #required-create #required-update #hidden-request"
        },
        "dailyBudget": {
          "type": "integer",
          "format": "int64",
          "description": "캠페인에 설정된 하루 예산 최대값입니다. 'useDailyBudget' 값이 true일 경우에만 하루 예산이 적용됩니다. 광고주가 설정하지 않을 경우 기본값 0이 저장됩니다.\nThe maximum budget of the use of the campaign during the day. If this field is blank, and then set to the default value.(0). #hidden-update"
        },
        "deliveryMethod": {
          "type": "string",
          "description": "하루 예산을 이용하여 광고를 송출하는 방법을 나타냅니다. 기본 값은 빠른 소진(ACCELERATED) 이며, 균등 소진을 원할 경우 'STANDARD' 값을 입력 합니다.\nchoosing 'Accelerated' or 'Standard' ad delivery.  The default value is 'ACCELERATED'.  \n Available values are 'ACCELERATED', 'STANDARD'   #hidden-update",
          "enum": [
            "ACCELERATED",
            "STANDARD"
          ]
        },
        "name": {
          "type": "string",
          "description": "캠페인의 이름입니다. 캠페인 생성시 경우 필수 입력되어야 합니다.\nName of this campaign. This field is required and should not be null for ADD operations. #required-create  #hidden-update"
        },
        "nccCampaignId": {
          "type": "string",
          "description": "캠페인의 고유 식별자 입니다.\nThe unique ID of the campaign  #hidden-create #required-update"
        },
        "periodEndDt": {
          "type": "string",
          "description": "캠페인 노출이 종료되는 날짜입니다. 'usePeriod' 값이 true 일 경우에만 유효합니다.\nThe time at which the campaign ends (RFC 3339 date-time)."
        },
        "periodStartDt": {
          "type": "string",
          "description": "캠페인 노출이 시작되는 날짜입니다. 'usePeriod' 값이 true 일 경우에만 유효합니다.\nThe time at which the campaign starts (RFC 3339 date-time)."
        },
        "sharedBudgetDeliveryMethod": {
          "type": "string",
          "description": "공유 예산을 사용하여 광고를 송출하는 방식입니다. 기본값은 빠른 소진(ACCELERATED) 이며 균등 소진은 'STANDARD' 입니다.\nHow ads are served using the shared budget. The default is 'ACCELERATED' for accelerated distribution and 'STANDARD' for even distribution.(ACCELERATED (1), STANDARD(2))",
          "enum": [
            "ACCELERATED",
            "STANDARD"
          ]
        },
        "sharedBudgetId": {
          "type": "string",
          "description": "공유 예산을 사용할 경우 사용중인 공유 예산 번호입니다. 공유 예산을 사용하지 않으면 null 값입니다.\nIf using shared budget, the shared budget ID in use. Null if you are not using shared budgets."
        },
        "sharedBudgetName": {
          "type": "string",
          "description": "공유 예산을 사용할 경우 사용중인 공유 예산 이름입니다. 공유 예산을 사용하지 않으면 null값입니다.\nIf using shared budget, the shared budget name in use. Null if you are not using shared budgets. "
        },
        "sharedDailyBudget": {
          "type": "integer",
          "format": "int64",
          "description": "공유 예산을 사용할 경우 설정된 공유 예산의 최대 금액입니다.\nShared Daily budget"
        },
        "trackingMode": {
          "type": "string",
          "description": "캠페인의 추적 기능 설정을 나타냅니다.\nThe type of the conversion tracking. Available values are 'TRACKING_DISABLED', 'AUTO_TRACKING_MODE', 'PASS_THROUGH_SITE_MODE'. If this field is blank, and then set to the default value(TRACKING_DISABLED).",
          "enum": [
            "TRACKING_DISABLED",
            "AUTO_TRACKING_MODE",
            "PASS_THROUGH_SITE_MODE"
          ]
        },
        "trackingUrl": {
          "type": "string",
          "description": "캠페인의 추적 기능 설정이 '추적 경유 사이트(PASS_THROUGH_SITE_MODE)'일 때 중간 경유할 URL입니다.\nThe value which indicates an URL of the intermediate site used by customer for the purpose of conversion tracking."
        },
        "trackingUrlCustomParams": {
          "description": "캠페인의 URL 파라미터 값 변경 기능입니다.\nTracking url custom parameter",
          "$ref": "#/definitions/JsonNode"
        },
        "useDailyBudget": {
          "type": "boolean",
          "example": false,
          "description": "하루 예산 사용 여부를 나타냅니다. 기본값은 false입니다.\nWhether to use maximum budget of a day of the campaign. If this field is blank, and then set to the default value.(false)  \n true: use, false: unuse #hidden-update"
        },
        "usePeriod": {
          "type": "boolean",
          "example": false,
          "description": "캠페인의 노출기간 설정 여부입니다. 노출 기간을 설정할 경우 true입니다. 노출 기간 설정시 시작일(periodStartDt), 종료일(periodEndDt)도 같이 설정하여야 합니다.\nuse period.  \n true: use, false: unuse  If this field is blank, and then set to the default value(false)."
        },
        "userLock": {
          "type": "boolean",
          "example": false,
          "description": "캠페인의 On/Off 설정입니다. 노출을 중지할 경우 true 값을 가집니다.\nThis field can be used for ENABLED or PAUSED of the campaign. When you create a new campaign, If this field is blank, and then set to the default value.(false)  #required-update"
        }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "alternateName": {
          "type": "string"
        },
        "fullCategoryIdentifier": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        }
      }
    },
    "ContentsCampaignKeyword": {
      "type": "object",
      "properties": {
        "adgroupType": {
          "type": "string",
          "enum": [
            "WEB_SITE",
            "SHOPPING",
            "INFORMATION",
            "PRODUCT",
            "BRAND_SEARCH",
            "PLACE",
            "CATALOG",
            "BRAND_ZONE",
            "SHOPPING_BRAND",
            "LOCAL_AD",
            "BRAND_NEW"
          ]
        },
        "categoryId1": {
          "type": "string"
        },
        "categoryId2": {
          "type": "string"
        },
        "keyword": {
          "type": "string"
        },
        "monthlyMobileQcCnt": {
          "type": "string"
        },
        "monthlyPcQcCnt": {
          "type": "string"
        }
      }
    },
    "ContentsCampaignKeywordCategory": {
      "type": "object",
      "properties": {
        "adgroupType": {
          "type": "string",
          "enum": [
            "WEB_SITE",
            "SHOPPING",
            "INFORMATION",
            "PRODUCT",
            "BRAND_SEARCH",
            "PLACE",
            "CATALOG",
            "BRAND_ZONE",
            "SHOPPING_BRAND",
            "LOCAL_AD",
            "BRAND_NEW"
          ]
        },
        "depth": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "parentCategoryId": {
          "type": "string"
        }
      }
    },
    "Criterion": {
      "type": "object",
      "required": [
        "delFlag",
        "editTm"
      ],
      "properties": {
        "bidWeight": {
          "type": "integer",
          "format": "int32",
          "description": "입찰 가중치이며 범위는 50부터 500까지 설정 가능합니다.\nweight of bidding(50 ~ 500)"
        },
        "codeName": {
          "type": "string",
          "description": "Criterion Dictionary Code 이름입니다.\nThe name of Criterion Dictionary Code"
        },
        "customerId": {
          "type": "integer",
          "format": "int64",
          "description": "광고 계정 고유 번호입니다.\nThe unique number for your ad account."
        },
        "delFlag": {
          "type": "boolean"
        },
        "delTm": {
          "type": "string",
          "example": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
        },
        "dictionaryCode": {
          "type": "string",
          "description": "타겟팅 고유 번호입니다.\nCriterion Dictionary Code"
        },
        "editTm": {
          "type": "string",
          "example": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
        },
        "enable": {
          "type": "boolean",
          "example": false,
          "description": "타겟팅 사용 여부입니다.\nWhether to use criterion"
        },
        "negative": {
          "type": "boolean",
          "example": false,
          "description": "노출 제외 여부입니다.\nWhether to exposure or not"
        },
        "ownerId": {
          "type": "string",
          "description": "타겟팅이 속한 광고그룹 ID입니다.\nThe unique ID of owner entity which containing this criterion"
        },
        "regTm": {
          "type": "string",
          "description": "타겟팅이 등록된 시각입니다.\nThe time at which the target was created (RFC 3339 date-time)."
        },
        "type": {
          "type": "string",
          "description": "타게팅의 종류입니다.\n\nThe type of criterion. SCHEDULE(SD), REGIONAL(RL), PROXIMITY(RP), AGE(AG), GENDER(GN), AUDIENCE(AD).",
          "enum": [
            "SD",
            "RL",
            "RP",
            "DV",
            "AG",
            "GN",
            "AD",
            "CA"
          ]
        },
        "value": {
          "type": "string"
        }
      }
    },
    "CriterionDictionary": {
      "type": "object",
      "required": [
        "delFlag",
        "editTm",
        "regTm"
      ],
      "properties": {
        "delFlag": {
          "type": "boolean"
        },
        "delTm": {
          "type": "string",
          "example": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
        },
        "dictionaryCode": {
          "type": "string",
          "description": "Criterion Dictionary Code입니다.\nCriterion Dictionary Code."
        },
        "editTm": {
          "type": "string",
          "example": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
        },
        "name": {
          "type": "string",
          "description": "Criterion Dictionary Code 이름입니다.\nThe name of Criterion Dictionary Code"
        },
        "regTm": {
          "type": "string",
          "example": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
        },
        "type": {
          "type": "string",
          "description": "타게팅의 종류입니다.\nThe type of criterion. SCHEDULE(SD), REGIONAL(RL), PROXIMITY(RP), AGE(AG), GENDER(GN), AUDIENCE(AD)",
          "enum": [
            "SD",
            "RL",
            "RP",
            "DV",
            "AG",
            "GN",
            "AD",
            "CA"
          ]
        },
        "value": {
          "type": "string",
          "description": "PROXIMITY의 경우 위도 경도가 저장됩니다."
        }
      }
    },
    "CriterionRequest": {
      "type": "object",
      "properties": {
        "bidWeight": {
          "type": "integer",
          "format": "int32",
          "description": "입찰 가중치이며 범위는 50부터 500까지 설정 가능합니다.\nweight of bidding(50 ~ 500)"
        },
        "customerId": {
          "type": "integer",
          "format": "int64",
          "description": "광고 계정 고유 번호입니다.\nThe unique number for your ad account."
        },
        "dictionaryCode": {
          "type": "string",
          "description": "타겟팅 고유 번호입니다.\nCriterion Dictionary Code"
        },
        "enable": {
          "type": "boolean",
          "example": false,
          "description": "타겟팅 사용 여부입니다.\nWhether to use criterion"
        },
        "negative": {
          "type": "boolean",
          "example": false,
          "description": "노출 제외 여부입니다.\nWhether to exposure or not"
        },
        "ownerId": {
          "type": "string",
          "description": "타겟팅이 속한 광고그룹 ID입니다.\nThe unique ID of owner entity which containing this criterion"
        },
        "type": {
          "type": "string",
          "description": "타게팅의 종류입니다.\n\nThe type of criterion. SCHEDULE(SD), REGIONAL(RL), PROXIMITY(RP), AGE(AG), GENDER(GN), AUDIENCE(AD).",
          "enum": [
            "SD",
            "RL",
            "RP",
            "DV",
            "AG",
            "GN",
            "AD",
            "CA"
          ]
        },
        "value": {
          "type": "string"
        }
      }
    },
    "CtsNaAccountInfo": {
      "type": "object",
      "required": [
        "naAccountId",
        "url"
      ],
      "properties": {
        "naAccountId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "CTS_OFF",
            "CTS_UNSERVICEABILITY",
            "CTS_OLD_SERVICE_REQUESTED",
            "CTS_OLD_SERVICE_ON",
            "CTS_MOD_OLD_PARTNER",
            "CTS_FAIL_INSTALLTION",
            "CTS_REQUESTED",
            "CTS_MOD_PARTNER",
            "CTS_ON",
            "CTS_OLD_SERVICE_CLOSED",
            "CTS_SERVICE_CLOSED"
          ]
        },
        "url": {
          "type": "string"
        }
      }
    },
    "DeliveryFee": {
      "type": "object",
      "properties": {
        "price": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DemoFilter": {
      "type": "object",
      "properties": {
        "filterData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Filter"
          }
        },
        "naver": {
          "type": "boolean"
        },
        "shopping": {
          "type": "boolean"
        }
      }
    },
    "EstimateBidding": {
      "type": "object",
      "properties": {
        "bidAmt": {
          "type": "integer",
          "format": "int64",
          "description": "bidAmt #response-hidden"
        },
        "keyword": {
          "type": "string",
          "description": "Ad Keyword"
        },
        "nccKeywordId": {
          "type": "string",
          "description": "The unique Id of the keyword(if apiType is ids)"
        }
      }
    },
    "ExposureStatusAdExtension": {
      "type": "object",
      "properties": {
        "adExtensionId": {
          "type": "string"
        },
        "clickUrl": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ExposureStatusProduct": {
      "type": "object",
      "properties": {
        "categoryNames": {
          "type": "string"
        },
        "clickUrl": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "lowPrice": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nvMid": {
          "type": "string"
        }
      }
    },
    "Filter": {
      "type": "object",
      "properties": {
        "exposureName": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "startAge": {
          "type": "string"
        }
      }
    },
    "Image": {
      "type": "object",
      "properties": {
        "contentUrl": {
          "type": "string"
        },
        "statusCode": {
          "type": "string"
        }
      }
    },
    "ItemOffered": {
      "type": "object",
      "properties": {
        "image": {
          "$ref": "#/definitions/Image"
        },
        "isFamilyFriendly": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "JsonNode": {
      "type": "object"
    },
    "KeywordOccupationStatus": {
      "type": "object",
      "properties": {
        "availableStartDt": {
          "type": "string",
          "description": "The available start time (RFC 3339 datetime)."
        },
        "isOccupiable": {
          "type": "boolean",
          "example": false,
          "description": "The occupation status of AD keyword."
        },
        "keyword": {
          "type": "string",
          "description": "AD Keyword"
        },
        "mediaType": {
          "type": "string",
          "description": "The ",
          "enum": [
            "PC",
            "MOBILE"
          ]
        }
      }
    },
    "KeywordRequest": {
      "type": "object",
      "properties": {
        "attr": {
          "example": "{}",
          "description": "#hidden-create #hidden-response #required-update",
          "$ref": "#/definitions/JsonNode"
        },
        "bidAmt": {
          "type": "integer",
          "format": "int64",
          "description": "Max CPC (cost per click) bid. At the AD Keyword level. You can enter between 70 to 100000. When you create a new Ad Keyword, If this field is blank, and then set to the default value (70). This field should be used with 'useGroupBidAmt' field. #optional-create #optional-update #optional-update-items  #hidden-uri-managedKeyword"
        },
        "customerId": {
          "type": "integer",
          "format": "int64",
          "description": "The unique ID of the customer #hidden-request  #hidden-uri-managedKeyword"
        },
        "inspectRequestMsg": {
          "type": "string",
          "description": "A message for the inspector of the keyword values. This field may set when create or update a keyword. #optional-create #optional-update"
        },
        "inspectStatus": {
          "type": "string",
          "description": "Inspect status of this AD keyword #hidden-request  #hidden-uri-managedKeyword",
          "enum": [
            "UNDER_REVIEW",
            "APPROVED",
            "ELIGIBLE",
            "PENDING",
            "DENIED"
          ]
        },
        "keyword": {
          "type": "string",
          "description": "AD Keyword #required-create #hidden-update #hidden-update-items"
        },
        "links": {
          "example": "{\n  \"pc\":{\n    \"final\":\"http://yourdomain\" \n  },\n  \"mobile\":{\n    \"final\":\"http://yourdomain\"\n    }\n}",
          "description": "links json. #optional-create #optional-update #optional-update-items  #hidden-uri-managedKeyword",
          "$ref": "#/definitions/JsonNode"
        },
        "nccAdgroupId": {
          "type": "string",
          "description": "The unique ID of the adgroup containing this AD Keyword #hidden-create #required-update #required-update-items  #hidden-uri-managedKeyword"
        },
        "nccCampaignId": {
          "type": "string",
          "description": "The unique ID of the campaign containing this Ad Keyword #hidden-request  #hidden-uri-managedKeyword"
        },
        "nccKeywordId": {
          "type": "string",
          "description": "The unique Id of the keyword #required-update #required-update-items #hidden-create  #hidden-uri-managedKeyword"
        },
        "useGroupBidAmt": {
          "type": "boolean",
          "example": false,
          "description": "Whether to use adgroup bid amount. This field should be used with 'bidAmt' field. #optional-create #optional-update #optional-update-items  #hidden-uri-managedKeyword"
        },
        "userLock": {
          "type": "boolean",
          "example": false,
          "description": "This field can be used for ENABLED or PAUSED of the AD keyword. #optional-create  #optional-update #optional-update-items  #hidden-uri-managedKeyword"
        }
      }
    },
    "Label": {
      "type": "object",
      "properties": {
        "color": {
          "type": "string",
          "description": "Color of this label. This field is required and should not be null for UPDATE operation."
        },
        "customerId": {
          "type": "integer",
          "format": "int64",
          "description": "customerId #hidden-request"
        },
        "editTm": {
          "type": "string",
          "description": "Time that the label has been updated. (RFC 3339 datetime). #hidden-request"
        },
        "name": {
          "type": "string",
          "description": "Name of this label. This field is required and should not be null for UPDATE operation."
        },
        "nccLabelId": {
          "type": "string",
          "description": "labelId"
        },
        "regTm": {
          "type": "string",
          "description": "Time that the label has been created. (RFC 3339 datetime). #hidden-request"
        }
      }
    },
    "LabelRef": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "integer",
          "format": "int64",
          "description": "The unique ID of the customer #hidden-request"
        },
        "editTm": {
          "type": "string",
          "description": "Time that the labelRef has been updated. (RFC 3339 datetime). #hidden-request"
        },
        "enable": {
          "type": "boolean",
          "example": false,
          "description": "Whether to enable this label reference."
        },
        "nccLabelId": {
          "type": "string",
          "description": "The unique ID of the label"
        },
        "refId": {
          "type": "string",
          "description": "ID of reference. The refId value indicates nccAdgroupId or nccAdId or nccKeywordId."
        },
        "refTp": {
          "type": "string",
          "description": "Type of reference.",
          "enum": [
            "ADGROUP",
            "AD",
            "KEYWORD",
            "AD_EXTENSION"
          ]
        },
        "regTm": {
          "type": "string",
          "description": "Time that the labelRef has been created. (RFC 3339 datetime). #hidden-request"
        }
      }
    },
    "MainImage": {
      "type": "object",
      "properties": {
        "fileSizeByte": {
          "type": "integer",
          "format": "int64"
        },
        "height": {
          "type": "integer",
          "format": "int64"
        },
        "sequence": {
          "type": "integer",
          "format": "int64"
        },
        "signature": {
          "type": "number",
          "format": "double"
        },
        "thumbnailUrl": {
          "type": "string"
        },
        "width": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "MallCategory": {
      "type": "object",
      "properties": {
        "mallCatId": {
          "type": "string"
        },
        "mallCatLvl": {
          "type": "string"
        },
        "mallFullCatNm": {
          "type": "string"
        }
      }
    },
    "ManagedKeyword": {
      "type": "object",
      "properties": {
        "editTm": {
          "type": "string",
          "example": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
        },
        "expUiType": {
          "type": "string",
          "description": "Expansion UI type.",
          "enum": [
            "SHOPPING_MALL"
          ]
        },
        "isAdult": {
          "type": "boolean",
          "example": false,
          "description": "Whether an adult keyword."
        },
        "isLowSearchVolume": {
          "type": "boolean",
          "example": false,
          "description": "Whether low search volume keyword."
        },
        "isRestricted": {
          "type": "boolean",
          "example": false,
          "description": "Whether a exposure restricted keyword."
        },
        "isSeason": {
          "type": "boolean",
          "example": false,
          "description": "Whether a seasonal keyword."
        },
        "isSellProhibit": {
          "type": "boolean",
          "example": false,
          "description": "Whether a sell prohibited keyword."
        },
        "keyword": {
          "type": "string",
          "description": "AD Keyword"
        },
        "regTm": {
          "type": "string",
          "example": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
        }
      }
    },
    "ManagedKeywordResponse": {
      "type": "object",
      "properties": {
        "campaignAttributes": {
          "type": "object"
        },
        "keyword": {
          "type": "string"
        },
        "managedKeyword": {
          "$ref": "#/definitions/ManagedKeyword"
        }
      }
    },
    "MassJobCloneAdgroup": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "nccAdgroupId": {
          "type": "string"
        },
        "nccAdgroupName": {
          "type": "string"
        },
        "nccCampaignId": {
          "type": "string"
        },
        "nccCampaignName": {
          "type": "string"
        },
        "result": {
          "type": "string"
        }
      }
    },
    "MobilePrice": {
      "type": "object",
      "properties": {
        "price": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "NaverBookingResponse": {
      "type": "object",
      "required": [
        "copnyName",
        "id",
        "reprName",
        "state",
        "url"
      ],
      "properties": {
        "copnyName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "reprName": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "NaverCategory": {
      "type": "object",
      "properties": {
        "catId": {
          "type": "string"
        },
        "catLvl": {
          "type": "string"
        },
        "catNm": {
          "type": "string"
        },
        "expsOrd": {
          "type": "string"
        },
        "lastLvlYn": {
          "type": "string"
        },
        "parentCatId": {
          "type": "string"
        }
      }
    },
    "NaverPlaceBeauty": {
      "type": "object",
      "required": [
        "hairShopStyles",
        "nailShopStyles",
        "sid"
      ],
      "properties": {
        "hairShopStyles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NaverPlaceBeautyStyle"
          }
        },
        "nailShopStyles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NaverPlaceBeautyStyle"
          }
        },
        "sid": {
          "type": "string"
        }
      }
    },
    "NaverPlaceBeautyImage": {
      "type": "object",
      "required": [
        "imageUrl"
      ],
      "properties": {
        "height": {
          "$ref": "#/definitions/Number"
        },
        "imageUrl": {
          "type": "string"
        },
        "imagesDesc": {
          "type": "string"
        },
        "width": {
          "$ref": "#/definitions/Number"
        }
      }
    },
    "NaverPlaceBeautyStyle": {
      "type": "object",
      "required": [
        "images",
        "styleNum",
        "title"
      ],
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NaverPlaceBeautyImage"
          }
        },
        "styleNum": {
          "$ref": "#/definitions/Number"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "NaverPlaceInfo": {
      "type": "object",
      "required": [
        "address",
        "id",
        "name",
        "phone",
        "siteId"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "roadAddr": {
          "type": "string"
        },
        "siteId": {
          "type": "string"
        }
      }
    },
    "NaverShoppingBrandStoreAuthorityBrands": {
      "type": "object",
      "required": [
        "catalog",
        "channelKeyMallSeq",
        "channelNo",
        "identifier",
        "isBrandStore",
        "isOfficialMall",
        "mallId",
        "mallNm",
        "mallSeq",
        "memberId",
        "modifiedDateTime",
        "name",
        "providers",
        "prvdId",
        "registeredDateTime",
        "url"
      ],
      "properties": {
        "catalog": {
          "type": "boolean"
        },
        "channelKeyMallSeq": {
          "type": "string"
        },
        "channelNo": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "isBrandStore": {
          "type": "integer",
          "format": "int32"
        },
        "isOfficialMall": {
          "type": "boolean"
        },
        "mainEntityOfPage": {
          "$ref": "#/definitions/NaverShoppingBrandStoreMainEntityOfPage"
        },
        "mallId": {
          "type": "string"
        },
        "mallNm": {
          "type": "string"
        },
        "mallSeq": {
          "type": "string"
        },
        "memberId": {
          "type": "string"
        },
        "modifiedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "providers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BrandProvider"
          }
        },
        "prvdId": {
          "type": "string"
        },
        "registeredDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "NaverShoppingBrandStoreMainEntityOfPage": {
      "type": "object",
      "required": [
        "additionalType",
        "name",
        "potentialActions",
        "url"
      ],
      "properties": {
        "additionalType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "potentialActions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "url": {
          "type": "string"
        }
      }
    },
    "NaverShoppingMaker": {
      "type": "object",
      "properties": {
        "brandType": {
          "type": "string"
        },
        "catId": {
          "type": "string"
        },
        "makerName": {
          "type": "string"
        },
        "makerSeq": {
          "type": "string"
        },
        "modelName": {
          "type": "string"
        },
        "nvMid": {
          "type": "string"
        }
      }
    },
    "NaverShoppingProduct": {
      "type": "object",
      "required": [
        "identifier",
        "name"
      ],
      "properties": {
        "additionalProperties": {
          "$ref": "#/definitions/AdditionalProperties"
        },
        "additionalType": {
          "type": "string"
        },
        "businessFunction": {
          "type": "string",
          "enum": [
            "Sell",
            "Rent",
            "ShortTermRent",
            "Resell",
            "Wholesale",
            "Installments",
            "PreSales",
            "PreOrder",
            "BuyingService"
          ]
        },
        "catalogIdentifier": {
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "createdDateTime": {
          "type": "string"
        },
        "deliveryFee": {
          "$ref": "#/definitions/DeliveryFee"
        },
        "identifier": {
          "type": "integer",
          "format": "int64"
        },
        "inProductGroupWithID": {
          "type": "string"
        },
        "itemCondition": {
          "type": "string",
          "enum": [
            "None",
            "Used"
          ]
        },
        "itemOffered": {
          "$ref": "#/definitions/ItemOffered"
        },
        "mobilePrice": {
          "$ref": "#/definitions/MobilePrice"
        },
        "mobileUrl": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nsin": {
          "type": "string"
        },
        "nsinCatalogIdentifier": {
          "type": "string"
        },
        "offeredBy": {
          "$ref": "#/definitions/OfferedBy"
        },
        "potentialActions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "salePrice": {
          "$ref": "#/definitions/SalePrice"
        },
        "status": {
          "type": "string",
          "enum": [
            "NoneMatch",
            "MatchCategoryTargetByMall",
            "MatchedCategoryByAuto",
            "MatchedCategoryByManual",
            "RecommendedCatalog",
            "ExcludedCatalog",
            "MatchedCatalog",
            "MatchCategoryTargetByAuto",
            "Deleted",
            "MatchCategoryTargetByManual",
            "MatchedCategoryByMall"
          ]
        },
        "url": {
          "type": "string"
        }
      }
    },
    "NaverShoppingProductPageInfo": {
      "type": "object",
      "required": [
        "pageNumber",
        "pageSize"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "NccAdgroupCopyJobRequest": {
      "type": "object",
      "properties": {
        "nccAdgroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nccAdgroupNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nccCampaignId": {
          "type": "string"
        },
        "nccCampaignName": {
          "type": "string"
        },
        "originNccCampaignId": {
          "type": "string"
        },
        "originNccCampaignName": {
          "type": "string"
        },
        "userLock": {
          "type": "boolean"
        }
      }
    },
    "NccAdgroupRestrictKwdResponse": {
      "type": "object",
      "properties": {
        "delFlag": {
          "type": "boolean",
          "example": false,
          "description": "When you create a new keyword, If this field is blank, and then set to the default value(false). #hidden-request #hidden-response"
        },
        "description": {
          "type": "string",
          "description": "Description of the keyword"
        },
        "keyword": {
          "type": "string",
          "description": "Impression-restricted keyword"
        },
        "nccAdgroupId": {
          "type": "string",
          "description": "The unique ID of this Ad Group #hidden-create #required-delete"
        },
        "nccAdgroupRestrictKwdId": {
          "type": "string",
          "description": "The unique ID of this impression-restricted keyword #hidden-create #required-delete"
        },
        "resultStatus": {
          "description": "Registration Result Infomation #hidden-request ",
          "$ref": "#/definitions/ResultStatus"
        },
        "type": {
          "type": "string",
          "description": "Type of the keyword. default value is 'KEYWORD_PLUS_RESTRICT'",
          "enum": [
            "KEYWORD_PLUS_RESTRICT",
            "EXP_SEARCH"
          ]
        }
      }
    },
    "NccAttachImage": {
      "type": "object",
      "properties": {
        "imageUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NccBusinessChannelResponse": {
      "type": "object",
      "properties": {
        "adultStatus": {
          "type": "string",
          "enum": [
            "NOT_ADULT_URL",
            "ADULT_URL",
            "SEMI_ADULT_URL"
          ]
        },
        "blackStatus": {
          "type": "string",
          "enum": [
            "WHITE_URL",
            "BLACK_URL"
          ]
        },
        "businessInfo": {
          "type": "string"
        },
        "channelKey": {
          "type": "string"
        },
        "channelTp": {
          "type": "string",
          "enum": [
            "SITE",
            "PHONE",
            "ADDRESS",
            "BOOKING",
            "TALK",
            "MALL",
            "CONTENTS",
            "PLACE",
            "CATALOG",
            "NAVER_TV",
            "BRAND_STORE",
            "SHOPPING_BRAND"
          ]
        },
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "delFlag": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "inspectRequestMsg": {
          "type": "string"
        },
        "mobileInspectStatus": {
          "type": "string",
          "enum": [
            "UNDER_REVIEW",
            "APPROVED",
            "ELIGIBLE",
            "PENDING",
            "DENIED"
          ]
        },
        "name": {
          "type": "string"
        },
        "nccBusinessChannelId": {
          "type": "string"
        },
        "pcInspectStatus": {
          "type": "string",
          "enum": [
            "UNDER_REVIEW",
            "APPROVED",
            "ELIGIBLE",
            "PENDING",
            "DENIED"
          ]
        },
        "referenceKey": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ELIGIBLE",
            "LIMITED_ELIGIBLE",
            "PAUSED",
            "DELETED"
          ]
        },
        "statusReason": {
          "type": "string",
          "enum": [
            "ELIGIBLE",
            "CAMPAIGN_DELETED",
            "CAMPAIGN_PAUSED",
            "CAMPAIGN_PENDING",
            "CAMPAIGN_ENDED",
            "CAMPAIGN_LIMITED_BY_BUDGET",
            "CAMPAIGN_LIMITED_BY_SHARED_BUDGET",
            "BUSINESS_CHANNEL_PAUSED",
            "BUSINESS_CHANNEL_DISAPPROVED",
            "BUSINESS_CHANNEL_UNDER_REVIEW",
            "BUSINESS_CHANNEL_ABNORMAL_INTERLOCK",
            "PC_BUSINESS_CHANNEL_APPROVED",
            "PC_BUSINESS_CHANNEL_DISAPPROVED",
            "PC_BUSINESS_CHANNEL_ABNORMAL_INTERLOCK",
            "PC_BUSINESS_CHANNEL_UNDER_REVIEW",
            "MOBILE_BUSINESS_CHANNEL_APPROVED",
            "MOBILE_BUSINESS_CHANNEL_DISAPPROVED",
            "MOBILE_BUSINESS_CHANNEL_ABNORMAL_INTERLOCK",
            "MOBILE_BUSINESS_CHANNEL_UNDER_REVIEW",
            "GROUP_DELETED",
            "GROUP_PAUSED",
            "GROUP_LIMITED_BY_BUDGET",
            "GROUP_LIMITED_BY_SHARED_BUDGET",
            "GROUP_PAUSED_BY_INVALID_TARGET",
            "KEYWORD_DELETED",
            "KEYWORD_PAUSED",
            "KEYWORD_DISAPPROVED",
            "KEYWORD_DENIED",
            "KEYWORD_UNDER_REVIEW",
            "AD_DELETED",
            "AD_PAUSED",
            "AD_ABNORMAL_INTERLOCK",
            "AD_DISAPPROVED",
            "AD_UNDER_REVIEW",
            "AD_NOT_ENOUGH_ASSETS",
            "SHARED_BUDGET_LIMITED_BY_BUDGET",
            "SHARED_BUDGET_DELETED",
            "AD_EXTENSION_DELETED",
            "AD_EXTENSION_PAUSED",
            "AD_EXTENSION_NOT_SCHEDULED",
            "AD_EXTENSION_DISAPPROVED",
            "AD_EXTENSION_UNDER_REVIEW",
            "AD_EXTENSION_PENDING",
            "AD_EXTENSION_ABNORMAL_INTERLOCK",
            "LACK_OF_ACCOUNT_BALANCE",
            "REFUND_IN_PROGRESS",
            "ENABLED",
            "ASSET_DELETED",
            "ASSET_DISAPPROVED",
            "ASSET_UNDER_REVIEW"
          ]
        },
        "unitedCatId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "NccMassJob": {
      "type": "object",
      "properties": {
        "bulkJson": {
          "$ref": "#/definitions/JsonNode"
        },
        "cancelLoginId": {
          "type": "string"
        },
        "cancelTm": {
          "type": "string",
          "format": "date-time"
        },
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "endTm": {
          "type": "string",
          "format": "date-time"
        },
        "inputJson": {
          "$ref": "#/definitions/JsonNode"
        },
        "inputJson1": {
          "type": "string"
        },
        "inputJson2": {
          "type": "string"
        },
        "lineCount": {
          "type": "integer",
          "format": "int32"
        },
        "loginCustomerId": {
          "type": "integer",
          "format": "int64"
        },
        "loginId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nccMassJobId": {
          "type": "string"
        },
        "outputJson": {
          "$ref": "#/definitions/JsonNode"
        },
        "outputJson1": {
          "type": "string"
        },
        "outputJson2": {
          "type": "string"
        },
        "regTm": {
          "type": "string",
          "format": "date-time"
        },
        "startTm": {
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "type": "string",
          "enum": [
            "WAITING",
            "ENQUEUED",
            "RUNNING",
            "CANCELED",
            "COMPLETED",
            "FAILED"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "INVALID",
            "COPY_ADGROUPS",
            "DOWNLOAD_KEYWORD",
            "ADD_KEYWORD",
            "EDIT_KEYWORD_BID",
            "EDIT_KEYWORD_URL",
            "EDIT_KEYWORD_ONOFF",
            "ADD_AD",
            "ESTIMATE_KEYWORD",
            "CLONE_ADGROUP",
            "DOWNLOAD_SHOPPING",
            "EDIT_AD_BID",
            "EDIT_AD_ONOFF",
            "ADD_SHOPPING_AD",
            "ADD_SHOPPING_GROUP_ADEXT",
            "ADD_SHOPPING_ADEXT",
            "EDIT_SHOPPING_AD",
            "REMOVE_SHOPPING_ADEXT",
            "EDIT_ADGROUP_NAME",
            "ADD_SHOPPING_ADEXT_EXTRA",
            "EDIT_SHOPPING_ADEXT_EXTRA",
            "ADD_CATALOG_AD",
            "ADD_CATALOG_ADEXT_DETAIL",
            "ADD_CATALOG_ADEXT_RELEASE",
            "ADD_CATALOG_ADEXT_PURCHASE_CONDITION",
            "ADD_CATALOG_GROUP_ADEXT_BRAND_MESSAGE",
            "ADD_CATALOG_ADEXT_BRAND_MESSAGE",
            "ADD_BRAND_KEYWORD",
            "DOWNLOAD_SHOPPINGBRAND_KEYWORD_MIN_BID",
            "REMOVE_SHOPPING_AD",
            "REMOVE_ASSET",
            "SELECT_ASSET",
            "ADD_RSA_AD",
            "ADD_RESTRICTED_KEYWORD"
          ]
        },
        "typeCd": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "NccNewQi": {
      "type": "object",
      "properties": {
        "qiGrade": {
          "type": "integer",
          "format": "int32",
          "description": "qi grade"
        }
      }
    },
    "NccProfileImage": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "NccShoppingCollectionProduct": {
      "type": "object",
      "properties": {
        "APPLY_TM": {
          "type": "integer",
          "format": "int64"
        },
        "DEL_FLAG": {
          "type": "integer",
          "format": "int64"
        },
        "DEL_TM": {
          "type": "integer",
          "format": "int64"
        },
        "adCustomerId": {
          "type": "string"
        },
        "brand": {
          "type": "string"
        },
        "catId": {
          "type": "string"
        },
        "category1Id": {
          "type": "string"
        },
        "category1Name": {
          "type": "string"
        },
        "category2Id": {
          "type": "string"
        },
        "category2Name": {
          "type": "string"
        },
        "category3Id": {
          "type": "string"
        },
        "category3Name": {
          "type": "string"
        },
        "category4Id": {
          "type": "string"
        },
        "category4Name": {
          "type": "string"
        },
        "displayNx": {
          "type": "string"
        },
        "dvlryFeeCont": {
          "type": "string"
        },
        "fullMallCatNm": {
          "type": "string"
        },
        "hasDvlryFeeCont": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "imgStatusCd": {
          "type": "string"
        },
        "isLgtModelMat": {
          "type": "string"
        },
        "keepCnt": {
          "type": "integer",
          "format": "int64"
        },
        "lowPrice": {
          "type": "string"
        },
        "maker": {
          "type": "string"
        },
        "mallChnlSeq": {
          "type": "string"
        },
        "mallName": {
          "type": "string"
        },
        "mallNo": {
          "type": "string"
        },
        "mallProdMblUrl": {
          "type": "string"
        },
        "mallProductId": {
          "type": "string"
        },
        "mallProductUrl": {
          "type": "string"
        },
        "mblProdUrl": {
          "type": "string"
        },
        "mobilePrice": {
          "type": "string"
        },
        "mpTp": {
          "type": "string"
        },
        "notAvailableReason": {
          "type": "string"
        },
        "openDate": {
          "type": "string"
        },
        "parentId": {
          "type": "string"
        },
        "priceUnit": {
          "type": "string"
        },
        "prodStatusCd": {
          "type": "string"
        },
        "prodTypeCd": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "productTitle": {
          "type": "string"
        },
        "purchaseCnt": {
          "type": "integer",
          "format": "int64"
        },
        "rcvYn": {
          "type": "string"
        },
        "referenceKey": {
          "type": "string"
        },
        "registrable": {
          "type": "boolean"
        },
        "reviewCountSum": {
          "type": "integer",
          "format": "int64"
        },
        "saleTp": {
          "type": "string"
        },
        "scoreInfo": {
          "type": "string"
        },
        "stdGrpId": {
          "type": "string"
        },
        "stdPrchCondInfoUpper": {
          "type": "string"
        },
        "stdPrchCondVals": {
          "type": "string"
        },
        "stdPrchOptValNames": {
          "type": "string"
        },
        "stdPrchOptValNms": {
          "type": "string"
        }
      }
    },
    "NccShoppingMall": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "adCustomerId": {
          "type": "string"
        },
        "adsrTypeCd": {
          "type": "string"
        },
        "bizplAddr": {
          "type": "string"
        },
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NccShoppingMallChannel"
          }
        },
        "hstcNm": {
          "type": "string"
        },
        "mallBno": {
          "type": "string"
        },
        "mallId": {
          "type": "string"
        },
        "mallNm": {
          "type": "string"
        },
        "mallSeq": {
          "type": "string"
        },
        "mallTp": {
          "type": "string"
        },
        "mallTpCd": {
          "type": "string"
        },
        "mallUrl": {
          "type": "string"
        },
        "npayMblYn": {
          "type": "string"
        },
        "npayYn": {
          "type": "string"
        },
        "onmktRegNo": {
          "type": "string"
        },
        "regmStatCd": {
          "type": "string"
        },
        "reprNm": {
          "type": "string"
        },
        "storeFarmDI": {
          "type": "string"
        },
        "talkYn": {
          "type": "string"
        },
        "trdnnNm": {
          "type": "string"
        }
      }
    },
    "NccShoppingMallChannel": {
      "type": "object",
      "properties": {
        "wdChnlNm": {
          "type": "string"
        },
        "wdChnlSeq": {
          "type": "string"
        },
        "wdChnlUrl": {
          "type": "string"
        },
        "wdNm": {
          "type": "string"
        },
        "wdTp": {
          "type": "string"
        }
      }
    },
    "NccShoppingProductImage": {
      "type": "object",
      "properties": {
        "productImageInfo": {
          "$ref": "#/definitions/ProductImageInfo"
        }
      }
    },
    "NccShoppingSearchProductFendiResponse": {
      "type": "object",
      "required": [
        "code",
        "mallSeq",
        "numFound",
        "pageInfo",
        "totalCount"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "errorMsg": {
          "type": "string"
        },
        "mallSeq": {
          "type": "integer",
          "format": "int32"
        },
        "numFound": {
          "type": "integer",
          "format": "int32"
        },
        "pageInfo": {
          "$ref": "#/definitions/NaverShoppingProductPageInfo"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NccShoppingCollectionProduct"
          }
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NaverShoppingProduct"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "NccShortToRealUrl": {
      "type": "object",
      "properties": {
        "realUrl": {
          "type": "string"
        },
        "shortUrl": {
          "type": "string"
        }
      }
    },
    "Number": {
      "type": "object"
    },
    "OfferedBy": {
      "type": "object",
      "properties": {
        "alternateName": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Optional«TimeContract»": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "present": {
          "type": "boolean"
        }
      }
    },
    "Page": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Pageable": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int64"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "paged": {
          "type": "boolean"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "unpaged": {
          "type": "boolean"
        }
      }
    },
    "Page«AssetResponse»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetResponse"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ProductGroup": {
      "type": "object",
      "properties": {
        "attrJson": {
          "type": "string"
        },
        "brandName": {
          "type": "string",
          "description": "브랜드 이름입니다..\nThe name of the brand."
        },
        "brandNo": {
          "type": "string",
          "description": "브랜드 NO 또는 브랜드 SEQ 입니다.\nBrand No or Brand SEQ"
        },
        "customerId": {
          "type": "integer",
          "format": "int64",
          "description": "광고 계정 고유 번호입니다.\nThe unique number for your ad account."
        },
        "editTm": {
          "type": "string",
          "description": "상품 그룹 최근 수정 시각입니다.\nProduct group last modified time"
        },
        "mallId": {
          "type": "string",
          "description": "몰 ID 입니다.\nThe unique number of the mall"
        },
        "mallName": {
          "type": "string",
          "description": "몰 이름입니다.\nThe name of the mall"
        },
        "name": {
          "type": "string",
          "description": "상품 그룹 이름입니다.\nThe name of product group"
        },
        "nccBusinessChannelId": {
          "type": "string",
          "description": "비즈 채널 ID 입니다.\nThe unique number of the business channel"
        },
        "nccProductGroupId": {
          "type": "string",
          "description": "상품 그룹 고유 ID 입니다.\nThe unique number for your product group"
        },
        "numberOfAdgroups": {
          "type": "integer",
          "format": "int32",
          "description": "상품 그룹을 사용하고 있는 광고 그룹의 개수입니다.\nThe number of adgroups using a product group"
        },
        "regTm": {
          "type": "string",
          "description": "상품 그룹 생성 시각입니다.\nProduct group creation time"
        },
        "registeredProductType": {
          "type": "string",
          "description": "상품 그룹 등록시 선택한 비즈채널이 일반형인지 카탈로그형인지를 나타내는 값입니다. GENERAL: 일반형, CATALOG: 카탈로그형\nValue indicating whether the Biz channel selected when registering a product group is generic or catalog-type. GENERAL: Generic, CATALOG: Catalog",
          "enum": [
            "GENERAL",
            "CATALOG"
          ]
        },
        "registrationMethod": {
          "type": "string",
          "description": "상품이 전체 등록인지 선택 등록인지를 나타내는 값입니다. EACH: 선택 등록, WHOLE: 전체 등록\nThe value indicating whether the product is a full or optional registration. EACH: Register selection, WHOLE: Register All",
          "enum": [
            "WHOLE",
            "EACH"
          ]
        }
      }
    },
    "ProductGroupRequest": {
      "type": "object",
      "properties": {
        "nccProductGroupId": {
          "type": "string"
        },
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "nccBusinessChannelId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "registrationMethod": {
          "type": "string",
          "enum": [
            "WHOLE",
            "EACH"
          ]
        },
        "registeredProductType": {
          "type": "string",
          "enum": [
            "GENERAL",
            "CATALOG"
          ]
        },
        "mallId": {
          "type": "string"
        },
        "mallName": {
          "type": "string"
        },
        "brandNo": {
          "type": "string"
        },
        "brandName": {
          "type": "string"
        },
        "attrJson": {
          "$ref": "#/definitions/JsonNode"
        }
      }
    },
    "ProductImageInfo": {
      "type": "object",
      "properties": {
        "mainImage": {
          "$ref": "#/definitions/MainImage"
        },
        "subImageList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubImage"
          }
        }
      }
    },
    "Qi": {
      "type": "object",
      "properties": {
        "qiGrade": {
          "type": "integer",
          "format": "int32",
          "description": "qi grade"
        }
      }
    },
    "ResultStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "Registration failed when the error code. #hidden-request"
        },
        "message": {
          "type": "string",
          "description": "Registration failed when the error message. #hidden-request"
        }
      }
    },
    "RollingBanner": {
      "type": "object",
      "required": [
        "content",
        "editTm",
        "exposureArea",
        "exposureEndTm",
        "exposureStartTm",
        "hasTarget",
        "isUse",
        "noticeTp",
        "readCount",
        "regTm",
        "regUserLoginId",
        "regUserName",
        "rollingNoticeId",
        "sendCompletedSms",
        "sendCompletedStatus",
        "title"
      ],
      "properties": {
        "content": {
          "type": "string"
        },
        "editTm": {
          "type": "string",
          "format": "date-time"
        },
        "exposureArea": {
          "type": "integer",
          "format": "int32"
        },
        "exposureEndTm": {
          "type": "string",
          "format": "date-time"
        },
        "exposureStartTm": {
          "type": "string",
          "format": "date-time"
        },
        "hasTarget": {
          "type": "boolean"
        },
        "isUse": {
          "type": "boolean"
        },
        "noticeTp": {
          "type": "integer",
          "format": "int32"
        },
        "readCount": {
          "type": "integer",
          "format": "int32"
        },
        "regTm": {
          "type": "string",
          "format": "date-time"
        },
        "regUserLoginId": {
          "type": "string"
        },
        "regUserName": {
          "type": "string"
        },
        "rollingNoticeId": {
          "type": "integer",
          "format": "int32"
        },
        "sendCompletedSms": {
          "type": "integer",
          "format": "int32"
        },
        "sendCompletedStatus": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "SalePrice": {
      "type": "object",
      "properties": {
        "price": {
          "type": "integer",
          "format": "int32"
        },
        "priceCurrency": {
          "type": "string"
        }
      }
    },
    "SearchResultAd": {
      "type": "object",
      "properties": {
        "categoryNames": {
          "type": "string"
        },
        "fmpBrand": {
          "type": "string"
        },
        "fmpMaker": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "isOwn": {
          "type": "boolean"
        },
        "lowPrice": {
          "type": "string"
        },
        "mobileLowPrice": {
          "type": "string"
        },
        "productTitle": {
          "type": "string"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SharedBudget": {
      "type": "object",
      "properties": {
        "budgetLock": {
          "type": "boolean",
          "example": false,
          "description": "노출 잠김 여부입니다.\nDaily budget status of this AdGroup."
        },
        "customerId": {
          "type": "integer",
          "format": "int64",
          "description": "광고 계정 고유 번호입니다.\nThe unique number for your ad account."
        },
        "dailyBudget": {
          "type": "integer",
          "format": "int64",
          "description": "하루 동안 연결된 캠페인 또는 광고 그룹에서 사용할 수 있는 최대 예산입니다.\nThe maximum budget of the use of the connected campaigns or ad group during the day. You can enter between 70 to 1000000000. When you create a new Ad Group, If this field is blank, and then set to the default value.(0)."
        },
        "deliveryMethod": {
          "type": "string",
          "description": "노출 방식을 의미합니다. 캠페인 공유예산에서만 설정할 수 있습니다.\nchoosing 'Accelerated' or 'Standard' ad delivery. The default value is 'ACCELERATED'.\nAvailable values are 'ACCELERATED', 'STANDARD'",
          "enum": [
            "ACCELERATED",
            "STANDARD"
          ]
        },
        "editTm": {
          "type": "string",
          "description": "공유예산 수정 시각입니다.\nTime that the Shared budget has been updated. (RFC 3339 datetime)."
        },
        "expSearchBudgetRatio": {
          "type": "integer",
          "format": "int32",
          "description": "#hidden"
        },
        "expectCost": {
          "type": "integer",
          "format": "int64",
          "description": "예상 과금액입니다.\nExpected cost of the shared budget"
        },
        "name": {
          "type": "string",
          "description": "공유예산의 이름입니다.\nThe name of the shared budget"
        },
        "numberInUse": {
          "type": "integer",
          "format": "int32",
          "description": "공유예산에 연결된 캠페인 또는 광고그룹의 개수입니다.\nNumber of entities using the shared budget"
        },
        "ownerType": {
          "type": "string",
          "description": "공유예산의 종류입니다.\nThe type of Shared budget.",
          "enum": [
            "CAMPAIGN",
            "ADGROUP"
          ]
        },
        "regTm": {
          "type": "string",
          "description": "공유예산을 등록한 시각입니다.\nTime that the Shared budget has been created."
        },
        "sharedBudgetId": {
          "type": "string",
          "description": "공유예산의 고유 ID입니다.\nThe unique ID of the shared budget"
        },
        "status": {
          "type": "string",
          "description": "공유예산의 상태입니다.\nStatus of this shared budget.",
          "enum": [
            "ELIGIBLE",
            "LIMITED_ELIGIBLE",
            "PAUSED",
            "DELETED"
          ]
        },
        "statusReason": {
          "type": "string",
          "description": "공유예산의 현재 상태에 대한 이유를 의미합니다.\nStatus reason of this shared budget.",
          "enum": [
            "CAMPAIGN_LIMITED_BY_SHARED_BUDGET",
            "GROUP_LIMITED_BY_SHARED_BUDGET",
            "SHARED_BUDGET_LIMITED_BY_BUDGET",
            "SHARED_BUDGET_DELETED"
          ]
        }
      }
    },
    "SharedBudgetRequest": {
      "type": "object",
      "properties": {
        "adgroupList": {
          "type": "array",
          "description": "#hidden",
          "items": {
            "$ref": "#/definitions/AdgroupRequest"
          }
        },
        "budgetLock": {
          "type": "boolean",
          "example": false,
          "description": "노출 잠김 여부입니다.\nDaily budget status of this AdGroup."
        },
        "campaignList": {
          "type": "array",
          "description": "#hidden",
          "items": {
            "$ref": "#/definitions/CampaignRequest"
          }
        },
        "customerId": {
          "type": "integer",
          "format": "int64",
          "description": "광고 계정 고유 번호입니다.\nThe unique number for your ad account."
        },
        "dailyBudget": {
          "type": "integer",
          "format": "int64",
          "description": "하루 동안 연결된 캠페인 또는 광고 그룹에서 사용할 수 있는 최대 예산입니다.\nThe maximum budget of the use of the connected campaigns or ad group during the day. You can enter between 70 to 1000000000. When you create a new Ad Group, If this field is blank, and then set to the default value.(0)."
        },
        "deliveryMethod": {
          "type": "string",
          "description": "노출 방식을 의미합니다. 캠페인 공유예산에서만 설정할 수 있습니다.\nchoosing 'Accelerated' or 'Standard' ad delivery. The default value is 'ACCELERATED'.\nAvailable values are 'ACCELERATED', 'STANDARD'",
          "enum": [
            "ACCELERATED",
            "STANDARD"
          ]
        },
        "editTm": {
          "type": "string",
          "description": "#hidden"
        },
        "expSearchBudgetRatio": {
          "type": "integer",
          "format": "int32",
          "description": "#hidden"
        },
        "name": {
          "type": "string",
          "description": "공유예산의 이름입니다.\nThe name of the shared budget"
        },
        "numberInUse": {
          "type": "integer",
          "format": "int32",
          "description": "#hidden"
        },
        "ownerType": {
          "type": "string",
          "description": "공유예산의 종류입니다.\nThe type of Shared budget.",
          "enum": [
            "CAMPAIGN",
            "ADGROUP"
          ]
        },
        "regTm": {
          "type": "string",
          "description": "#hidden"
        },
        "sharedBudgetId": {
          "type": "string",
          "description": "공유예산의 고유 ID입니다.\nThe unique ID of the shared budget #hidden-create #required-update"
        }
      }
    },
    "ShoppingBrandExposureStatusAd": {
      "type": "object",
      "properties": {
        "adExtensionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExposureStatusAdExtension"
          }
        },
        "brandName": {
          "type": "string"
        },
        "isOwn": {
          "type": "boolean"
        },
        "placement": {
          "type": "string"
        },
        "productList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExposureStatusProduct"
          }
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "subChannelRank": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ShoppingBrandExposureStatusKeywordInfo": {
      "type": "object",
      "properties": {
        "brandTopReserveRi": {
          "type": "integer",
          "format": "int32"
        },
        "shoppingBrandKeywordTypes": {
          "type": "string"
        }
      }
    },
    "ShoppingBrandExposureStatusResponse": {
      "type": "object",
      "properties": {
        "adList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShoppingBrandExposureStatusAd"
          }
        },
        "keywordInfo": {
          "$ref": "#/definitions/ShoppingBrandExposureStatusKeywordInfo"
        }
      }
    },
    "ShoppingBrandKeywordRecommend": {
      "type": "object",
      "required": [
        "keyword",
        "rank"
      ],
      "properties": {
        "keyword": {
          "type": "string"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ShoppingBrandKeywordRecommends": {
      "type": "object",
      "required": [
        "keywords"
      ],
      "properties": {
        "keywords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShoppingBrandKeywordRecommend"
          }
        }
      }
    },
    "ShoppingExposureStatusDiagnosisAccount": {
      "type": "object",
      "required": [
        "reason"
      ],
      "properties": {
        "account": {
          "$ref": "#/definitions/ShoppingExposureStatusDiagnosisInnerAccount"
        },
        "reason": {
          "type": "object"
        }
      }
    },
    "ShoppingExposureStatusDiagnosisDemoFilter": {
      "type": "object",
      "required": [
        "filterData"
      ],
      "properties": {
        "filterData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShoppingExposureStatusDiagnosisFilter"
          }
        },
        "naver": {
          "type": "boolean"
        },
        "shopping": {
          "type": "boolean"
        }
      }
    },
    "ShoppingExposureStatusDiagnosisExposureReasons": {
      "type": "object",
      "properties": {
        "brand": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "exclusionTerms": {
          "type": "string"
        },
        "restrictAd": {
          "type": "string"
        },
        "restrictAd2": {
          "type": "string"
        },
        "restrictKeyword": {
          "type": "string"
        },
        "saleTp": {
          "type": "string"
        },
        "shoppingKeyword": {
          "type": "string"
        }
      }
    },
    "ShoppingExposureStatusDiagnosisFilter": {
      "type": "object",
      "properties": {
        "exposureName": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "startAge": {
          "type": "string"
        }
      }
    },
    "ShoppingExposureStatusDiagnosisInnerAccount": {
      "type": "object",
      "properties": {
        "loginId": {
          "type": "string"
        }
      }
    },
    "ShoppingExposureStatusDiagnosisKeywordInfo": {
      "type": "object",
      "properties": {
        "demoFilter": {
          "$ref": "#/definitions/ShoppingExposureStatusDiagnosisDemoFilter"
        },
        "searchKeyword": {
          "type": "object"
        }
      }
    },
    "ShoppingExposureStatusDiagnosisResponse": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/ShoppingExposureStatusDiagnosisAccount"
        },
        "exposureReasons": {
          "$ref": "#/definitions/ShoppingExposureStatusDiagnosisExposureReasons"
        },
        "keywordInfo": {
          "$ref": "#/definitions/ShoppingExposureStatusDiagnosisKeywordInfo"
        },
        "rank": {
          "type": "string"
        }
      }
    },
    "ShoppingExposureStatusResponse": {
      "type": "object",
      "properties": {
        "adList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchResultAd"
          }
        },
        "demoFilter": {
          "$ref": "#/definitions/DemoFilter"
        }
      }
    },
    "Sort": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "sorted": {
          "type": "boolean"
        },
        "unsorted": {
          "type": "boolean"
        }
      }
    },
    "StandardPurchaseOption": {
      "type": "object",
      "properties": {
        "identifier": {
          "$ref": "#/definitions/StandardPurchaseOptionIdentifier"
        },
        "value": {
          "$ref": "#/definitions/StandardPurchaseOptionValue"
        }
      }
    },
    "StandardPurchaseOptionIdentifier": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "sequence": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "StandardPurchaseOptionValue": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "sequence": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SubImage": {
      "type": "object",
      "properties": {
        "fileSizeByte": {
          "type": "integer",
          "format": "int64"
        },
        "height": {
          "type": "integer",
          "format": "int64"
        },
        "sequence": {
          "type": "integer",
          "format": "int64"
        },
        "signature": {
          "type": "number",
          "format": "double"
        },
        "svcYn": {
          "type": "string"
        },
        "thumbnailUrl": {
          "type": "string"
        },
        "width": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Target": {
      "type": "object",
      "properties": {
        "editTm": {
          "type": "string",
          "description": "Recently modified time (RFC 3339 datetime). #hidden-request"
        },
        "nccTargetId": {
          "type": "string",
          "description": "The unique ID of the target"
        },
        "ownerId": {
          "type": "string",
          "description": "The unique ID of owner entity which containing this target"
        },
        "regTm": {
          "type": "string",
          "description": "The time at which the target was created (RFC 3339 date-time). #hidden-request"
        },
        "target": {
          "type": "string",
          "example": "[gist: \"081193f4d41503666e0bb3390a9bc596\"]",
          "description": "Targeting information #type:object"
        },
        "targetTp": {
          "type": "string",
          "description": "The type of the targeting. Available values are 'TIME_WEEKLY_TARGET', 'REGIONAL_TARGET', 'MEDIA_TARGET', 'PC_MOBILE_TARGET', 'GENDER_TARGET.",
          "enum": [
            "TIME_WEEKLY_TARGET",
            "REGIONAL_TARGET",
            "MEDIA_TARGET",
            "PC_MOBILE_TARGET",
            "RESTRICT_KEYWORD_TARGET",
            "NON_SEARCH_KEYWORD_TARGET",
            "GENDER_TARGET",
            "AGE_TARGET",
            "PERIOD_TARGET",
            "AD_TAG",
            "GENDER_WEIGHT_TARGET",
            "PLACE_ADGROUP_TAG"
          ]
        }
      }
    },
    "TargetRequest": {
      "type": "object",
      "properties": {
        "nccTargetId": {
          "type": "string",
          "description": "The unique ID of the target"
        },
        "ownerId": {
          "type": "string",
          "description": "The unique ID of owner entity which containing this target"
        },
        "target": {
          "example": "[gist: \"081193f4d41503666e0bb3390a9bc596\"]",
          "description": "Targeting information #type:object",
          "$ref": "#/definitions/JsonNode"
        },
        "targetTp": {
          "type": "string",
          "description": "The type of the targeting. Available values are 'TIME_WEEKLY_TARGET', 'REGIONAL_TARGET', 'MEDIA_TARGET', 'PC_MOBILE_TARGET', 'GENDER_TARGET.",
          "enum": [
            "TIME_WEEKLY_TARGET",
            "REGIONAL_TARGET",
            "MEDIA_TARGET",
            "PC_MOBILE_TARGET",
            "RESTRICT_KEYWORD_TARGET",
            "NON_SEARCH_KEYWORD_TARGET",
            "GENDER_TARGET",
            "AGE_TARGET",
            "PERIOD_TARGET",
            "AD_TAG",
            "GENDER_WEIGHT_TARGET",
            "PLACE_ADGROUP_TAG"
          ]
        }
      }
    },
    "TemplateQcPrice": {
      "type": "object",
      "properties": {
        "lowerBoundQc": {
          "type": "integer",
          "format": "int64"
        },
        "price": {
          "type": "integer",
          "format": "int64"
        },
        "upperBoundQc": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TimeContract": {
      "type": "object",
      "properties": {
        "adgroupName": {
          "type": "string",
          "description": "광고 그룹명\nName of the adgroup containing this time contract"
        },
        "adgroupTemplateName": {
          "type": "string",
          "description": "광고 그룹 템플릿명\nTemplate Name of the adgroup containing this time contract"
        },
        "cancelCustomerId": {
          "type": "integer",
          "format": "int64",
          "description": "취소자 계정 Id\nThe customer ID of cancelling time contract."
        },
        "cancelLoginId": {
          "type": "string",
          "description": "취소자 회원 Id\nThe login ID of cancelling time contract."
        },
        "cancelTm": {
          "type": "string",
          "description": "취소일\nTime that the time contract has been cancelled (RFC 3339 datetime)."
        },
        "contractAmt": {
          "type": "integer",
          "format": "int64",
          "description": "계약 금액\nThe contract amt of time contract without vat."
        },
        "contractCustomerId": {
          "type": "integer",
          "format": "int64",
          "description": "계정자 계정 Id\nThe customer ID of creating time contract."
        },
        "contractEndDt": {
          "type": "string",
          "description": "계약 종료일\nThe time at which the time contract ends (RFC 3339 date-time)."
        },
        "contractLoginId": {
          "type": "string",
          "description": "계약자 회원 Id\nThe login ID of creating time contract."
        },
        "contractName": {
          "type": "string",
          "description": "계약 이름\nThe name of time contract"
        },
        "contractQc": {
          "type": "integer",
          "format": "int64",
          "description": "계약가능 검색수 \nMax sum qc of time contract"
        },
        "contractStartDt": {
          "type": "string",
          "description": "계약 시작일\nThe time at which the time contract starts (RFC 3339 date-time)."
        },
        "contractStatus": {
          "type": "string",
          "description": "계약 상태\nThe status of time contract.",
          "enum": [
            "UPCOMING_EXPOSE",
            "ON_EXPOSING",
            "CANCELED_BEFORE_EXPOSING",
            "CANCELED_ON_EXPOSING",
            "UPCOMING_CANCEL",
            "EXPOSE_COMPLETED"
          ]
        },
        "customerId": {
          "type": "integer",
          "format": "int64",
          "description": "광고주 ID\nThe unique ID of the customer"
        },
        "editTm": {
          "type": "string",
          "description": "수정 일시\nRecently modified time (RFC 3339 datetime)."
        },
        "exposureEndDt": {
          "type": "string",
          "description": "노출 종료일\nThe time at which the time contract exposure ends (RFC 3339 date-time)."
        },
        "exposureStartDt": {
          "type": "string",
          "description": "노출 시작일\nThe time at which the time contract exposure starts (RFC 3339 date-time)."
        },
        "nccAdgroupId": {
          "type": "string",
          "description": "광고 그룹 ID\nThe unique ID of the adgroup containing this time contract"
        },
        "nccTimeContractId": {
          "type": "string",
          "description": "계약 ID\nThe unique ID of the time contract"
        },
        "paymentAmt": {
          "type": "integer",
          "format": "int64",
          "description": "결제 금액\nThe payment amt of time contract including vat."
        },
        "refundAmt": {
          "type": "integer",
          "format": "int64",
          "description": "환불 금액\nThe refund amt of time contract including vat."
        },
        "regTm": {
          "type": "string",
          "description": "등록 일시\nTime that the AD extension has been registered (RFC 3339 datetime)."
        },
        "templateId": {
          "type": "string",
          "description": "템플릿Id\nThe unique ID of template."
        },
        "totalKeywordQc": {
          "type": "integer",
          "format": "int64",
          "description": "키워드 QC 총합 \nCurrent sum qc of time contract"
        }
      }
    },
    "TimeContractAmt": {
      "type": "object",
      "properties": {
        "contractAmt": {
          "type": "integer",
          "format": "int64",
          "description": "The contract amt of time contract without vat."
        },
        "contractAmtWithVat": {
          "type": "integer",
          "format": "int64",
          "description": "The contract amt of time contract including vat."
        }
      }
    },
    "TimeContractItem": {
      "type": "object",
      "properties": {
        "editTm": {
          "type": "string",
          "description": "Recently modified time (RFC 3339 datetime)."
        },
        "enable": {
          "type": "boolean",
          "example": false,
          "description": "The enable status of time contract item"
        },
        "keyword": {
          "type": "string",
          "description": "AD Keyword"
        },
        "keywordQc": {
          "type": "integer",
          "format": "int64",
          "description": "Keyword qc"
        },
        "nccTimeContractId": {
          "type": "string",
          "description": "The unique ID of the time contract"
        },
        "nccTimeContractItemId": {
          "type": "string",
          "description": "The unique ID of the time contract item"
        },
        "regTm": {
          "type": "string",
          "description": "Time that the time contract item has been registered (RFC 3339 datetime)."
        }
      }
    },
    "TimeContractKeywordQc": {
      "type": "object",
      "properties": {
        "keyword": {
          "type": "string",
          "description": "AD Keyword"
        },
        "nccTimeContractItemId": {
          "type": "string",
          "description": "The unique ID of the time contract"
        },
        "qc": {
          "type": "integer",
          "format": "int64",
          "description": "Keyword qc"
        }
      }
    },
    "TimeContractKeywordsAdditionStatus": {
      "type": "object",
      "properties": {
        "exceededKeywordQcList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeContractKeywordQc"
          }
        },
        "exceededQc": {
          "type": "boolean"
        },
        "exceededQcTimeContract": {
          "$ref": "#/definitions/TimeContract"
        },
        "keywordOccupationStatusList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeywordOccupationStatus"
          }
        }
      }
    },
    "TimeContractRefundAmt": {
      "type": "object",
      "properties": {
        "nonRefundableAmt": {
          "type": "integer",
          "format": "int64",
          "description": "The nonRefundable amt of time contract"
        },
        "refundAmt": {
          "type": "integer",
          "format": "int64",
          "description": "The refund amt of time contract including vat"
        },
        "refundableAmt": {
          "type": "integer",
          "format": "int64",
          "description": "The refundable amt of time contract"
        }
      }
    },
    "TimeContractSummary": {
      "type": "object",
      "properties": {
        "currentTimeContract": {
          "description": "The current time contract of adgroup. The status of current time contract is either 'ON_EXPOSING' or 'UPCOMING_CANCEL'",
          "$ref": "#/definitions/TimeContract"
        },
        "nccAdgroupId": {
          "type": "string",
          "description": "The unique ID of the adgroup containing time contract"
        },
        "waitingCount": {
          "type": "integer",
          "format": "int64",
          "description": "The count of waiting exposure time contract"
        }
      }
    },
    "adgroupMappedChannelCnt": {
      "type": "object",
      "properties": {
        "adgroupMappedChannelCnt": {
          "type": "integer",
          "format": "int64"
        },
        "campaignTp": {
          "type": "string",
          "enum": [
            "WEB_SITE",
            "SHOPPING",
            "POWER_CONTENTS",
            "BRAND_SEARCH",
            "PLACE"
          ]
        },
        "useNaChannelCnt": {
          "type": "integer",
          "format": "int64"
        }
      }
    }
  }
}
