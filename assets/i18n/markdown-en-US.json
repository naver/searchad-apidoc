{
  "#/definitions/RequestPerformanceBulk": "{{ description }}\n\n```json\n{  \n  \"items\":[  \n    {  \n      \"keyword\":\"제주여행\",\n      \"bid\":70,\n      \"device\":\"PC\",\n      \"keywordplus\":false\n    },\n    {  \n      \"keyword\":\"제주도\",\n      \"bid\":70,\n      \"device\":\"PC\",\n      \"keywordplus\":false\n    },\n    {  \n      \"keyword\":\"맛집\",\n      \"bid\":70,\n      \"device\":\"PC\",\n      \"keywordplus\":false\n    },\n    {  \n      \"keyword\":\"여행\",\n      \"bid\":70,\n      \"device\":\"PC\",\n      \"keywordplus\":false\n    }\n  ]\n}\n```\n\n{{#if schema }}\n\n## Columns\n[param-table: schema, \"property\" as type]\n\n{{/if}}",
  "#/definitions/ResponsePerformanceBulk": "{{ description }}\n\n```json\n{  \n  \"items\":[  \n    {  \n      \"keyword\":\"제주여행\",\n      \"bid\":70,\n      \"device\":\"PC\",\n      \"keywordplus\":false,\n      \"clicks\":1,\n      \"impressions\":28570,\n      \"cost\":70\n    },\n    {  \n      \"keyword\":\"제주도\",\n      \"bid\":70,\n      \"device\":\"PC\",\n      \"keywordplus\":false,\n      \"clicks\":1,\n      \"impressions\":150107,\n      \"cost\":70\n    },\n    {  \n      \"keyword\":\"맛집\",\n      \"bid\":70,\n      \"device\":\"PC\",\n      \"keywordplus\":false,\n      \"clicks\":1,\n      \"impressions\":19754,\n      \"cost\":70\n    },\n    {  \n      \"keyword\":\"여행\",\n      \"bid\":70,\n      \"device\":\"PC\",\n      \"keywordplus\":false,\n      \"clicks\":1,\n      \"impressions\":48932,\n      \"cost\":70\n    }\n  ]\n}\n```\n\n{{#if schema }}\n\n## Columns\n[param-table: schema, \"property\" as type]\n\n{{/if}}",
  "#/guides": "# Guide\n\n## Service URL\n\nhttps://api.searchad.naver.com\n\n\n## Getting started\n\n### How to issue the API License and the secret key\n\n1. Sign up for NAVER SEARCH ADVERTISER's Center(http://searchad.naver.com)\n\n2. Go to http://manage.searchad.naver.com\n\n3. Go to Tools > API Manager\n\n4. Create API license\n\n\n\n## Examples\n* You can see sample code in the [examples](http://naver.github.io/searchad-apidoc/#/samples).\n\n\n\n## Notice\n* You can see what's new in the [Notice](http://naver.github.io/searchad-apidoc/#/notice)\n\n\n\n## Release Note\n* You can read about the changes to the Search Ads API in the [Release notes](http://naver.github.io/searchad-apidoc/#/release-notes).",
  "#/operations/POST/~2Fncc~2Fkeywords": "{{ tags }}: {{ summary }}\n=========================\n\n{{#isnt name description }}\n{{ description }}\n{{/isnt }}\n\nRequest\n-------\n\n### HTTP request\n```\n{{ method }} {{ uri }}\n```\n\n### Parameters\n\n[param-table: parameters, [\"request\", summary] as hidden, [\"request\", summary] as required, [\"request\", summary] as optional]\n\n{{#if parameters.0.isArray }}\n### AdKeyword Parameters\n[param-table: parameters[0].schema.items , [\"request\", summary] as hidden, [\"request\", summary] as required, [\"request\", summary] as optional]\n{{/if }}\n\nResponse\n--------\n\n요청이 성공적으로 수행이되면, Response Body에 아래 구조의 데이터가 반환됩니다.\nIf the request is successful, the Response Body will return data with the structure below.:\n\n[param-table: responses[\"200\"].schema, \"property\" as type, [\"response\"] as hidden, [\"response\"] as required, [\"request\"] as optional]",
  "#/operations/POST/~2Fncc~2Fkeywords%7B%3FnccAdgroupId%7D": "{{ tags }}: {{ summary }}\n=========================\n\n{{#isnt name description }}\n{{ description }}\n{{/isnt }}\n\nRequest\n-------\n\n### HTTP request\n```\n{{ method }} {{ uri }}\n```\n\n### Parameters\n\n[param-table: parameters, [\"request\", summary] as hidden, [\"request\", summary] as required, [\"request\", summary] as optional]\n\n{{#if parameters.0.isArray }}\n### AdKeyword Parameters\n[param-table: parameters[0].schema.items, [\"request\", summary] as hint]\n{{/if }}\n\nResponse\n--------\n\n요청이 성공적으로 수행이되면, Response Body에 아래 구조의 데이터가 반환됩니다.\nIf the request is successful, the Response Body will return data with the structure below.:\n\n[param-table: responses[\"200\"].schema, \"property\" as type, [\"response\"] as hidden, [\"response\"] as required, [\"request\"] as optional]",
  "#/operations/PUT/~2Fncc~2Fkeywords%7B%3Ffields%7D": "{{ tags }}: {{ summary }}\n=========================\n\n{{#isnt name description }}\n{{ description }}\n{{/isnt }}\n\nRequest\n-------\n\n### HTTP request\n```\n{{ method }} {{ uri }}\n```\n\n### Parameters\n\n[param-table: parameters, [\"request\", summary] as hidden, [\"request\", summary] as required, [\"request\", summary] as optional]\n\n{{#if parameters.0.isArray }}\n[param-table: parameters[0].schema.items, [\"request\", summary] as hint]\n{{/if }}\n\nResponse\n--------\n\n요청이 성공적으로 수행이되면, Response Body에 아래 구조의 데이터가 반환됩니다.\nIf the request is successful, the Response Body will return data with the structure below.:\n\n[param-table: responses[\"200\"].schema, \"property\" as type, [\"response\"] as hidden, [\"response\"] as required, [\"request\"] as optional]",
  "#/release-notes": "# Release Notes\n\n---\n\n[gist: '78ff7ea9b4f8f9e6e6ffcdca56525e88', 'hidefooter' as flags]",
  "#/samples": "# Sample Code\n\nLanguage | Link\n---|---\nJava | https://github.com/naver/searchad-apidoc/tree/master/java-sample\nPHP | https://github.com/naver/searchad-apidoc/tree/master/php-sample\nC# | https://github.com/naver/searchad-apidoc/tree/master/csharp-sample\n\n\n# API Call\n\n## Issue the API License and the secret key\n\nSEARCH ADVERTISER's Center Experience Zone [Tools > API Manager] Create API license\n\n- API License (`API-KEY`): Attached to the request message\n- Secret key (`API_SECRET`): Used for signature generation of the request message\n\n\n## Generate signature\n\n\n```\nsha256-hmac ( API_SECRET, Milliseconds since Unix Epoch + \".\" + http method + \".\" + request uri )\n```\n\n> Milliseconds since Unix Epoch : http://currentmillis.com/\n\n> ex) `1457082455307.GET./ncc/campaigns`\n\n## Call\n\nHTTP Header\n- X-Timestamp : unix timestamp\n- X-API-KEY : Issued the API License (API-KEY)\n- X-Customer : Customer ID\n- X-Signature : Generated signature\n\ncurl example\n```\n$ curl \\\n  -H \"X-Timestamp: 1457082455307\" \\\n  -H \"X-API-KEY: 0100000000e5b6598263137ca151c351b1ddc6f41da64a8475f4f2dd08c8ca2ef4e4247fa5\" \\\n  -H \"X-Customer: 338047\" \\\n  -H \"X-Signature: PY6keeelL+7HV+498Y83BLv4K65XJRxmfbnZYVzutCA=\" \\\n  {serivce_url}/ncc/campaigns\n```\n\n## Sample messages\nHTTP Request\n```\nGET /ncc/campaigns HTTP/1.1\nHost: {service_url}\nX-Timestamp: 1457082455307\nX-API-KEY: 0100000000e5b6598263137ca151c351b1ddc6f41da64a8475f4f2dd08c8ca2ef4e4247fa5\nX-Customer: 338047\nX-Signature: PY6keeelL+7HV+498Y83BLv4K65XJRxmfbnZYVzutCA=\n(blank-line)\n```\n\nHTTP Response\n```\nHTTP/1.1 200 OK\nx-transaction-id: AJ83GTFPN7FR2\nContent-Length: 1234\nContent-Type:application/json;charset=UTF-8\nDate: Fri, 26 Oct 1979 10:07:36 GMT\n\n[{\n    \"campaignTp\": string,\n    \"customerId\": integer,\n    \"dailyBudget\": integer,\n    \"delFlag\": integer,\n    \"deliveryMethod\": integer,\n    \"editTm\": datetime,\n    \"name\": string,\n    \"nccCampaignId\": string,\n    \"periodEndDt\": datetime,\n    \"periodStartDt\": datetime,\n    \"regTm\": datetime,\n    \"status\": string,\n    \"statusReason\": string,\n    \"trackingMode\": integer,\n    \"trackingUrl\": string,\n    \"useDailyBudget\": integer,\n    \"usePeriod\": integer,\n    \"userLock\": integer\n}]\n\n```",
  "#/tags/MasterReport": "{{ name }}\n==========\n\n{{#isnt name description }}\n{{ description }}\n{{/isnt }}\n\n{{#if resource }}\nResource representations\n------------------------\n\n[resource:resource.schema]\n[param-table: resource.schema, \"property\" as type]\n{{/if}}\n\n{{#if operations }}\nMethods\n-------\n\n[method-list: operations]\n{{/if}}\n\n-------\n[gist: '186ca42e1e8596b0e3dcf74e3a86c04f', 'hidefooter' as flags]",
  "#/tags/StatReport": "{{ name }}\n==========\n\n{{#isnt name description }}\n{{ description }}\n{{/isnt }}\n\n{{#if resource }}\nResource representations\n------------------------\n\n[resource:resource.schema]\n[param-table: resource.schema, \"property\" as type]\n{{/if}}\n\n{{#if operations }}\nMethods\n-------\n\n[method-list: operations]\n{{/if}}\n\n## Stat Report Specification\n### Performance Report (reportTp : AD)\nNo|Property name|Data type|Description\n----|---|---|---\n1|Date|String|Basic date (ISO8601))\n2|CUSTOMER ID|int|CUSTOMER ID\n3|Campaign ID|string|Campaign ID\n4|AD Group ID|string|AD Group ID\n5|AD keyword ID|string|AD keyword ID\n6|AD ID|string|AD ID\n7|Business Channel ID|string|Business Channel ID\n8|Media code|string|Media code\n9|PC Mobile Type|string|PC Mobile Type\n10|Impression|int|Impression count\n11|Click|int|Click count\n12|Cost|real|Cost\n13|Sum of AD rank|int|Sum of AD rank, Average AD rank = Sum of AD rank / Impression\n14|View count | int | Number of times that a video was viewed\n\n### Performance Detail Report (reportTp : AD_DETAIL)\nNo|Property name|Data type|Description\n----|---|---|---\n1|Date |String |Basic date (ISO8601))\n2|CUSTOMER ID|int|CUSTOMER ID\n3|Campaign ID|string|Campaign ID\n4|AD Group ID|string|AD Group ID\n5|AD keyword ID|string |AD keyword ID\n6|AD ID|string|AD ID\n7|Business Channel ID|string|Business Channel ID\n8|Hours|string|Hours of basic date\n9|Region code|string|Region code\n10|Media code|string|Media code\n11|PC Mobile Type|string|PC Mobile Type\n12|Impression|int|Impression count\n13|Click|int|Click count\n14|Cost|real|Cost\n15|Sum of AD rank|int|Sum of AD rank ,Average AD rank = Sum of AD rank / Impression\n16|View count | int | Number of times that a video was viewed\n\n### AD extension Report (reportTp : ADEXTENSION)\nNo|Property name|Data type|Description\n----|---|---|---\n1|Date |String |Basic date (ISO8601))\n2|CUSTOMER ID|int|CUSTOMER ID\n3|Campaign ID|string|Campaign ID\n4|AD Group ID|string|AD Group ID\n5|AD keyword ID|string |AD keyword ID\n6|AD ID|string|AD ID\n7|AD extension ID|string|AD extension ID\n8|AD extension Business Channel ID|string|Business Channel ID linked by AD extension\n9|Media code|string|Media code\n10|PC Mobile Type|string|PC Mobile Type\n11|Impression|int|Impression count\n12|Click|int|Click count\n13|Cost|real|Cost\n14|Sum of AD rank|int|Sum of AD rank , Average AD rank = Sum of AD rank / Impression\n15|View count | int | Number of times that a video was viewed\n\n### KEYWORD PLUS Performance Report (reportTp : EXPKEYWORD)\nNo|Property name|Data type|Description\n----|---|---|---\n1|Date |String |Basic date (ISO8601))\n2|CUSTOMER ID|int|CUSTOMER ID\n3|Campaign ID|string|Campaign ID\n4|AD Group ID|string|AD Group ID\n5|Search Keyword|string|Search Keyword\n6|Media code|string|Media code\n7|PC Mobile Type|string|PC Mobile Type\n8|Impression|int|Impression count\n9|Click|int|Click count\n10|Cost|real|Cost\n11|View count | int | Number of times that a video was viewed\n\n### Conversion Report (reportTp : AD_CONVERSION)\nNo|Property name|Data type|Description\n----|---|---|---\n1|Date |String |Basic date (ISO8601))\n2|CUSTOMER ID|int|CUSTOMER ID\n3|Campaign ID|string|Campaign ID\n4|AD Group ID|string|AD Group ID\n5|AD keyword ID|string |AD keyword ID\n6|AD ID|string|AD ID\n7|Business Channel ID|string|Business Channel ID\n8|Media code|string|Media code\n9|PC Mobile Type|string|PC Mobile Type\n10|Conversion Method|int|1: Direct , 2:Indirect\n11|Conversion Type|int|Conversion types, 1: Purchasing, 2: Subscription, 3: Cart, 4: Advance purchase, 5: Others\n12|Conversion count|int|Conversion count\n13|Sales by conversion|int| Sales by conversion\n\n### Conversion Detail Report (reportTp : AD_CONVERSION_DETAIL)\nNo|Property name|Data type|Description\n----|---|---|---\n1|Date |String |Basic date (ISO8601))\n2|CUSTOMER ID|int|CUSTOMER ID\n3|Campaign ID|string|Campaign ID\n4|AD Group ID|string|AD Group ID\n5|AD keyword ID|string |AD keyword ID\n6|AD ID|string|AD ID\n7|Business Channel ID|string|Business Channel ID\n8|Hours|string|Hours of basic date\n9|Region code|string|Region code\n10|Media code|string|Media code\n11|PC Mobile Type|string|PC Mobile Type\n12|Conversion Method|int|1: Direct , 2:Indirect\n13|Conversion Type|int|Conversion types, 1: Purchasing, 2: Subscription, 3: Cart, 4: Advance purchase, 5: Others\n14|Conversion count|int|Conversion count\n15|Sales by conversion|int| Sales by conversion\n\n### AD extension Conversion Report (reportTp : ADEXTENSION_CONVERSION)\nNo|Property name|Data type|Description\n----|---|---|---\n1|Date |String |Basic date (ISO8601))\n2|CUSTOMER ID|int|CUSTOMER ID\n3|Campaign ID|string|Campaign ID\n4|AD Group ID|string|AD Group ID\n5|AD keyword ID|string |AD keyword ID\n6|AD ID|string|AD ID\n7|AD extension ID|string|AD extension ID\n8|AD extension Business Channel ID|string|Business Channel ID linked by AD extension\n9|Media code|string|Media code\n10|PC Mobile Type|string|PC Mobile Type\n11|Conversion Method|int|1: Direct ,2:Indirect\n12|Conversion Type|int|Conversion types 1: Purchasing,2: Subscription,3: Cart,4: Advance purchase,5: Others\n13|Conversion count|int|Conversion count\n14|Sales by conversion|int| Sales by conversion\n\n### NAVER PAY Report (reportTp : NAVERPAY_CONVERSION)\nNo|Property name|Data type|Description\n----|---|---|---\n1|Date |String |Basic date (ISO8601))\n2|CUSTOMER ID|int|CUSTOMER ID\n3|Campaign ID|string|Campaign ID\n4|AD Group ID|string|AD Group ID\n5|AD keyword ID|string |AD keyword ID\n6|AD ID|string|AD ID\n7|Media code|string|Media code\n8|PC Mobile Type|string|PC Mobile Type\n9|Conversion count|int|Conversion count\n10|Sales by conversion|int| Sales by conversion\n\n### Cost Report (reportTp : AD_COST)\n* `AD_COST` has been replaced by Bizmoney: getCost operation\n\n### Shopping Campaign Search Keyword Performance Detail Report (reportTp : SHOPPINGKEYWORD_DETAIL)\nNo|Property name|Data type|Description\n----|---|---|---\n1|Date |String |Basic date (ISO8601))\n2|CUSTOMER ID|int|CUSTOMER ID\n3|Campaign ID|string|Campaign ID\n4|AD Group ID|string|AD Group ID\n5|Search keyword|string|Search Keyword\n6|AD ID|string|AD ID\n7|Business Channel ID|string|Business Channel ID\n8|Hours|string|Hours of basic date\n9|Region code|string|Region code\n10|Media code|string|Media code\n11|PC Mobile Type|string|PC Mobile Type\n12|Impression|int|Impression count\n13|Click|int|Click count\n14|Cost|long|Cost\n15|Sum of AD rank|int|Sum of AD rank ,Average AD rank = Sum of AD rank / Impression\n16|View count | int | Number of times that a video was viewed\n\n### Shopping Campaign Search Keyword Conversion Detail Report (reportTp : SHOPPINGKEYWORD_CONVERSION_DETAIL)\nNo|Property name|Data type|Description\n----|---|---|---\n1|Date |String |Basic date (ISO8601))\n2|CUSTOMER ID|int|CUSTOMER ID\n3|Campaign ID|string|Campaign ID\n4|AD Group ID|string|AD Group ID\n5|Search keyword|string|Search Keyword\n6|AD ID|string|AD ID\n7|Business Channel ID|string|Business Channel ID\n8|Hours|string|Hours of basic date\n9|Region code|string|Region code\n10|Media code|string|Media code\n11|PC Mobile Type|string|PC Mobile Type\n12|Conversion Method|int|1: Direct , 2:Indirect\n13|Conversion Type|int|Conversion types, 1: Purchasing, 2: Subscription, 3: Cart, 4: Advance purchase, 5: Others\n14|Conversion count|int|Conversion count\n15|Sales by conversion|long| Sales by conversion\n\n### Shopping Campaign Brand Type Product Performance Report(reportTp : SHOPPINGBRANDPRODUCT)\nNo|Property name|Data type|Description\n----|---|---|---\n1 | Date | String | Basic date (ISO8601))\n2 | CUSTOMER ID | int | CUSTOMER ID\n3 | Campaign ID | string | Campaign ID\n4 | AD Group ID | string | AD Group ID\n5 | NV_MID | string | Unique key of Shopping Product\n6 | Business   Channel ID | string | Business Channel ID\n7 | Media code | string |  Media code\n8 | PC Mobile Type | string | PC Mobile Type\n9 | Impression | int |Impression count\n10 | Click | int | Click count\n11 | Cost | real | Cost\n12 | View count | int | Number of times that a video was viewed\n\n\n### Shopping Campaign Brand Type Product Conversion Report(reportTp :SHOPPINGBRANDPRODUCT_CONVERSION)\nNo|Property name|Data type|Description\n----|---|---|---\n1 | Date | String | Basic date (ISO8601))\n2 | CUSTOMER ID | int | CUSTOMER ID\n3 | Campaign ID | string | Campaign ID\n4 | AD Group ID | string | AD Group ID\n5 | NV_MID | string | Unique key of Shopping Product\n7 | Business Channel ID|string|Business Channel ID\n7 | Media code | string | Media code\n8 | PC Mobile Type | string | PC Mobile Type\n9 | Conversion Method | int | 1: Direct , 2:Indirect\n10 | Conversion Type | int | Conversion types, 1: Purchasing, 2: Subscription, 3: Cart, 4: Advance purchase, 5: Others\n11 | Conversion count | int | Conversion count\n12 | Sales by conversion | long | Sales by conversion\n",
  "#/faq": "# FAQ"
}
